{'files': {'/home/andrew/code/orrery/include/sphere.h': {'word': '/home/andrew/code/orrery/include/sphere.h', 'action__path': '/home/andrew/code/orrery/include/sphere.h', 'kind': 'jump_list', 'abbr': '/home/andrew/code/orrery/include/sphere.h', 'action__directory': '/home/andrew/code/orrery/include'}, '/home/andrew/code/orrery/include/linear_algebra.h': {'word': '/home/andrew/code/orrery/include/linear_algebra.h', 'action__path': '/home/andrew/code/orrery/include/linear_algebra.h', 'kind': 'jump_list', 'abbr': '/home/andrew/code/orrery/include/linear_algebra.h', 'action__directory': '/home/andrew/code/orrery/include'}, '/home/andrew/code/orrery/.ycm_extra_conf.py': {'word': '/home/andrew/code/orrery/.ycm_extra_conf.py', 'action__path': '/home/andrew/code/orrery/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': '/home/andrew/code/orrery/.ycm_extra_conf.py', 'action__directory': '/home/andrew/code/orrery'}, '/home/andrew/code/orrery/src/gl.c': {'word': '/home/andrew/code/orrery/src/gl.c', 'action__path': '/home/andrew/code/orrery/src/gl.c', 'kind': 'jump_list', 'abbr': 'gl.c', 'action__directory': '/home/andrew/code/orrery/src'}, '/home/andrew/code/orrery/src/linear_algebra.c': {'word': '/home/andrew/code/orrery/src/linear_algebra.c', 'action__path': '/home/andrew/code/orrery/src/linear_algebra.c', 'kind': 'jump_list', 'abbr': 'linear_algebra.c', 'action__directory': '/home/andrew/code/orrery/src'}, '/home/andrew/code/orrery/src/texture.c': {'word': '/home/andrew/code/orrery/src/texture.c', 'action__path': '/home/andrew/code/orrery/src/texture.c', 'kind': 'jump_list', 'abbr': 'texture.c', 'action__directory': '/home/andrew/code/orrery/src'}, '/home/andrew/code/orrery/src/sphere.c': {'word': '/home/andrew/code/orrery/src/sphere.c', 'action__path': '/home/andrew/code/orrery/src/sphere.c', 'kind': 'jump_list', 'abbr': 'sphere.c', 'action__directory': '/home/andrew/code/orrery/src'}, '/home/andrew/code/orrery/include/texture.h': {'word': '/home/andrew/code/orrery/include/texture.h', 'action__path': '/home/andrew/code/orrery/include/texture.h', 'kind': 'jump_list', 'abbr': '/home/andrew/code/orrery/include/texture.h', 'action__directory': '/home/andrew/code/orrery/include'}, '/home/andrew/code/orrery/include/mesh.h': {'word': '/home/andrew/code/orrery/include/mesh.h', 'action__path': '/home/andrew/code/orrery/include/mesh.h', 'kind': 'jump_list', 'abbr': '/home/andrew/code/orrery/include/mesh.h', 'action__directory': '/home/andrew/code/orrery/include'}, '/home/andrew/code/orrery/src/orrery.c': {'word': '/home/andrew/code/orrery/src/orrery.c', 'action__path': '/home/andrew/code/orrery/src/orrery.c', 'kind': 'jump_list', 'abbr': 'orrery.c', 'action__directory': '/home/andrew/code/orrery/src'}, '/home/andrew/code/orrery/include/gl.h': {'word': '/home/andrew/code/orrery/include/gl.h', 'action__path': '/home/andrew/code/orrery/include/gl.h', 'kind': 'jump_list', 'abbr': '/home/andrew/code/orrery/include/gl.h', 'action__directory': '/home/andrew/code/orrery/include'}}, 'tags': [{'word': 'DirectoryOfThisScript', 'action__pattern': '\M^def DirectoryOfThisScript():$', 'action__path': '/home/andrew/code/orrery/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'DirectoryOfThisScript      @/home/a..ra_conf.py  def DirectoryOfThisScript():', 'action__tagname': 'DirectoryOfThisScript'}, {'word': 'DrawableObject', 'action__pattern': '\M^} DrawableObject;$', 'action__path': '/home/andrew/code/orrery/include/gl.h', 'kind': 'jump_list', 'abbr': 'DrawableObject             @/home/a..clude/gl.h  } DrawableObject;', 'action__tagname': 'DrawableObject'}, {'word': 'FlagsForFile', 'action__pattern': '\M^def FlagsForFile( filename, **kwargs ):$', 'action__path': '/home/andrew/code/orrery/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'FlagsForFile               @/home/a..ra_conf.py  def FlagsForFile( filename, **kwargs ):', 'action__tagname': 'FlagsForFile'}, {'word': 'GL_H', 'action__path': '/home/andrew/code/orrery/include/gl.h', 'action__line': 2, 'kind': 'jump_list', 'abbr': 'GL_H                       @/home/a..clude/gl.h  line:2', 'action__tagname': 'GL_H'}, {'word': 'GetCompilationInfoForFile', 'action__pattern': '\M^def GetCompilationInfoForFile( filename ):$', 'action__path': '/home/andrew/code/orrery/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'GetCompilationInfoForFile  @/home/a..ra_conf.py  def GetCompilationInfoForFile( filename ):', 'action__tagname': 'GetCompilationInfoForFile'}, {'word': 'IsHeaderFile', 'action__pattern': '\M^def IsHeaderFile( filename ):$', 'action__path': '/home/andrew/code/orrery/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'IsHeaderFile               @/home/a..ra_conf.py  def IsHeaderFile( filename ):', 'action__tagname': 'IsHeaderFile'}, {'word': 'LINEAR_ALGEBRA_H', 'action__path': '/home/andrew/code/orrery/include/linear_algebra.h', 'action__line': 2, 'kind': 'jump_list', 'abbr': 'LINEAR_ALGEBRA_H           @/home/a.._algebra.h  line:2', 'action__tagname': 'LINEAR_ALGEBRA_H'}, {'word': 'MESH_H', 'action__path': '/home/andrew/code/orrery/include/mesh.h', 'action__line': 2, 'kind': 'jump_list', 'abbr': 'MESH_H                     @/home/a..ude/mesh.h  line:2', 'action__tagname': 'MESH_H'}, {'word': 'M_PI', 'action__path': '/home/andrew/code/orrery/include/linear_algebra.h', 'action__line': 4, 'kind': 'jump_list', 'abbr': 'M_PI                       @/home/a.._algebra.h  line:4', 'action__tagname': 'M_PI'}, {'word': 'M_PI_2', 'action__path': '/home/andrew/code/orrery/include/linear_algebra.h', 'action__line': 5, 'kind': 'jump_list', 'abbr': 'M_PI_2                     @/home/a.._algebra.h  line:5', 'action__tagname': 'M_PI_2'}, {'word': 'MakeRelativePathsInFlagsAbsolute', 'action__pattern': '\M^def MakeRelativePathsInFlagsAbsolute( flags, working_directory ):$', 'action__path': '/home/andrew/code/orrery/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'MakeRela..InFlagsAbsolute  @/home/a..ra_conf.py  def MakeRelativePathsInFlagsAbsolute( flags, working_directory ):', 'action__tagname': 'MakeRelativePathsInFlagsAbsolute'}, {'word': 'Mesh', 'action__pattern': '\M^} Mesh;$', 'action__path': '/home/andrew/code/orrery/include/mesh.h', 'kind': 'jump_list', 'abbr': 'Mesh                       @/home/a..ude/mesh.h  } Mesh;', 'action__tagname': 'Mesh'}, {'word': 'SOURCE_EXTENSIONS', 'action__pattern': '\M^SOURCE_EXTENSIONS = [ ''.cpp'', ''.cxx'', ''.cc'', ''.c'', ''.m'', ''.mm'' ]$', 'action__path': '/home/andrew/code/orrery/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'SOURCE_EXTENSIONS          @/home/a..ra_conf.py  SOURCE_EXTENSIONS = [ ''.cpp'', ''.cxx'', ''.cc'', ''.c'', ''.m'', ''.mm'' ]', 'action__tagname': 'SOURCE_EXTENSIONS'}, {'word': 'SPHERE_H', 'action__path': '/home/andrew/code/orrery/include/sphere.h', 'action__line': 2, 'kind': 'jump_list', 'abbr': 'SPHERE_H                   @/home/a..e/sphere.h  line:2', 'action__tagname': 'SPHERE_H'}, {'word': 'TEXTURE_H', 'action__path': '/home/andrew/code/orrery/include/texture.h', 'action__line': 2, 'kind': 'jump_list', 'abbr': 'TEXTURE_H                  @/home/a../texture.h  line:2', 'action__tagname': 'TEXTURE_H'}, {'word': 'Texture', 'action__pattern': '\M^} Texture ;$', 'action__path': '/home/andrew/code/orrery/include/texture.h', 'kind': 'jump_list', 'abbr': 'Texture                    @/home/a../texture.h  } Texture ;', 'action__tagname': 'Texture'}, {'word': 'VAO', 'action__pattern': '\M^  GLuint VAO;$', 'action__path': '/home/andrew/code/orrery/include/gl.h', 'kind': 'jump_list', 'abbr': 'VAO                        @/home/a..clude/gl.h    GLuint VAO;', 'action__tagname': 'VAO'}, {'word': 'Vertex', 'action__pattern': '\M^} Vertex;$', 'action__path': '/home/andrew/code/orrery/include/mesh.h', 'kind': 'jump_list', 'abbr': 'Vertex                     @/home/a..ude/mesh.h  } Vertex;', 'action__tagname': 'Vertex'}, {'word': 'bind_texture', 'action__pattern': '\M^void bind_texture(Texture* t) {$', 'action__path': 'texture.c', 'kind': 'jump_list', 'abbr': 'bind_texture               @texture.c            void bind_texture(Texture* t) {', 'action__tagname': 'bind_texture'}, {'word': 'build_sphere', 'action__pattern': '\M^Mesh* build_sphere(unsigned int radius,$', 'action__path': 'sphere.c', 'kind': 'jump_list', 'abbr': 'build_sphere               @sphere.c             Mesh* build_sphere(unsigned int radius,', 'action__tagname': 'build_sphere'}, {'word': 'calc_num_indices', 'action__pattern': '\M^unsigned int calc_num_indices(unsigned int rings,$', 'action__path': 'sphere.c', 'kind': 'jump_list', 'abbr': 'calc_num_indices           @sphere.c             unsigned int calc_num_indices(unsigned int rings,', 'action__tagname': 'calc_num_indices'}, {'word': 'calc_num_vertices', 'action__pattern': '\M^unsigned int calc_num_vertices(unsigned int rings,$', 'action__path': 'sphere.c', 'kind': 'jump_list', 'abbr': 'calc_num_vertices          @sphere.c             unsigned int calc_num_vertices(unsigned int rings,', 'action__tagname': 'calc_num_vertices'}, {'word': 'compilation_database_folder', 'action__pattern': '\M^compilation_database_folder = ''''$', 'action__path': '/home/andrew/code/orrery/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'compilat..database_folder  @/home/a..ra_conf.py  compilation_database_folder = ''''', 'action__tagname': 'compilation_database_folder'}, {'word': 'create_object', 'action__pattern': '\M^DrawableObject* create_object(Mesh* mesh, Texture* texture) {$', 'action__path': 'gl.c', 'kind': 'jump_list', 'abbr': 'create_object              @gl.c                 DrawableObject* create_object(Mesh* mesh, Texture* texture) {', 'action__tagname': 'create_object'}, {'word': 'create_texture', 'action__pattern': '\M^Texture* create_texture() {$', 'action__path': 'texture.c', 'kind': 'jump_list', 'abbr': 'create_texture             @texture.c            Texture* create_texture() {', 'action__tagname': 'create_texture'}, {'word': 'database', 'action__pattern': '\M^  database = None$', 'action__path': '/home/andrew/code/orrery/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'database                   @/home/a..ra_conf.py    database = None', 'action__tagname': 'database'}, {'word': 'database', 'action__pattern': '\M^  database = ycm_core.CompilationDatabase( compilation_database_folder )$', 'action__path': '/home/andrew/code/orrery/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'database                   @/home/a..ra_conf.py    database = ycm_core.CompilationDatabase( compilation_database_folder )', 'action__tagname': 'database'}, {'word': 'display', 'action__pattern': '\M^static void display(GLFWwindow* window) {$', 'action__path': 'orrery.c', 'kind': 'jump_list', 'abbr': 'display                    @orrery.c             static void display(GLFWwindow* window) {', 'action__tagname': 'display'}, {'word': 'drawable_object', 'action__pattern': '\M^typedef struct drawable_object {$', 'action__path': '/home/andrew/code/orrery/include/gl.h', 'kind': 'jump_list', 'abbr': 'drawable_object            @/home/a..clude/gl.h  typedef struct drawable_object {', 'action__tagname': 'drawable_object'}, {'word': 'error_callback', 'action__pattern': '\M^static void error_callback(int error, const char* description) {$', 'action__path': 'orrery.c', 'kind': 'jump_list', 'abbr': 'error_callback             @orrery.c             static void error_callback(int error, const char* description) {', 'action__tagname': 'error_callback'}, {'word': 'flags', 'action__pattern': '\M^flags = [$', 'action__path': '/home/andrew/code/orrery/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'flags                      @/home/a..ra_conf.py  flags = [', 'action__tagname': 'flags'}, {'word': 'id', 'action__pattern': '\M^  GLuint id;$', 'action__path': '/home/andrew/code/orrery/include/texture.h', 'kind': 'jump_list', 'abbr': 'id                         @/home/a../texture.h    GLuint id;', 'action__tagname': 'id'}, {'word': 'indices', 'action__pattern': '\M^  unsigned int* indices;$', 'action__path': '/home/andrew/code/orrery/include/mesh.h', 'kind': 'jump_list', 'abbr': 'indices                    @/home/a..ude/mesh.h    unsigned int* indices;', 'action__tagname': 'indices'}, {'word': 'key_callback', 'action__pattern': '\M^static void key_callback(GLFWwindow* window, int key, int scancode,$', 'action__path': 'orrery.c', 'kind': 'jump_list', 'abbr': 'key_callback               @orrery.c             static void key_callback(GLFWwindow* window, int key, int scancode,', 'action__tagname': 'key_callback'}, {'word': 'main', 'action__pattern': '\M^int main() {$', 'action__path': 'orrery.c', 'kind': 'jump_list', 'abbr': 'main                       @orrery.c             int main() {', 'action__tagname': 'main'}, {'word': 'mat4x4', 'action__pattern': '\M^typedef vec4 mat4x4[4];$', 'action__path': '/home/andrew/code/orrery/include/linear_algebra.h', 'kind': 'jump_list', 'abbr': 'mat4x4                     @/home/a.._algebra.h  typedef vec4 mat4x4[4];', 'action__tagname': 'mat4x4'}, {'word': 'mat4x4_add', 'action__pattern': '\M^void mat4x4_add(mat4x4 r, mat4x4 const a, mat4x4 const b) {$', 'action__path': 'linear_algebra.c', 'kind': 'jump_list', 'abbr': 'mat4x4_add                 @linear_algebra.c     void mat4x4_add(mat4x4 r, mat4x4 const a, mat4x4 const b) {', 'action__tagname': 'mat4x4_add'}, {'word': 'mesh', 'action__pattern': '\M^  Mesh* mesh;$', 'action__path': '/home/andrew/code/orrery/include/gl.h', 'kind': 'jump_list', 'abbr': 'mesh                       @/home/a..clude/gl.h    Mesh* mesh;', 'action__tagname': 'mesh'}, {'word': 'mesh', 'action__pattern': '\M^typedef struct mesh {$', 'action__path': '/home/andrew/code/orrery/include/mesh.h', 'kind': 'jump_list', 'abbr': 'mesh                       @/home/a..ude/mesh.h  typedef struct mesh {', 'action__tagname': 'mesh'}, {'word': 'normal', 'action__pattern': '\M^  vec3 normal;$', 'action__path': '/home/andrew/code/orrery/include/mesh.h', 'kind': 'jump_list', 'abbr': 'normal                     @/home/a..ude/mesh.h    vec3 normal;', 'action__tagname': 'normal'}, {'word': 'num_indices', 'action__pattern': '\M^  unsigned int num_indices, num_vertices;$', 'action__path': '/home/andrew/code/orrery/include/mesh.h', 'kind': 'jump_list', 'abbr': 'num_indices                @/home/a..ude/mesh.h    unsigned int num_indices, num_vertices;', 'action__tagname': 'num_indices'}, {'word': 'num_vertices', 'action__pattern': '\M^  unsigned int num_indices, num_vertices;$', 'action__path': '/home/andrew/code/orrery/include/mesh.h', 'kind': 'jump_list', 'abbr': 'num_vertices               @/home/a..ude/mesh.h    unsigned int num_indices, num_vertices;', 'action__tagname': 'num_vertices'}, {'word': 'position', 'action__pattern': '\M^  vec3 position;$', 'action__path': '/home/andrew/code/orrery/include/mesh.h', 'kind': 'jump_list', 'abbr': 'position                   @/home/a..ude/mesh.h    vec3 position;', 'action__tagname': 'position'}, {'word': 'tex_coords', 'action__pattern': '\M^  vec2 tex_coords;$', 'action__path': '/home/andrew/code/orrery/include/mesh.h', 'kind': 'jump_list', 'abbr': 'tex_coords                 @/home/a..ude/mesh.h    vec2 tex_coords;', 'action__tagname': 'tex_coords'}, {'word': 'texture', 'action__pattern': '\M^  Texture* texture;$', 'action__path': '/home/andrew/code/orrery/include/gl.h', 'kind': 'jump_list', 'abbr': 'texture                    @/home/a..clude/gl.h    Texture* texture;', 'action__tagname': 'texture'}, {'word': 'texture', 'action__pattern': '\M^typedef struct texture {$', 'action__path': '/home/andrew/code/orrery/include/texture.h', 'kind': 'jump_list', 'abbr': 'texture                    @/home/a../texture.h  typedef struct texture {', 'action__tagname': 'texture'}, {'word': 'unbind_texture', 'action__pattern': '\M^void unbind_texture() {$', 'action__path': 'texture.c', 'kind': 'jump_list', 'abbr': 'unbind_texture             @texture.c            void unbind_texture() {', 'action__tagname': 'unbind_texture'}, {'word': 'vec2', 'action__pattern': '\M^typedef float vec2[2];$', 'action__path': '/home/andrew/code/orrery/include/linear_algebra.h', 'kind': 'jump_list', 'abbr': 'vec2                       @/home/a.._algebra.h  typedef float vec2[2];', 'action__tagname': 'vec2'}, {'word': 'vec3', 'action__pattern': '\M^typedef float vec3[3];$', 'action__path': '/home/andrew/code/orrery/include/linear_algebra.h', 'kind': 'jump_list', 'abbr': 'vec3                       @/home/a.._algebra.h  typedef float vec3[3];', 'action__tagname': 'vec3'}, {'word': 'vec3_add', 'action__pattern': '\M^void vec3_add(vec3 r, vec3 const a, vec3 const b) {$', 'action__path': 'linear_algebra.c', 'kind': 'jump_list', 'abbr': 'vec3_add                   @linear_algebra.c     void vec3_add(vec3 r, vec3 const a, vec3 const b) {', 'action__tagname': 'vec3_add'}, {'word': 'vec3_negate', 'action__pattern': '\M^void vec3_negate(vec3 r, vec3 const a) {$', 'action__path': 'linear_algebra.c', 'kind': 'jump_list', 'abbr': 'vec3_negate                @linear_algebra.c     void vec3_negate(vec3 r, vec3 const a) {', 'action__tagname': 'vec3_negate'}, {'word': 'vec3_print', 'action__pattern': '\M^void vec3_print(vec3 const a) {$', 'action__path': 'linear_algebra.c', 'kind': 'jump_list', 'abbr': 'vec3_print                 @linear_algebra.c     void vec3_print(vec3 const a) {', 'action__tagname': 'vec3_print'}, {'word': 'vec3_scale', 'action__pattern': '\M^void vec3_scale(vec3 r, vec3 const a, float s) {$', 'action__path': 'linear_algebra.c', 'kind': 'jump_list', 'abbr': 'vec3_scale                 @linear_algebra.c     void vec3_scale(vec3 r, vec3 const a, float s) {', 'action__tagname': 'vec3_scale'}, {'word': 'vec3_sub', 'action__pattern': '\M^void vec3_sub(vec3 r, vec3 const a, vec3 const b) {$', 'action__path': 'linear_algebra.c', 'kind': 'jump_list', 'abbr': 'vec3_sub                   @linear_algebra.c     void vec3_sub(vec3 r, vec3 const a, vec3 const b) {', 'action__tagname': 'vec3_sub'}, {'word': 'vec4', 'action__pattern': '\M^typedef float vec4[4];$', 'action__path': '/home/andrew/code/orrery/include/linear_algebra.h', 'kind': 'jump_list', 'abbr': 'vec4                       @/home/a.._algebra.h  typedef float vec4[4];', 'action__tagname': 'vec4'}, {'word': 'vertex', 'action__pattern': '\M^typedef struct vertex {$', 'action__path': '/home/andrew/code/orrery/include/mesh.h', 'kind': 'jump_list', 'abbr': 'vertex                     @/home/a..ude/mesh.h  typedef struct vertex {', 'action__tagname': 'vertex'}, {'word': 'vertices', 'action__pattern': '\M^  struct vertex* vertices;$', 'action__path': '/home/andrew/code/orrery/include/mesh.h', 'kind': 'jump_list', 'abbr': 'vertices                   @/home/a..ude/mesh.h    struct vertex* vertices;', 'action__tagname': 'vertices'}], 'time': 1417778702}
