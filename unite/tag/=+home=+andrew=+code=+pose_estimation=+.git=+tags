{'files': {'/home/andrew/code/pose_estimation/include/pose_estimation.h': {'word': '/home/andrew/code/pose_estimation/include/pose_estimation.h', 'action__path': '/home/andrew/code/pose_estimation/include/pose_estimation.h', 'kind': 'jump_list', 'abbr': 'include/pose_estimation.h', 'action__directory': '/home/andrew/code/pose_estimation/include'}, '/home/andrew/code/pose_estimation/modules/io/include/sphere_model_writer.h': {'word': '/home/andrew/code/pose_estimation/modules/io/include/sphere_model_writer.h', 'action__path': '/home/andrew/code/pose_estimation/modules/io/include/sphere_model_writer.h', 'kind': 'jump_list', 'abbr': 'modules/io/include/sphere_model_writer.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/io/include'}, '/home/andrew/code/pose_estimation/build/apps/abalone_forest/src/Makefile': {'word': '/home/andrew/code/pose_estimation/build/apps/abalone_forest/src/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/apps/abalone_forest/src/Makefile', 'kind': 'jump_list', 'abbr': 'build/apps/abalone_forest/src/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/apps/abalone_forest/src'}, '/home/andrew/code/pose_estimation/build/apps/compare_poses/Makefile': {'word': '/home/andrew/code/pose_estimation/build/apps/compare_poses/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/apps/compare_poses/Makefile', 'kind': 'jump_list', 'abbr': 'build/apps/compare_poses/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/apps/compare_poses'}, '/home/andrew/code/pose_estimation/modules/gl/include/offscreen_buffer.h': {'word': '/home/andrew/code/pose_estimation/modules/gl/include/offscreen_buffer.h', 'action__path': '/home/andrew/code/pose_estimation/modules/gl/include/offscreen_buffer.h', 'kind': 'jump_list', 'abbr': 'modules/gl/include/offscreen_buffer.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/gl/include'}, '/home/andrew/code/pose_estimation/modules/optim/src/particle_swarm.cc': {'word': '/home/andrew/code/pose_estimation/modules/optim/src/particle_swarm.cc', 'action__path': '/home/andrew/code/pose_estimation/modules/optim/src/particle_swarm.cc', 'kind': 'jump_list', 'abbr': 'modules/optim/src/particle_swarm.cc', 'action__directory': '/home/andrew/code/pose_estimation/modules/optim/src'}, '/home/andrew/code/pose_estimation/ext/lodepng/lodepng.cpp': {'word': '/home/andrew/code/pose_estimation/ext/lodepng/lodepng.cpp', 'action__path': '/home/andrew/code/pose_estimation/ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'ext/lodepng/lodepng.cpp', 'action__directory': '/home/andrew/code/pose_estimation/ext/lodepng'}, '/home/andrew/code/pose_estimation/modules/core/include/old_pose.h': {'word': '/home/andrew/code/pose_estimation/modules/core/include/old_pose.h', 'action__path': '/home/andrew/code/pose_estimation/modules/core/include/old_pose.h', 'kind': 'jump_list', 'abbr': 'modules/core/include/old_pose.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/core/include'}, '/home/andrew/code/pose_estimation/build/modules/geom/include/Makefile': {'word': '/home/andrew/code/pose_estimation/build/modules/geom/include/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/modules/geom/include/Makefile', 'kind': 'jump_list', 'abbr': 'build/modules/geom/include/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/modules/geom/include'}, '/home/andrew/code/pose_estimation/modules/gl/src/quadric_hand.cc': {'word': '/home/andrew/code/pose_estimation/modules/gl/src/quadric_hand.cc', 'action__path': '/home/andrew/code/pose_estimation/modules/gl/src/quadric_hand.cc', 'kind': 'jump_list', 'abbr': 'modules/gl/src/quadric_hand.cc', 'action__directory': '/home/andrew/code/pose_estimation/modules/gl/src'}, '/home/andrew/code/pose_estimation/apps/multicam_mesh_viewer/.ycm_extra_conf.py': {'word': '/home/andrew/code/pose_estimation/apps/multicam_mesh_viewer/.ycm_extra_conf.py', 'action__path': '/home/andrew/code/pose_estimation/apps/multicam_mesh_viewer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'apps/multicam_mesh_viewer/.ycm_extra_conf.py', 'action__directory': '/home/andrew/code/pose_estimation/apps/multicam_mesh_viewer'}, '/home/andrew/code/pose_estimation/build/apps/pose_interpolator/src/Makefile': {'word': '/home/andrew/code/pose_estimation/build/apps/pose_interpolator/src/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/apps/pose_interpolator/src/Makefile', 'kind': 'jump_list', 'abbr': 'build/apps/pose_interpolator/src/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/apps/pose_interpolator/src'}, '/home/andrew/code/pose_estimation/modules/ml/include/tree_node.h': {'word': '/home/andrew/code/pose_estimation/modules/ml/include/tree_node.h', 'action__path': '/home/andrew/code/pose_estimation/modules/ml/include/tree_node.h', 'kind': 'jump_list', 'abbr': 'modules/ml/include/tree_node.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/ml/include'}, '/home/andrew/code/pose_estimation/apps/multicam_mesh_viewer/include/mc_mesh_viewer_options.h': {'word': '/home/andrew/code/pose_estimation/apps/multicam_mesh_viewer/include/mc_mesh_viewer_options.h', 'action__path': '/home/andrew/code/pose_estimation/apps/multicam_mesh_viewer/include/mc_mesh_viewer_options.h', 'kind': 'jump_list', 'abbr': 'apps/multicam_mesh_viewer/include/mc_mesh_viewer_options.h', 'action__directory': '/home/andrew/code/pose_estimation/apps/multicam_mesh_viewer/include'}, '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig/edge_distance_map.hpp': {'word': '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig/edge_distance_map.hpp', 'action__path': '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig/edge_distance_map.hpp', 'kind': 'jump_list', 'abbr': 'ext/objective_functions/xing/aig/edge_distance_map.hpp', 'action__directory': '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig'}, '/home/andrew/code/pose_estimation/modules/gl/src/surface.cc': {'word': '/home/andrew/code/pose_estimation/modules/gl/src/surface.cc', 'action__path': '/home/andrew/code/pose_estimation/modules/gl/src/surface.cc', 'kind': 'jump_list', 'abbr': 'modules/gl/src/surface.cc', 'action__directory': '/home/andrew/code/pose_estimation/modules/gl/src'}, '/home/andrew/code/pose_estimation/build/apps/sph_renderer/src/Makefile': {'word': '/home/andrew/code/pose_estimation/build/apps/sph_renderer/src/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/apps/sph_renderer/src/Makefile', 'kind': 'jump_list', 'abbr': 'build/apps/sph_renderer/src/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/apps/sph_renderer/src'}, '/home/andrew/code/pose_estimation/build/apps/tang_lrf/Makefile': {'word': '/home/andrew/code/pose_estimation/build/apps/tang_lrf/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/apps/tang_lrf/Makefile', 'kind': 'jump_list', 'abbr': 'build/apps/tang_lrf/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/apps/tang_lrf'}, '/home/andrew/code/pose_estimation/modules/core/include/options_exceptions.h': {'word': '/home/andrew/code/pose_estimation/modules/core/include/options_exceptions.h', 'action__path': '/home/andrew/code/pose_estimation/modules/core/include/options_exceptions.h', 'kind': 'jump_list', 'abbr': 'modules/core/include/options_exceptions.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/core/include'}, '/home/andrew/code/pose_estimation/build/apps/sphere_model_maker/src/Makefile': {'word': '/home/andrew/code/pose_estimation/build/apps/sphere_model_maker/src/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/apps/sphere_model_maker/src/Makefile', 'kind': 'jump_list', 'abbr': 'build/apps/sphere_model_maker/src/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/apps/sphere_model_maker/src'}, '/home/andrew/code/pose_estimation/modules/gl/include/quadric_hand.h': {'word': '/home/andrew/code/pose_estimation/modules/gl/include/quadric_hand.h', 'action__path': '/home/andrew/code/pose_estimation/modules/gl/include/quadric_hand.h', 'kind': 'jump_list', 'abbr': 'modules/gl/include/quadric_hand.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/gl/include'}, '/home/andrew/code/pose_estimation/ext/objective_functions/make-module': {'word': '/home/andrew/code/pose_estimation/ext/objective_functions/make-module', 'action__path': '/home/andrew/code/pose_estimation/ext/objective_functions/make-module', 'kind': 'jump_list', 'abbr': 'ext/objective_functions/make-module', 'action__directory': '/home/andrew/code/pose_estimation/ext/objective_functions'}, '/home/andrew/code/pose_estimation/build/apps/edge_shader_viewer/Makefile': {'word': '/home/andrew/code/pose_estimation/build/apps/edge_shader_viewer/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/apps/edge_shader_viewer/Makefile', 'kind': 'jump_list', 'abbr': 'build/apps/edge_shader_viewer/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/apps/edge_shader_viewer'}, '/home/andrew/code/pose_estimation/build/apps/gbuffer_viewer/src/Makefile': {'word': '/home/andrew/code/pose_estimation/build/apps/gbuffer_viewer/src/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/apps/gbuffer_viewer/src/Makefile', 'kind': 'jump_list', 'abbr': 'build/apps/gbuffer_viewer/src/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/apps/gbuffer_viewer/src'}, '/home/andrew/code/pose_estimation/modules/ml/include/split_function.h': {'word': '/home/andrew/code/pose_estimation/modules/ml/include/split_function.h', 'action__path': '/home/andrew/code/pose_estimation/modules/ml/include/split_function.h', 'kind': 'jump_list', 'abbr': 'modules/ml/include/split_function.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/ml/include'}, '/home/andrew/code/pose_estimation/modules/io/src/tang_pose_reader.cc': {'word': '/home/andrew/code/pose_estimation/modules/io/src/tang_pose_reader.cc', 'action__path': '/home/andrew/code/pose_estimation/modules/io/src/tang_pose_reader.cc', 'kind': 'jump_list', 'abbr': 'modules/io/src/tang_pose_reader.cc', 'action__directory': '/home/andrew/code/pose_estimation/modules/io/src'}, '/home/andrew/code/pose_estimation/apps/multicam_mesh_viewer/src/mc_mesh_viewer_options.cc': {'word': '/home/andrew/code/pose_estimation/apps/multicam_mesh_viewer/src/mc_mesh_viewer_options.cc', 'action__path': '/home/andrew/code/pose_estimation/apps/multicam_mesh_viewer/src/mc_mesh_viewer_options.cc', 'kind': 'jump_list', 'abbr': 'apps/multicam_mesh_viewer/src/mc_mesh_viewer_options.cc', 'action__directory': '/home/andrew/code/pose_estimation/apps/multicam_mesh_viewer/src'}, '/home/andrew/code/pose_estimation/modules/core/include/sphere_model.h': {'word': '/home/andrew/code/pose_estimation/modules/core/include/sphere_model.h', 'action__path': '/home/andrew/code/pose_estimation/modules/core/include/sphere_model.h', 'kind': 'jump_list', 'abbr': 'modules/core/include/sphere_model.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/core/include'}, '/home/andrew/code/pose_estimation/modules/io/include/json_writer_utils.h': {'word': '/home/andrew/code/pose_estimation/modules/io/include/json_writer_utils.h', 'action__path': '/home/andrew/code/pose_estimation/modules/io/include/json_writer_utils.h', 'kind': 'jump_list', 'abbr': 'modules/io/include/json_writer_utils.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/io/include'}, '/home/andrew/code/pose_estimation/modules/img/include/hysteresis_thresholder.h': {'word': '/home/andrew/code/pose_estimation/modules/img/include/hysteresis_thresholder.h', 'action__path': '/home/andrew/code/pose_estimation/modules/img/include/hysteresis_thresholder.h', 'kind': 'jump_list', 'abbr': 'modules/img/include/hysteresis_thresholder.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/img/include'}, '/home/andrew/code/pose_estimation/apps/bmvc_project/src/main.cc': {'word': '/home/andrew/code/pose_estimation/apps/bmvc_project/src/main.cc', 'action__path': '/home/andrew/code/pose_estimation/apps/bmvc_project/src/main.cc', 'kind': 'jump_list', 'abbr': 'apps/bmvc_project/src/main.cc', 'action__directory': '/home/andrew/code/pose_estimation/apps/bmvc_project/src'}, '/home/andrew/code/pose_estimation/modules/ml/include/bayes_classifier.h': {'word': '/home/andrew/code/pose_estimation/modules/ml/include/bayes_classifier.h', 'action__path': '/home/andrew/code/pose_estimation/modules/ml/include/bayes_classifier.h', 'kind': 'jump_list', 'abbr': 'modules/ml/include/bayes_classifier.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/ml/include'}, '/home/andrew/code/pose_estimation/apps/skel_viewer/src/main.cc': {'word': '/home/andrew/code/pose_estimation/apps/skel_viewer/src/main.cc', 'action__path': '/home/andrew/code/pose_estimation/apps/skel_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'apps/skel_viewer/src/main.cc', 'action__directory': '/home/andrew/code/pose_estimation/apps/skel_viewer/src'}, '/home/andrew/code/pose_estimation/build/apps/pose_renderer/src/Makefile': {'word': '/home/andrew/code/pose_estimation/build/apps/pose_renderer/src/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/apps/pose_renderer/src/Makefile', 'kind': 'jump_list', 'abbr': 'build/apps/pose_renderer/src/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/apps/pose_renderer/src'}, '/home/andrew/code/pose_estimation/modules/core/src/histogram2d.cc': {'word': '/home/andrew/code/pose_estimation/modules/core/src/histogram2d.cc', 'action__path': '/home/andrew/code/pose_estimation/modules/core/src/histogram2d.cc', 'kind': 'jump_list', 'abbr': 'modules/core/src/histogram2d.cc', 'action__directory': '/home/andrew/code/pose_estimation/modules/core/src'}, '/home/andrew/code/pose_estimation/build/apps/34dof_to_json/src/Makefile': {'word': '/home/andrew/code/pose_estimation/build/apps/34dof_to_json/src/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/apps/34dof_to_json/src/Makefile', 'kind': 'jump_list', 'abbr': 'build/apps/34dof_to_json/src/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/apps/34dof_to_json/src'}, '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig/colour_detector.hpp': {'word': '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig/colour_detector.hpp', 'action__path': '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig/colour_detector.hpp', 'kind': 'jump_list', 'abbr': 'ext/objective_functions/xing/aig/colour_detector.hpp', 'action__directory': '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig'}, '/home/andrew/code/pose_estimation/modules/io/include/shared_ptr_serialisation.h': {'word': '/home/andrew/code/pose_estimation/modules/io/include/shared_ptr_serialisation.h', 'action__path': '/home/andrew/code/pose_estimation/modules/io/include/shared_ptr_serialisation.h', 'kind': 'jump_list', 'abbr': 'modules/io/include/shared_ptr_serialisation.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/io/include'}, '/home/andrew/code/pose_estimation/modules/gl/src/texture.cc': {'word': '/home/andrew/code/pose_estimation/modules/gl/src/texture.cc', 'action__path': '/home/andrew/code/pose_estimation/modules/gl/src/texture.cc', 'kind': 'jump_list', 'abbr': 'modules/gl/src/texture.cc', 'action__directory': '/home/andrew/code/pose_estimation/modules/gl/src'}, '/home/andrew/code/pose_estimation/modules/ml/include/latent_tree_leaf.h': {'word': '/home/andrew/code/pose_estimation/modules/ml/include/latent_tree_leaf.h', 'action__path': '/home/andrew/code/pose_estimation/modules/ml/include/latent_tree_leaf.h', 'kind': 'jump_list', 'abbr': 'modules/ml/include/latent_tree_leaf.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/ml/include'}, '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig/camera_image_evaluator.cc': {'word': '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig/camera_image_evaluator.cc', 'action__path': '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig/camera_image_evaluator.cc', 'kind': 'jump_list', 'abbr': 'ext/objective_functions/xing/aig/camera_image_evaluator.cc', 'action__directory': '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig'}, '/home/andrew/code/pose_estimation/build/Makefile': {'word': '/home/andrew/code/pose_estimation/build/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/Makefile', 'kind': 'jump_list', 'abbr': 'build/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build'}, '/home/andrew/code/pose_estimation/apps/34dof_to_json/src/main.cc': {'word': '/home/andrew/code/pose_estimation/apps/34dof_to_json/src/main.cc', 'action__path': '/home/andrew/code/pose_estimation/apps/34dof_to_json/src/main.cc', 'kind': 'jump_list', 'abbr': 'apps/34dof_to_json/src/main.cc', 'action__directory': '/home/andrew/code/pose_estimation/apps/34dof_to_json/src'}, '/home/andrew/code/pose_estimation/apps/depth_shader_viewer/src/main.cc': {'word': '/home/andrew/code/pose_estimation/apps/depth_shader_viewer/src/main.cc', 'action__path': '/home/andrew/code/pose_estimation/apps/depth_shader_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'apps/depth_shader_viewer/src/main.cc', 'action__directory': '/home/andrew/code/pose_estimation/apps/depth_shader_viewer/src'}, '/home/andrew/code/pose_estimation/build/modules/io/src/Makefile': {'word': '/home/andrew/code/pose_estimation/build/modules/io/src/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/modules/io/src/Makefile', 'kind': 'jump_list', 'abbr': 'build/modules/io/src/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/modules/io/src'}, '/home/andrew/code/pose_estimation/build/apps/depth_shader_viewer/src/Makefile': {'word': '/home/andrew/code/pose_estimation/build/apps/depth_shader_viewer/src/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/apps/depth_shader_viewer/src/Makefile', 'kind': 'jump_list', 'abbr': 'build/apps/depth_shader_viewer/src/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/apps/depth_shader_viewer/src'}, '/home/andrew/code/pose_estimation/build/apps/multicam_mesh_viewer/include/Makefile': {'word': '/home/andrew/code/pose_estimation/build/apps/multicam_mesh_viewer/include/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/apps/multicam_mesh_viewer/include/Makefile', 'kind': 'jump_list', 'abbr': 'build/apps/multicam_mesh_viewer/include/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/apps/multicam_mesh_viewer/include'}, '/home/andrew/code/pose_estimation/ext/objective_functions/test/aig/test_depth_evaluator.cc': {'word': '/home/andrew/code/pose_estimation/ext/objective_functions/test/aig/test_depth_evaluator.cc', 'action__path': '/home/andrew/code/pose_estimation/ext/objective_functions/test/aig/test_depth_evaluator.cc', 'kind': 'jump_list', 'abbr': 'ext/objective_functions/test/aig/test_depth_evaluator.cc', 'action__directory': '/home/andrew/code/pose_estimation/ext/objective_functions/test/aig'}, '/home/andrew/code/pose_estimation/modules/io/include/sphere_model_reader.h': {'word': '/home/andrew/code/pose_estimation/modules/io/include/sphere_model_reader.h', 'action__path': '/home/andrew/code/pose_estimation/modules/io/include/sphere_model_reader.h', 'kind': 'jump_list', 'abbr': 'modules/io/include/sphere_model_reader.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/io/include'}, '/home/andrew/code/pose_estimation/build/modules/core/include/Makefile': {'word': '/home/andrew/code/pose_estimation/build/modules/core/include/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/modules/core/include/Makefile', 'kind': 'jump_list', 'abbr': 'build/modules/core/include/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/modules/core/include'}, '/home/andrew/code/pose_estimation/modules/ml/include/classifier_leaf.h': {'word': '/home/andrew/code/pose_estimation/modules/ml/include/classifier_leaf.h', 'action__path': '/home/andrew/code/pose_estimation/modules/ml/include/classifier_leaf.h', 'kind': 'jump_list', 'abbr': 'modules/ml/include/classifier_leaf.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/ml/include'}, '/home/andrew/code/pose_estimation/ext/lodepng/lodepng.h': {'word': '/home/andrew/code/pose_estimation/ext/lodepng/lodepng.h', 'action__path': '/home/andrew/code/pose_estimation/ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'ext/lodepng/lodepng.h', 'action__directory': '/home/andrew/code/pose_estimation/ext/lodepng'}, '/home/andrew/code/pose_estimation/modules/ml/src/depth_split_function.cc': {'word': '/home/andrew/code/pose_estimation/modules/ml/src/depth_split_function.cc', 'action__path': '/home/andrew/code/pose_estimation/modules/ml/src/depth_split_function.cc', 'kind': 'jump_list', 'abbr': 'modules/ml/src/depth_split_function.cc', 'action__directory': '/home/andrew/code/pose_estimation/modules/ml/src'}, '/home/andrew/code/pose_estimation/modules/ml/include/pose_ml.h': {'word': '/home/andrew/code/pose_estimation/modules/ml/include/pose_ml.h', 'action__path': '/home/andrew/code/pose_estimation/modules/ml/include/pose_ml.h', 'kind': 'jump_list', 'abbr': 'modules/ml/include/pose_ml.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/ml/include'}, '/home/andrew/code/pose_estimation/modules/gl/src/pose_shader.cc': {'word': '/home/andrew/code/pose_estimation/modules/gl/src/pose_shader.cc', 'action__path': '/home/andrew/code/pose_estimation/modules/gl/src/pose_shader.cc', 'kind': 'jump_list', 'abbr': 'modules/gl/src/pose_shader.cc', 'action__directory': '/home/andrew/code/pose_estimation/modules/gl/src'}, '/home/andrew/code/pose_estimation/apps/compare_poses/src/main.cc': {'word': '/home/andrew/code/pose_estimation/apps/compare_poses/src/main.cc', 'action__path': '/home/andrew/code/pose_estimation/apps/compare_poses/src/main.cc', 'kind': 'jump_list', 'abbr': 'apps/compare_poses/src/main.cc', 'action__directory': '/home/andrew/code/pose_estimation/apps/compare_poses/src'}, '/home/andrew/code/pose_estimation/apps/sphere_model_renderer/src/main.cc': {'word': '/home/andrew/code/pose_estimation/apps/sphere_model_renderer/src/main.cc', 'action__path': '/home/andrew/code/pose_estimation/apps/sphere_model_renderer/src/main.cc', 'kind': 'jump_list', 'abbr': 'apps/sphere_model_renderer/src/main.cc', 'action__directory': '/home/andrew/code/pose_estimation/apps/sphere_model_renderer/src'}, '/home/andrew/code/pose_estimation/modules/core/include/histogram2d.h': {'word': '/home/andrew/code/pose_estimation/modules/core/include/histogram2d.h', 'action__path': '/home/andrew/code/pose_estimation/modules/core/include/histogram2d.h', 'kind': 'jump_list', 'abbr': 'modules/core/include/histogram2d.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/core/include'}, '/home/andrew/code/pose_estimation/build/modules/gl/include/Makefile': {'word': '/home/andrew/code/pose_estimation/build/modules/gl/include/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/modules/gl/include/Makefile', 'kind': 'jump_list', 'abbr': 'build/modules/gl/include/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/modules/gl/include'}, '/home/andrew/code/pose_estimation/ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp': {'word': '/home/andrew/code/pose_estimation/ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__path': '/home/andrew/code/pose_estimation/ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'kind': 'jump_list', 'abbr': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__directory': '/home/andrew/code/pose_estimation/ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX'}, '/home/andrew/code/pose_estimation/modules/io/include/sph_reader.h': {'word': '/home/andrew/code/pose_estimation/modules/io/include/sph_reader.h', 'action__path': '/home/andrew/code/pose_estimation/modules/io/include/sph_reader.h', 'kind': 'jump_list', 'abbr': 'modules/io/include/sph_reader.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/io/include'}, '/home/andrew/code/pose_estimation/modules/ml/src/bayes_classifier.cc': {'word': '/home/andrew/code/pose_estimation/modules/ml/src/bayes_classifier.cc', 'action__path': '/home/andrew/code/pose_estimation/modules/ml/src/bayes_classifier.cc', 'kind': 'jump_list', 'abbr': 'modules/ml/src/bayes_classifier.cc', 'action__directory': '/home/andrew/code/pose_estimation/modules/ml/src'}, '/home/andrew/code/pose_estimation/apps/pose_viewer/include/pose_viewer_options.h': {'word': '/home/andrew/code/pose_estimation/apps/pose_viewer/include/pose_viewer_options.h', 'action__path': '/home/andrew/code/pose_estimation/apps/pose_viewer/include/pose_viewer_options.h', 'kind': 'jump_list', 'abbr': 'apps/pose_viewer/include/pose_viewer_options.h', 'action__directory': '/home/andrew/code/pose_estimation/apps/pose_viewer/include'}, '/home/andrew/code/pose_estimation/modules/io/src/sph_reader.cc': {'word': '/home/andrew/code/pose_estimation/modules/io/src/sph_reader.cc', 'action__path': '/home/andrew/code/pose_estimation/modules/io/src/sph_reader.cc', 'kind': 'jump_list', 'abbr': 'modules/io/src/sph_reader.cc', 'action__directory': '/home/andrew/code/pose_estimation/modules/io/src'}, '/home/andrew/code/pose_estimation/build/modules/gl/src/Makefile': {'word': '/home/andrew/code/pose_estimation/build/modules/gl/src/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/modules/gl/src/Makefile', 'kind': 'jump_list', 'abbr': 'build/modules/gl/src/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/modules/gl/src'}, '/home/andrew/code/pose_estimation/modules/gl/src/mesh_renderer.cc': {'word': '/home/andrew/code/pose_estimation/modules/gl/src/mesh_renderer.cc', 'action__path': '/home/andrew/code/pose_estimation/modules/gl/src/mesh_renderer.cc', 'kind': 'jump_list', 'abbr': 'modules/gl/src/mesh_renderer.cc', 'action__directory': '/home/andrew/code/pose_estimation/modules/gl/src'}, '/home/andrew/code/pose_estimation/modules/core/src/camera_calibration.cc': {'word': '/home/andrew/code/pose_estimation/modules/core/src/camera_calibration.cc', 'action__path': '/home/andrew/code/pose_estimation/modules/core/src/camera_calibration.cc', 'kind': 'jump_list', 'abbr': 'modules/core/src/camera_calibration.cc', 'action__directory': '/home/andrew/code/pose_estimation/modules/core/src'}, '/home/andrew/code/pose_estimation/modules/gl/src/instanced_shape_renderer.cc': {'word': '/home/andrew/code/pose_estimation/modules/gl/src/instanced_shape_renderer.cc', 'action__path': '/home/andrew/code/pose_estimation/modules/gl/src/instanced_shape_renderer.cc', 'kind': 'jump_list', 'abbr': 'modules/gl/src/instanced_shape_renderer.cc', 'action__directory': '/home/andrew/code/pose_estimation/modules/gl/src'}, '/home/andrew/code/pose_estimation/apps/edge_shader_viewer/include/edge_shader_viewer_options.h': {'word': '/home/andrew/code/pose_estimation/apps/edge_shader_viewer/include/edge_shader_viewer_options.h', 'action__path': '/home/andrew/code/pose_estimation/apps/edge_shader_viewer/include/edge_shader_viewer_options.h', 'kind': 'jump_list', 'abbr': 'apps/edge_shader_viewer/include/edge_shader_viewer_options.h', 'action__directory': '/home/andrew/code/pose_estimation/apps/edge_shader_viewer/include'}, '/home/andrew/code/pose_estimation/ext/objective_functions/build/xing/Makefile': {'word': '/home/andrew/code/pose_estimation/ext/objective_functions/build/xing/Makefile', 'action__path': '/home/andrew/code/pose_estimation/ext/objective_functions/build/xing/Makefile', 'kind': 'jump_list', 'abbr': 'ext/objective_functions/build/xing/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/ext/objective_functions/build/xing'}, '/home/andrew/code/pose_estimation/ext/objective_functions/prog/segimage/main.cc': {'word': '/home/andrew/code/pose_estimation/ext/objective_functions/prog/segimage/main.cc', 'action__path': '/home/andrew/code/pose_estimation/ext/objective_functions/prog/segimage/main.cc', 'kind': 'jump_list', 'abbr': 'ext/objective_functions/prog/segimage/main.cc', 'action__directory': '/home/andrew/code/pose_estimation/ext/objective_functions/prog/segimage'}, '/home/andrew/code/pose_estimation/build/apps/depth_shader_viewer/include/Makefile': {'word': '/home/andrew/code/pose_estimation/build/apps/depth_shader_viewer/include/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/apps/depth_shader_viewer/include/Makefile', 'kind': 'jump_list', 'abbr': 'build/apps/depth_shader_viewer/include/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/apps/depth_shader_viewer/include'}, '/home/andrew/code/pose_estimation/apps/pose_renderer/include/pose_renderer.h': {'word': '/home/andrew/code/pose_estimation/apps/pose_renderer/include/pose_renderer.h', 'action__path': '/home/andrew/code/pose_estimation/apps/pose_renderer/include/pose_renderer.h', 'kind': 'jump_list', 'abbr': 'apps/pose_renderer/include/pose_renderer.h', 'action__directory': '/home/andrew/code/pose_estimation/apps/pose_renderer/include'}, '/home/andrew/code/pose_estimation/modules/io/src/sphere_model_writer.cc': {'word': '/home/andrew/code/pose_estimation/modules/io/src/sphere_model_writer.cc', 'action__path': '/home/andrew/code/pose_estimation/modules/io/src/sphere_model_writer.cc', 'kind': 'jump_list', 'abbr': 'modules/io/src/sphere_model_writer.cc', 'action__directory': '/home/andrew/code/pose_estimation/modules/io/src'}, '/home/andrew/code/pose_estimation/build/apps/pose_interpolator/include/Makefile': {'word': '/home/andrew/code/pose_estimation/build/apps/pose_interpolator/include/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/apps/pose_interpolator/include/Makefile', 'kind': 'jump_list', 'abbr': 'build/apps/pose_interpolator/include/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/apps/pose_interpolator/include'}, '/home/andrew/code/pose_estimation/modules/ml/include/energy_function_chooser.h': {'word': '/home/andrew/code/pose_estimation/modules/ml/include/energy_function_chooser.h', 'action__path': '/home/andrew/code/pose_estimation/modules/ml/include/energy_function_chooser.h', 'kind': 'jump_list', 'abbr': 'modules/ml/include/energy_function_chooser.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/ml/include'}, '/home/andrew/code/pose_estimation/build/apps/pose_renderer/include/Makefile': {'word': '/home/andrew/code/pose_estimation/build/apps/pose_renderer/include/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/apps/pose_renderer/include/Makefile', 'kind': 'jump_list', 'abbr': 'build/apps/pose_renderer/include/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/apps/pose_renderer/include'}, '/home/andrew/code/pose_estimation/apps/bmvc_project/src/bmvc_options.cc': {'word': '/home/andrew/code/pose_estimation/apps/bmvc_project/src/bmvc_options.cc', 'action__path': '/home/andrew/code/pose_estimation/apps/bmvc_project/src/bmvc_options.cc', 'kind': 'jump_list', 'abbr': 'apps/bmvc_project/src/bmvc_options.cc', 'action__directory': '/home/andrew/code/pose_estimation/apps/bmvc_project/src'}, '/home/andrew/code/pose_estimation/ext/objective_functions/prog/colour-detect/main.cc': {'word': '/home/andrew/code/pose_estimation/ext/objective_functions/prog/colour-detect/main.cc', 'action__path': '/home/andrew/code/pose_estimation/ext/objective_functions/prog/colour-detect/main.cc', 'kind': 'jump_list', 'abbr': 'ext/objective_functions/prog/colour-detect/main.cc', 'action__directory': '/home/andrew/code/pose_estimation/ext/objective_functions/prog/colour-detect'}, '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig/edge_distance_map.cc': {'word': '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig/edge_distance_map.cc', 'action__path': '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig/edge_distance_map.cc', 'kind': 'jump_list', 'abbr': 'ext/objective_functions/xing/aig/edge_distance_map.cc', 'action__directory': '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig'}, '/home/andrew/code/pose_estimation/build/modules/io/Makefile': {'word': '/home/andrew/code/pose_estimation/build/modules/io/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/modules/io/Makefile', 'kind': 'jump_list', 'abbr': 'build/modules/io/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/modules/io'}, '/home/andrew/code/pose_estimation/modules/ml/include/split_function_factory.h': {'word': '/home/andrew/code/pose_estimation/modules/ml/include/split_function_factory.h', 'action__path': '/home/andrew/code/pose_estimation/modules/ml/include/split_function_factory.h', 'kind': 'jump_list', 'abbr': 'modules/ml/include/split_function_factory.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/ml/include'}, '/home/andrew/code/pose_estimation/modules/core/src/bone.cc': {'word': '/home/andrew/code/pose_estimation/modules/core/src/bone.cc', 'action__path': '/home/andrew/code/pose_estimation/modules/core/src/bone.cc', 'kind': 'jump_list', 'abbr': 'modules/core/src/bone.cc', 'action__directory': '/home/andrew/code/pose_estimation/modules/core/src'}, '/home/andrew/code/pose_estimation/build/modules/core/src/Makefile': {'word': '/home/andrew/code/pose_estimation/build/modules/core/src/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/modules/core/src/Makefile', 'kind': 'jump_list', 'abbr': 'build/modules/core/src/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/modules/core/src'}, '/home/andrew/code/pose_estimation/apps/pose_creator/include/pose_creator_options.h': {'word': '/home/andrew/code/pose_estimation/apps/pose_creator/include/pose_creator_options.h', 'action__path': '/home/andrew/code/pose_estimation/apps/pose_creator/include/pose_creator_options.h', 'kind': 'jump_list', 'abbr': 'apps/pose_creator/include/pose_creator_options.h', 'action__directory': '/home/andrew/code/pose_estimation/apps/pose_creator/include'}, '/home/andrew/code/pose_estimation/modules/gl/src/background_shader.cc': {'word': '/home/andrew/code/pose_estimation/modules/gl/src/background_shader.cc', 'action__path': '/home/andrew/code/pose_estimation/modules/gl/src/background_shader.cc', 'kind': 'jump_list', 'abbr': 'modules/gl/src/background_shader.cc', 'action__directory': '/home/andrew/code/pose_estimation/modules/gl/src'}, '/home/andrew/code/pose_estimation/modules/gl/include/chessboard_drawer.h': {'word': '/home/andrew/code/pose_estimation/modules/gl/include/chessboard_drawer.h', 'action__path': '/home/andrew/code/pose_estimation/modules/gl/include/chessboard_drawer.h', 'kind': 'jump_list', 'abbr': 'modules/gl/include/chessboard_drawer.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/gl/include'}, '/home/andrew/code/pose_estimation/apps/pose_viewer/src/pose_viewer_options.cc': {'word': '/home/andrew/code/pose_estimation/apps/pose_viewer/src/pose_viewer_options.cc', 'action__path': '/home/andrew/code/pose_estimation/apps/pose_viewer/src/pose_viewer_options.cc', 'kind': 'jump_list', 'abbr': 'apps/pose_viewer/src/pose_viewer_options.cc', 'action__directory': '/home/andrew/code/pose_estimation/apps/pose_viewer/src'}, '/home/andrew/code/pose_estimation/modules/gl/src/shader_program.cc': {'word': '/home/andrew/code/pose_estimation/modules/gl/src/shader_program.cc', 'action__path': '/home/andrew/code/pose_estimation/modules/gl/src/shader_program.cc', 'kind': 'jump_list', 'abbr': 'modules/gl/src/shader_program.cc', 'action__directory': '/home/andrew/code/pose_estimation/modules/gl/src'}, '/home/andrew/code/pose_estimation/modules/core/src/hand_pose_34_dof.cc': {'word': '/home/andrew/code/pose_estimation/modules/core/src/hand_pose_34_dof.cc', 'action__path': '/home/andrew/code/pose_estimation/modules/core/src/hand_pose_34_dof.cc', 'kind': 'jump_list', 'abbr': 'modules/core/src/hand_pose_34_dof.cc', 'action__directory': '/home/andrew/code/pose_estimation/modules/core/src'}, '/home/andrew/code/pose_estimation/apps/edge_shader_viewer/src/edge_shader_viewer_options.cc': {'word': '/home/andrew/code/pose_estimation/apps/edge_shader_viewer/src/edge_shader_viewer_options.cc', 'action__path': '/home/andrew/code/pose_estimation/apps/edge_shader_viewer/src/edge_shader_viewer_options.cc', 'kind': 'jump_list', 'abbr': 'apps/edge_shader_viewer/src/edge_shader_viewer_options.cc', 'action__directory': '/home/andrew/code/pose_estimation/apps/edge_shader_viewer/src'}, '/home/andrew/code/pose_estimation/build/apps/sphere_model_renderer/src/Makefile': {'word': '/home/andrew/code/pose_estimation/build/apps/sphere_model_renderer/src/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/apps/sphere_model_renderer/src/Makefile', 'kind': 'jump_list', 'abbr': 'build/apps/sphere_model_renderer/src/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/apps/sphere_model_renderer/src'}, '/home/andrew/code/pose_estimation/modules/gl/include/prism.h': {'word': '/home/andrew/code/pose_estimation/modules/gl/include/prism.h', 'action__path': '/home/andrew/code/pose_estimation/modules/gl/include/prism.h', 'kind': 'jump_list', 'abbr': 'modules/gl/include/prism.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/gl/include'}, '/home/andrew/code/pose_estimation/apps/34dof_to_json/.ycm_extra_conf.py': {'word': '/home/andrew/code/pose_estimation/apps/34dof_to_json/.ycm_extra_conf.py', 'action__path': '/home/andrew/code/pose_estimation/apps/34dof_to_json/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'apps/34dof_to_json/.ycm_extra_conf.py', 'action__directory': '/home/andrew/code/pose_estimation/apps/34dof_to_json'}, '/home/andrew/code/pose_estimation/build/modules/optim/Makefile': {'word': '/home/andrew/code/pose_estimation/build/modules/optim/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/modules/optim/Makefile', 'kind': 'jump_list', 'abbr': 'build/modules/optim/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/modules/optim'}, '/home/andrew/code/pose_estimation/modules/gl/src/chessboard_drawer.cc': {'word': '/home/andrew/code/pose_estimation/modules/gl/src/chessboard_drawer.cc', 'action__path': '/home/andrew/code/pose_estimation/modules/gl/src/chessboard_drawer.cc', 'kind': 'jump_list', 'abbr': 'modules/gl/src/chessboard_drawer.cc', 'action__directory': '/home/andrew/code/pose_estimation/modules/gl/src'}, '/home/andrew/code/pose_estimation/build/apps/multicam_mesh_viewer/src/Makefile': {'word': '/home/andrew/code/pose_estimation/build/apps/multicam_mesh_viewer/src/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/apps/multicam_mesh_viewer/src/Makefile', 'kind': 'jump_list', 'abbr': 'build/apps/multicam_mesh_viewer/src/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/apps/multicam_mesh_viewer/src'}, '/home/andrew/code/pose_estimation/build/apps/pose_creator/include/Makefile': {'word': '/home/andrew/code/pose_estimation/build/apps/pose_creator/include/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/apps/pose_creator/include/Makefile', 'kind': 'jump_list', 'abbr': 'build/apps/pose_creator/include/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/apps/pose_creator/include'}, '/home/andrew/code/pose_estimation/build/apps/particle_swarm_demo/src/Makefile': {'word': '/home/andrew/code/pose_estimation/build/apps/particle_swarm_demo/src/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/apps/particle_swarm_demo/src/Makefile', 'kind': 'jump_list', 'abbr': 'build/apps/particle_swarm_demo/src/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/apps/particle_swarm_demo/src'}, '/home/andrew/code/pose_estimation/build/apps/multicam_mesh_viewer/Makefile': {'word': '/home/andrew/code/pose_estimation/build/apps/multicam_mesh_viewer/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/apps/multicam_mesh_viewer/Makefile', 'kind': 'jump_list', 'abbr': 'build/apps/multicam_mesh_viewer/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/apps/multicam_mesh_viewer'}, '/home/andrew/code/pose_estimation/modules/gl/include/texture.h': {'word': '/home/andrew/code/pose_estimation/modules/gl/include/texture.h', 'action__path': '/home/andrew/code/pose_estimation/modules/gl/include/texture.h', 'kind': 'jump_list', 'abbr': 'modules/gl/include/texture.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/gl/include'}, '/home/andrew/code/pose_estimation/modules/ml/include/tang_energy_function.h': {'word': '/home/andrew/code/pose_estimation/modules/ml/include/tang_energy_function.h', 'action__path': '/home/andrew/code/pose_estimation/modules/ml/include/tang_energy_function.h', 'kind': 'jump_list', 'abbr': 'modules/ml/include/tang_energy_function.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/ml/include'}, '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig/camera_image_evaluator.hpp': {'word': '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig/camera_image_evaluator.hpp', 'action__path': '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig/camera_image_evaluator.hpp', 'kind': 'jump_list', 'abbr': 'ext/objective_functions/xing/aig/camera_image_evaluator.hpp', 'action__directory': '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig'}, '/home/andrew/code/pose_estimation/build/apps/compare_poses/src/Makefile': {'word': '/home/andrew/code/pose_estimation/build/apps/compare_poses/src/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/apps/compare_poses/src/Makefile', 'kind': 'jump_list', 'abbr': 'build/apps/compare_poses/src/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/apps/compare_poses/src'}, '/home/andrew/code/pose_estimation/ext/objective_functions/test/aig/test_camera_image.cc': {'word': '/home/andrew/code/pose_estimation/ext/objective_functions/test/aig/test_camera_image.cc', 'action__path': '/home/andrew/code/pose_estimation/ext/objective_functions/test/aig/test_camera_image.cc', 'kind': 'jump_list', 'abbr': 'ext/objective_functions/test/aig/test_camera_image.cc', 'action__directory': '/home/andrew/code/pose_estimation/ext/objective_functions/test/aig'}, '/home/andrew/code/pose_estimation/ext/objective_functions/test/aig/test_depth_overlap_evaluator.cc': {'word': '/home/andrew/code/pose_estimation/ext/objective_functions/test/aig/test_depth_overlap_evaluator.cc', 'action__path': '/home/andrew/code/pose_estimation/ext/objective_functions/test/aig/test_depth_overlap_evaluator.cc', 'kind': 'jump_list', 'abbr': 'ext/objective_functions/test/aig/test_depth_overlap_evaluator.cc', 'action__directory': '/home/andrew/code/pose_estimation/ext/objective_functions/test/aig'}, '/home/andrew/code/pose_estimation/modules/gl/include/gl_utility.h': {'word': '/home/andrew/code/pose_estimation/modules/gl/include/gl_utility.h', 'action__path': '/home/andrew/code/pose_estimation/modules/gl/include/gl_utility.h', 'kind': 'jump_list', 'abbr': 'modules/gl/include/gl_utility.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/gl/include'}, '/home/andrew/code/pose_estimation/modules/io/src/json_writer_utils.cc': {'word': '/home/andrew/code/pose_estimation/modules/io/src/json_writer_utils.cc', 'action__path': '/home/andrew/code/pose_estimation/modules/io/src/json_writer_utils.cc', 'kind': 'jump_list', 'abbr': 'modules/io/src/json_writer_utils.cc', 'action__directory': '/home/andrew/code/pose_estimation/modules/io/src'}, '/home/andrew/code/pose_estimation/build/apps/tang_lrf/src/Makefile': {'word': '/home/andrew/code/pose_estimation/build/apps/tang_lrf/src/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/apps/tang_lrf/src/Makefile', 'kind': 'jump_list', 'abbr': 'build/apps/tang_lrf/src/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/apps/tang_lrf/src'}, '/home/andrew/code/pose_estimation/build/modules/optim/include/Makefile': {'word': '/home/andrew/code/pose_estimation/build/modules/optim/include/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/modules/optim/include/Makefile', 'kind': 'jump_list', 'abbr': 'build/modules/optim/include/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/modules/optim/include'}, '/home/andrew/code/pose_estimation/modules/io/include/tang_pose_reader.h': {'word': '/home/andrew/code/pose_estimation/modules/io/include/tang_pose_reader.h', 'action__path': '/home/andrew/code/pose_estimation/modules/io/include/tang_pose_reader.h', 'kind': 'jump_list', 'abbr': 'modules/io/include/tang_pose_reader.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/io/include'}, '/home/andrew/code/pose_estimation/build/apps/sphere_model_optim/Makefile': {'word': '/home/andrew/code/pose_estimation/build/apps/sphere_model_optim/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/apps/sphere_model_optim/Makefile', 'kind': 'jump_list', 'abbr': 'build/apps/sphere_model_optim/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/apps/sphere_model_optim'}, '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig/edge_evaluator.hpp': {'word': '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig/edge_evaluator.hpp', 'action__path': '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig/edge_evaluator.hpp', 'kind': 'jump_list', 'abbr': 'ext/objective_functions/xing/aig/edge_evaluator.hpp', 'action__directory': '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig'}, '/home/andrew/code/pose_estimation/modules/gl/src/background_drawer.cc': {'word': '/home/andrew/code/pose_estimation/modules/gl/src/background_drawer.cc', 'action__path': '/home/andrew/code/pose_estimation/modules/gl/src/background_drawer.cc', 'kind': 'jump_list', 'abbr': 'modules/gl/src/background_drawer.cc', 'action__directory': '/home/andrew/code/pose_estimation/modules/gl/src'}, '/home/andrew/code/pose_estimation/build/apps/gbuffer_viewer/include/Makefile': {'word': '/home/andrew/code/pose_estimation/build/apps/gbuffer_viewer/include/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/apps/gbuffer_viewer/include/Makefile', 'kind': 'jump_list', 'abbr': 'build/apps/gbuffer_viewer/include/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/apps/gbuffer_viewer/include'}, '/home/andrew/code/pose_estimation/build/modules/geom/src/Makefile': {'word': '/home/andrew/code/pose_estimation/build/modules/geom/src/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/modules/geom/src/Makefile', 'kind': 'jump_list', 'abbr': 'build/modules/geom/src/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/modules/geom/src'}, '/home/andrew/code/pose_estimation/build/apps/particle_swarm_demo/Makefile': {'word': '/home/andrew/code/pose_estimation/build/apps/particle_swarm_demo/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/apps/particle_swarm_demo/Makefile', 'kind': 'jump_list', 'abbr': 'build/apps/particle_swarm_demo/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/apps/particle_swarm_demo'}, '/home/andrew/code/pose_estimation/modules/core/src/sphere_model.cc': {'word': '/home/andrew/code/pose_estimation/modules/core/src/sphere_model.cc', 'action__path': '/home/andrew/code/pose_estimation/modules/core/src/sphere_model.cc', 'kind': 'jump_list', 'abbr': 'modules/core/src/sphere_model.cc', 'action__directory': '/home/andrew/code/pose_estimation/modules/core/src'}, '/home/andrew/code/pose_estimation/build/modules/img/src/Makefile': {'word': '/home/andrew/code/pose_estimation/build/modules/img/src/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/modules/img/src/Makefile', 'kind': 'jump_list', 'abbr': 'build/modules/img/src/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/modules/img/src'}, '/home/andrew/code/pose_estimation/apps/pose_interpolator/.ycm_extra_conf.py': {'word': '/home/andrew/code/pose_estimation/apps/pose_interpolator/.ycm_extra_conf.py', 'action__path': '/home/andrew/code/pose_estimation/apps/pose_interpolator/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'apps/pose_interpolator/.ycm_extra_conf.py', 'action__directory': '/home/andrew/code/pose_estimation/apps/pose_interpolator'}, '/home/andrew/code/pose_estimation/modules/gl/src/gl_sphere.cc': {'word': '/home/andrew/code/pose_estimation/modules/gl/src/gl_sphere.cc', 'action__path': '/home/andrew/code/pose_estimation/modules/gl/src/gl_sphere.cc', 'kind': 'jump_list', 'abbr': 'modules/gl/src/gl_sphere.cc', 'action__directory': '/home/andrew/code/pose_estimation/modules/gl/src'}, '/home/andrew/code/pose_estimation/build/apps/bmvc_project/src/Makefile': {'word': '/home/andrew/code/pose_estimation/build/apps/bmvc_project/src/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/apps/bmvc_project/src/Makefile', 'kind': 'jump_list', 'abbr': 'build/apps/bmvc_project/src/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/apps/bmvc_project/src'}, '/home/andrew/code/pose_estimation/build/apps/bmvc_project/include/Makefile': {'word': '/home/andrew/code/pose_estimation/build/apps/bmvc_project/include/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/apps/bmvc_project/include/Makefile', 'kind': 'jump_list', 'abbr': 'build/apps/bmvc_project/include/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/apps/bmvc_project/include'}, '/home/andrew/code/pose_estimation/build/apps/34dof_to_json/Makefile': {'word': '/home/andrew/code/pose_estimation/build/apps/34dof_to_json/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/apps/34dof_to_json/Makefile', 'kind': 'jump_list', 'abbr': 'build/apps/34dof_to_json/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/apps/34dof_to_json'}, '/home/andrew/code/pose_estimation/apps/gbuffer_viewer/src/gbuffer_viewer_options.cc': {'word': '/home/andrew/code/pose_estimation/apps/gbuffer_viewer/src/gbuffer_viewer_options.cc', 'action__path': '/home/andrew/code/pose_estimation/apps/gbuffer_viewer/src/gbuffer_viewer_options.cc', 'kind': 'jump_list', 'abbr': 'apps/gbuffer_viewer/src/gbuffer_viewer_options.cc', 'action__directory': '/home/andrew/code/pose_estimation/apps/gbuffer_viewer/src'}, '/home/andrew/code/pose_estimation/build/modules/ml/Makefile': {'word': '/home/andrew/code/pose_estimation/build/modules/ml/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/modules/ml/Makefile', 'kind': 'jump_list', 'abbr': 'build/modules/ml/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/modules/ml'}, '/home/andrew/code/pose_estimation/modules/img/src/hysteresis_thresholder.cc': {'word': '/home/andrew/code/pose_estimation/modules/img/src/hysteresis_thresholder.cc', 'action__path': '/home/andrew/code/pose_estimation/modules/img/src/hysteresis_thresholder.cc', 'kind': 'jump_list', 'abbr': 'modules/img/src/hysteresis_thresholder.cc', 'action__directory': '/home/andrew/code/pose_estimation/modules/img/src'}, '/home/andrew/code/pose_estimation/modules/io/include/humaneva_pose_reader.h': {'word': '/home/andrew/code/pose_estimation/modules/io/include/humaneva_pose_reader.h', 'action__path': '/home/andrew/code/pose_estimation/modules/io/include/humaneva_pose_reader.h', 'kind': 'jump_list', 'abbr': 'modules/io/include/humaneva_pose_reader.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/io/include'}, '/home/andrew/code/pose_estimation/modules/core/src/utility.cc': {'word': '/home/andrew/code/pose_estimation/modules/core/src/utility.cc', 'action__path': '/home/andrew/code/pose_estimation/modules/core/src/utility.cc', 'kind': 'jump_list', 'abbr': 'modules/core/src/utility.cc', 'action__directory': '/home/andrew/code/pose_estimation/modules/core/src'}, '/home/andrew/code/pose_estimation/ext/objective_functions/test/aig/test_edge_distance_map.cc': {'word': '/home/andrew/code/pose_estimation/ext/objective_functions/test/aig/test_edge_distance_map.cc', 'action__path': '/home/andrew/code/pose_estimation/ext/objective_functions/test/aig/test_edge_distance_map.cc', 'kind': 'jump_list', 'abbr': 'ext/objective_functions/test/aig/test_edge_distance_map.cc', 'action__directory': '/home/andrew/code/pose_estimation/ext/objective_functions/test/aig'}, '/home/andrew/code/pose_estimation/apps/sphere_model_maker/src/main.cc': {'word': '/home/andrew/code/pose_estimation/apps/sphere_model_maker/src/main.cc', 'action__path': '/home/andrew/code/pose_estimation/apps/sphere_model_maker/src/main.cc', 'kind': 'jump_list', 'abbr': 'apps/sphere_model_maker/src/main.cc', 'action__directory': '/home/andrew/code/pose_estimation/apps/sphere_model_maker/src'}, '/home/andrew/code/pose_estimation/ext/objective_functions/prog/showedge/main.cc': {'word': '/home/andrew/code/pose_estimation/ext/objective_functions/prog/showedge/main.cc', 'action__path': '/home/andrew/code/pose_estimation/ext/objective_functions/prog/showedge/main.cc', 'kind': 'jump_list', 'abbr': 'ext/objective_functions/prog/showedge/main.cc', 'action__directory': '/home/andrew/code/pose_estimation/ext/objective_functions/prog/showedge'}, '/home/andrew/code/pose_estimation/apps/gbuffer_viewer/.ycm_extra_conf.py': {'word': '/home/andrew/code/pose_estimation/apps/gbuffer_viewer/.ycm_extra_conf.py', 'action__path': '/home/andrew/code/pose_estimation/apps/gbuffer_viewer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'apps/gbuffer_viewer/.ycm_extra_conf.py', 'action__directory': '/home/andrew/code/pose_estimation/apps/gbuffer_viewer'}, '/home/andrew/code/pose_estimation/build/modules/ml/src/Makefile': {'word': '/home/andrew/code/pose_estimation/build/modules/ml/src/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/modules/ml/src/Makefile', 'kind': 'jump_list', 'abbr': 'build/modules/ml/src/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/modules/ml/src'}, '/home/andrew/code/pose_estimation/ext/objective_functions/test/aig/test_silhouette_evaluator.cc': {'word': '/home/andrew/code/pose_estimation/ext/objective_functions/test/aig/test_silhouette_evaluator.cc', 'action__path': '/home/andrew/code/pose_estimation/ext/objective_functions/test/aig/test_silhouette_evaluator.cc', 'kind': 'jump_list', 'abbr': 'ext/objective_functions/test/aig/test_silhouette_evaluator.cc', 'action__directory': '/home/andrew/code/pose_estimation/ext/objective_functions/test/aig'}, '/home/andrew/code/pose_estimation/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp': {'word': '/home/andrew/code/pose_estimation/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__path': '/home/andrew/code/pose_estimation/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'kind': 'jump_list', 'abbr': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__directory': '/home/andrew/code/pose_estimation/build/CMakeFiles/2.8.12.2/CompilerIdCXX'}, '/home/andrew/code/pose_estimation/modules/ml/include/discrete_information_gain.h': {'word': '/home/andrew/code/pose_estimation/modules/ml/include/discrete_information_gain.h', 'action__path': '/home/andrew/code/pose_estimation/modules/ml/include/discrete_information_gain.h', 'kind': 'jump_list', 'abbr': 'modules/ml/include/discrete_information_gain.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/ml/include'}, '/home/andrew/code/pose_estimation/build/modules/img/include/Makefile': {'word': '/home/andrew/code/pose_estimation/build/modules/img/include/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/modules/img/include/Makefile', 'kind': 'jump_list', 'abbr': 'build/modules/img/include/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/modules/img/include'}, '/home/andrew/code/pose_estimation/ext/objective_functions/test/aig/test_edge_evaluator.cc': {'word': '/home/andrew/code/pose_estimation/ext/objective_functions/test/aig/test_edge_evaluator.cc', 'action__path': '/home/andrew/code/pose_estimation/ext/objective_functions/test/aig/test_edge_evaluator.cc', 'kind': 'jump_list', 'abbr': 'ext/objective_functions/test/aig/test_edge_evaluator.cc', 'action__directory': '/home/andrew/code/pose_estimation/ext/objective_functions/test/aig'}, '/home/andrew/code/pose_estimation/.ycm_extra_conf.py': {'word': '/home/andrew/code/pose_estimation/.ycm_extra_conf.py', 'action__path': '/home/andrew/code/pose_estimation/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': '.ycm_extra_conf.py', 'action__directory': '/home/andrew/code/pose_estimation'}, '/home/andrew/code/pose_estimation/ext/objective_functions/test/aig/test_colour_detector.cc': {'word': '/home/andrew/code/pose_estimation/ext/objective_functions/test/aig/test_colour_detector.cc', 'action__path': '/home/andrew/code/pose_estimation/ext/objective_functions/test/aig/test_colour_detector.cc', 'kind': 'jump_list', 'abbr': 'ext/objective_functions/test/aig/test_colour_detector.cc', 'action__directory': '/home/andrew/code/pose_estimation/ext/objective_functions/test/aig'}, '/home/andrew/code/pose_estimation/modules/gl/src/camera.cc': {'word': '/home/andrew/code/pose_estimation/modules/gl/src/camera.cc', 'action__path': '/home/andrew/code/pose_estimation/modules/gl/src/camera.cc', 'kind': 'jump_list', 'abbr': 'modules/gl/src/camera.cc', 'action__directory': '/home/andrew/code/pose_estimation/modules/gl/src'}, '/home/andrew/code/pose_estimation/ext/objective_functions/build/Makefile': {'word': '/home/andrew/code/pose_estimation/ext/objective_functions/build/Makefile', 'action__path': '/home/andrew/code/pose_estimation/ext/objective_functions/build/Makefile', 'kind': 'jump_list', 'abbr': 'ext/objective_functions/build/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/ext/objective_functions/build'}, '/home/andrew/code/pose_estimation/modules/gl/include/pose_shader.h': {'word': '/home/andrew/code/pose_estimation/modules/gl/include/pose_shader.h', 'action__path': '/home/andrew/code/pose_estimation/modules/gl/include/pose_shader.h', 'kind': 'jump_list', 'abbr': 'modules/gl/include/pose_shader.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/gl/include'}, '/home/andrew/code/pose_estimation/build/apps/bmvc_project/Makefile': {'word': '/home/andrew/code/pose_estimation/build/apps/bmvc_project/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/apps/bmvc_project/Makefile', 'kind': 'jump_list', 'abbr': 'build/apps/bmvc_project/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/apps/bmvc_project'}, '/home/andrew/code/pose_estimation/modules/gl/include/instanced_shape_renderer.h': {'word': '/home/andrew/code/pose_estimation/modules/gl/include/instanced_shape_renderer.h', 'action__path': '/home/andrew/code/pose_estimation/modules/gl/include/instanced_shape_renderer.h', 'kind': 'jump_list', 'abbr': 'modules/gl/include/instanced_shape_renderer.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/gl/include'}, '/home/andrew/code/pose_estimation/build/modules/img/Makefile': {'word': '/home/andrew/code/pose_estimation/build/modules/img/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/modules/img/Makefile', 'kind': 'jump_list', 'abbr': 'build/modules/img/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/modules/img'}, '/home/andrew/code/pose_estimation/build/modules/core/Makefile': {'word': '/home/andrew/code/pose_estimation/build/modules/core/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/modules/core/Makefile', 'kind': 'jump_list', 'abbr': 'build/modules/core/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/modules/core'}, '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig/silhouette_evaluator.cc': {'word': '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig/silhouette_evaluator.cc', 'action__path': '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig/silhouette_evaluator.cc', 'kind': 'jump_list', 'abbr': 'ext/objective_functions/xing/aig/silhouette_evaluator.cc', 'action__directory': '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig'}, '/home/andrew/code/pose_estimation/apps/bmvc_project/.ycm_extra_conf.py': {'word': '/home/andrew/code/pose_estimation/apps/bmvc_project/.ycm_extra_conf.py', 'action__path': '/home/andrew/code/pose_estimation/apps/bmvc_project/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'apps/bmvc_project/.ycm_extra_conf.py', 'action__directory': '/home/andrew/code/pose_estimation/apps/bmvc_project'}, '/home/andrew/code/pose_estimation/modules/core/include/bone.h': {'word': '/home/andrew/code/pose_estimation/modules/core/include/bone.h', 'action__path': '/home/andrew/code/pose_estimation/modules/core/include/bone.h', 'kind': 'jump_list', 'abbr': 'modules/core/include/bone.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/core/include'}, '/home/andrew/code/pose_estimation/build/apps/abalone_forest/Makefile': {'word': '/home/andrew/code/pose_estimation/build/apps/abalone_forest/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/apps/abalone_forest/Makefile', 'kind': 'jump_list', 'abbr': 'build/apps/abalone_forest/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/apps/abalone_forest'}, '/home/andrew/code/pose_estimation/apps/depth_shader_viewer/.ycm_extra_conf.py': {'word': '/home/andrew/code/pose_estimation/apps/depth_shader_viewer/.ycm_extra_conf.py', 'action__path': '/home/andrew/code/pose_estimation/apps/depth_shader_viewer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'apps/depth_shader_viewer/.ycm_extra_conf.py', 'action__directory': '/home/andrew/code/pose_estimation/apps/depth_shader_viewer'}, '/home/andrew/code/pose_estimation/scripts/compare_poses.py': {'word': '/home/andrew/code/pose_estimation/scripts/compare_poses.py', 'action__path': '/home/andrew/code/pose_estimation/scripts/compare_poses.py', 'kind': 'jump_list', 'abbr': 'scripts/compare_poses.py', 'action__directory': '/home/andrew/code/pose_estimation/scripts'}, '/home/andrew/code/pose_estimation/modules/ml/include/latent_tree_node.h': {'word': '/home/andrew/code/pose_estimation/modules/ml/include/latent_tree_node.h', 'action__path': '/home/andrew/code/pose_estimation/modules/ml/include/latent_tree_node.h', 'kind': 'jump_list', 'abbr': 'modules/ml/include/latent_tree_node.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/ml/include'}, '/home/andrew/code/pose_estimation/apps/pose_interpolator/src/pose_interpolator_options.cc': {'word': '/home/andrew/code/pose_estimation/apps/pose_interpolator/src/pose_interpolator_options.cc', 'action__path': '/home/andrew/code/pose_estimation/apps/pose_interpolator/src/pose_interpolator_options.cc', 'kind': 'jump_list', 'abbr': 'apps/pose_interpolator/src/pose_interpolator_options.cc', 'action__directory': '/home/andrew/code/pose_estimation/apps/pose_interpolator/src'}, '/home/andrew/code/pose_estimation/modules/io/test/test_pose_reader.cc': {'word': '/home/andrew/code/pose_estimation/modules/io/test/test_pose_reader.cc', 'action__path': '/home/andrew/code/pose_estimation/modules/io/test/test_pose_reader.cc', 'kind': 'jump_list', 'abbr': 'modules/io/test/test_pose_reader.cc', 'action__directory': '/home/andrew/code/pose_estimation/modules/io/test'}, '/home/andrew/code/pose_estimation/modules/gl/src/prism.cc': {'word': '/home/andrew/code/pose_estimation/modules/gl/src/prism.cc', 'action__path': '/home/andrew/code/pose_estimation/modules/gl/src/prism.cc', 'kind': 'jump_list', 'abbr': 'modules/gl/src/prism.cc', 'action__directory': '/home/andrew/code/pose_estimation/modules/gl/src'}, '/home/andrew/code/pose_estimation/modules/gl/include/tiler.h': {'word': '/home/andrew/code/pose_estimation/modules/gl/include/tiler.h', 'action__path': '/home/andrew/code/pose_estimation/modules/gl/include/tiler.h', 'kind': 'jump_list', 'abbr': 'modules/gl/include/tiler.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/gl/include'}, '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig/camera_image.hpp': {'word': '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig/camera_image.hpp', 'action__path': '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig/camera_image.hpp', 'kind': 'jump_list', 'abbr': 'ext/objective_functions/xing/aig/camera_image.hpp', 'action__directory': '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig'}, '/home/andrew/code/pose_estimation/modules/ml/include/scalar_split_function.h': {'word': '/home/andrew/code/pose_estimation/modules/ml/include/scalar_split_function.h', 'action__path': '/home/andrew/code/pose_estimation/modules/ml/include/scalar_split_function.h', 'kind': 'jump_list', 'abbr': 'modules/ml/include/scalar_split_function.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/ml/include'}, '/home/andrew/code/pose_estimation/apps/pose_interpolator/src/main.cc': {'word': '/home/andrew/code/pose_estimation/apps/pose_interpolator/src/main.cc', 'action__path': '/home/andrew/code/pose_estimation/apps/pose_interpolator/src/main.cc', 'kind': 'jump_list', 'abbr': 'apps/pose_interpolator/src/main.cc', 'action__directory': '/home/andrew/code/pose_estimation/apps/pose_interpolator/src'}, '/home/andrew/code/pose_estimation/modules/gl/include/camera.h': {'word': '/home/andrew/code/pose_estimation/modules/gl/include/camera.h', 'action__path': '/home/andrew/code/pose_estimation/modules/gl/include/camera.h', 'kind': 'jump_list', 'abbr': 'modules/gl/include/camera.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/gl/include'}, '/home/andrew/code/pose_estimation/apps/edge_shader_viewer/src/main.cc': {'word': '/home/andrew/code/pose_estimation/apps/edge_shader_viewer/src/main.cc', 'action__path': '/home/andrew/code/pose_estimation/apps/edge_shader_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'apps/edge_shader_viewer/src/main.cc', 'action__directory': '/home/andrew/code/pose_estimation/apps/edge_shader_viewer/src'}, '/home/andrew/code/pose_estimation/modules/ml/include/split_function_chooser.h': {'word': '/home/andrew/code/pose_estimation/modules/ml/include/split_function_chooser.h', 'action__path': '/home/andrew/code/pose_estimation/modules/ml/include/split_function_chooser.h', 'kind': 'jump_list', 'abbr': 'modules/ml/include/split_function_chooser.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/ml/include'}, '/home/andrew/code/pose_estimation/modules/ml/test/discrete_entropy_test.cc': {'word': '/home/andrew/code/pose_estimation/modules/ml/test/discrete_entropy_test.cc', 'action__path': '/home/andrew/code/pose_estimation/modules/ml/test/discrete_entropy_test.cc', 'kind': 'jump_list', 'abbr': 'modules/ml/test/discrete_entropy_test.cc', 'action__directory': '/home/andrew/code/pose_estimation/modules/ml/test'}, '/home/andrew/code/pose_estimation/modules/core/include/pose.h': {'word': '/home/andrew/code/pose_estimation/modules/core/include/pose.h', 'action__path': '/home/andrew/code/pose_estimation/modules/core/include/pose.h', 'kind': 'jump_list', 'abbr': 'modules/core/include/pose.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/core/include'}, '/home/andrew/code/pose_estimation/build/apps/pose_viewer/src/Makefile': {'word': '/home/andrew/code/pose_estimation/build/apps/pose_viewer/src/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/apps/pose_viewer/src/Makefile', 'kind': 'jump_list', 'abbr': 'build/apps/pose_viewer/src/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/apps/pose_viewer/src'}, '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig/silhouette_evaluator.hpp': {'word': '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig/silhouette_evaluator.hpp', 'action__path': '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig/silhouette_evaluator.hpp', 'kind': 'jump_list', 'abbr': 'ext/objective_functions/xing/aig/silhouette_evaluator.hpp', 'action__directory': '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig'}, '/home/andrew/code/pose_estimation/modules/io/include/json_pose_writer.h': {'word': '/home/andrew/code/pose_estimation/modules/io/include/json_pose_writer.h', 'action__path': '/home/andrew/code/pose_estimation/modules/io/include/json_pose_writer.h', 'kind': 'jump_list', 'abbr': 'modules/io/include/json_pose_writer.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/io/include'}, '/home/andrew/code/pose_estimation/modules/io/src/json_pose_writer.cc': {'word': '/home/andrew/code/pose_estimation/modules/io/src/json_pose_writer.cc', 'action__path': '/home/andrew/code/pose_estimation/modules/io/src/json_pose_writer.cc', 'kind': 'jump_list', 'abbr': 'modules/io/src/json_pose_writer.cc', 'action__directory': '/home/andrew/code/pose_estimation/modules/io/src'}, '/home/andrew/code/pose_estimation/modules/optim/test/test_particle_swarm.cc': {'word': '/home/andrew/code/pose_estimation/modules/optim/test/test_particle_swarm.cc', 'action__path': '/home/andrew/code/pose_estimation/modules/optim/test/test_particle_swarm.cc', 'kind': 'jump_list', 'abbr': 'modules/optim/test/test_particle_swarm.cc', 'action__directory': '/home/andrew/code/pose_estimation/modules/optim/test'}, '/home/andrew/code/pose_estimation/build/modules/ml/include/Makefile': {'word': '/home/andrew/code/pose_estimation/build/modules/ml/include/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/modules/ml/include/Makefile', 'kind': 'jump_list', 'abbr': 'build/modules/ml/include/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/modules/ml/include'}, '/home/andrew/code/pose_estimation/build/modules/geom/Makefile': {'word': '/home/andrew/code/pose_estimation/build/modules/geom/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/modules/geom/Makefile', 'kind': 'jump_list', 'abbr': 'build/modules/geom/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/modules/geom'}, '/home/andrew/code/pose_estimation/modules/core/include/utility.h': {'word': '/home/andrew/code/pose_estimation/modules/core/include/utility.h', 'action__path': '/home/andrew/code/pose_estimation/modules/core/include/utility.h', 'kind': 'jump_list', 'abbr': 'modules/core/include/utility.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/core/include'}, '/home/andrew/code/pose_estimation/modules/io/include/json_reader_utils.h': {'word': '/home/andrew/code/pose_estimation/modules/io/include/json_reader_utils.h', 'action__path': '/home/andrew/code/pose_estimation/modules/io/include/json_reader_utils.h', 'kind': 'jump_list', 'abbr': 'modules/io/include/json_reader_utils.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/io/include'}, '/home/andrew/code/pose_estimation/modules/optim/include/particle_swarm.h': {'word': '/home/andrew/code/pose_estimation/modules/optim/include/particle_swarm.h', 'action__path': '/home/andrew/code/pose_estimation/modules/optim/include/particle_swarm.h', 'kind': 'jump_list', 'abbr': 'modules/optim/include/particle_swarm.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/optim/include'}, '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig/depth_overlap_evaluator.hpp': {'word': '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig/depth_overlap_evaluator.hpp', 'action__path': '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig/depth_overlap_evaluator.hpp', 'kind': 'jump_list', 'abbr': 'ext/objective_functions/xing/aig/depth_overlap_evaluator.hpp', 'action__directory': '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig'}, '/home/andrew/code/pose_estimation/modules/optim/src/particle.cc': {'word': '/home/andrew/code/pose_estimation/modules/optim/src/particle.cc', 'action__path': '/home/andrew/code/pose_estimation/modules/optim/src/particle.cc', 'kind': 'jump_list', 'abbr': 'modules/optim/src/particle.cc', 'action__directory': '/home/andrew/code/pose_estimation/modules/optim/src'}, '/home/andrew/code/pose_estimation/modules/gl/include/sphere_model_maker.h': {'word': '/home/andrew/code/pose_estimation/modules/gl/include/sphere_model_maker.h', 'action__path': '/home/andrew/code/pose_estimation/modules/gl/include/sphere_model_maker.h', 'kind': 'jump_list', 'abbr': 'modules/gl/include/sphere_model_maker.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/gl/include'}, '/home/andrew/code/pose_estimation/ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c': {'word': '/home/andrew/code/pose_estimation/ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__path': '/home/andrew/code/pose_estimation/ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'kind': 'jump_list', 'abbr': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__directory': '/home/andrew/code/pose_estimation/ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC'}, '/home/andrew/code/pose_estimation/modules/gl/src/instanced_mesh_renderer.cc': {'word': '/home/andrew/code/pose_estimation/modules/gl/src/instanced_mesh_renderer.cc', 'action__path': '/home/andrew/code/pose_estimation/modules/gl/src/instanced_mesh_renderer.cc', 'kind': 'jump_list', 'abbr': 'modules/gl/src/instanced_mesh_renderer.cc', 'action__directory': '/home/andrew/code/pose_estimation/modules/gl/src'}, '/home/andrew/code/pose_estimation/modules/core/src/old_pose.cc': {'word': '/home/andrew/code/pose_estimation/modules/core/src/old_pose.cc', 'action__path': '/home/andrew/code/pose_estimation/modules/core/src/old_pose.cc', 'kind': 'jump_list', 'abbr': 'modules/core/src/old_pose.cc', 'action__directory': '/home/andrew/code/pose_estimation/modules/core/src'}, '/home/andrew/code/pose_estimation/modules/io/include/glm_serialisation.h': {'word': '/home/andrew/code/pose_estimation/modules/io/include/glm_serialisation.h', 'action__path': '/home/andrew/code/pose_estimation/modules/io/include/glm_serialisation.h', 'kind': 'jump_list', 'abbr': 'modules/io/include/glm_serialisation.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/io/include'}, '/home/andrew/code/pose_estimation/modules/ml/src/latent_tree_node.cc': {'word': '/home/andrew/code/pose_estimation/modules/ml/src/latent_tree_node.cc', 'action__path': '/home/andrew/code/pose_estimation/modules/ml/src/latent_tree_node.cc', 'kind': 'jump_list', 'abbr': 'modules/ml/src/latent_tree_node.cc', 'action__directory': '/home/andrew/code/pose_estimation/modules/ml/src'}, '/home/andrew/code/pose_estimation/apps/gbuffer_viewer/include/gbuffer_viewer_options.h': {'word': '/home/andrew/code/pose_estimation/apps/gbuffer_viewer/include/gbuffer_viewer_options.h', 'action__path': '/home/andrew/code/pose_estimation/apps/gbuffer_viewer/include/gbuffer_viewer_options.h', 'kind': 'jump_list', 'abbr': 'apps/gbuffer_viewer/include/gbuffer_viewer_options.h', 'action__directory': '/home/andrew/code/pose_estimation/apps/gbuffer_viewer/include'}, '/home/andrew/code/pose_estimation/build/apps/depth_shader_viewer/Makefile': {'word': '/home/andrew/code/pose_estimation/build/apps/depth_shader_viewer/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/apps/depth_shader_viewer/Makefile', 'kind': 'jump_list', 'abbr': 'build/apps/depth_shader_viewer/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/apps/depth_shader_viewer'}, '/home/andrew/code/pose_estimation/modules/ml/include/latent_tree_model.h': {'word': '/home/andrew/code/pose_estimation/modules/ml/include/latent_tree_model.h', 'action__path': '/home/andrew/code/pose_estimation/modules/ml/include/latent_tree_model.h', 'kind': 'jump_list', 'abbr': 'modules/ml/include/latent_tree_model.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/ml/include'}, '/home/andrew/code/pose_estimation/modules/core/include/image.h': {'word': '/home/andrew/code/pose_estimation/modules/core/include/image.h', 'action__path': '/home/andrew/code/pose_estimation/modules/core/include/image.h', 'kind': 'jump_list', 'abbr': 'modules/core/include/image.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/core/include'}, '/home/andrew/code/pose_estimation/modules/gl/include/gl.h': {'word': '/home/andrew/code/pose_estimation/modules/gl/include/gl.h', 'action__path': '/home/andrew/code/pose_estimation/modules/gl/include/gl.h', 'kind': 'jump_list', 'abbr': 'modules/gl/include/gl.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/gl/include'}, '/home/andrew/code/pose_estimation/apps/particle_swarm_demo/src/main.cc': {'word': '/home/andrew/code/pose_estimation/apps/particle_swarm_demo/src/main.cc', 'action__path': '/home/andrew/code/pose_estimation/apps/particle_swarm_demo/src/main.cc', 'kind': 'jump_list', 'abbr': 'apps/particle_swarm_demo/src/main.cc', 'action__directory': '/home/andrew/code/pose_estimation/apps/particle_swarm_demo/src'}, '/home/andrew/code/pose_estimation/build/apps/pose_creator/Makefile': {'word': '/home/andrew/code/pose_estimation/build/apps/pose_creator/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/apps/pose_creator/Makefile', 'kind': 'jump_list', 'abbr': 'build/apps/pose_creator/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/apps/pose_creator'}, '/home/andrew/code/pose_estimation/modules/ml/include/decision_tree.h': {'word': '/home/andrew/code/pose_estimation/modules/ml/include/decision_tree.h', 'action__path': '/home/andrew/code/pose_estimation/modules/ml/include/decision_tree.h', 'kind': 'jump_list', 'abbr': 'modules/ml/include/decision_tree.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/ml/include'}, '/home/andrew/code/pose_estimation/build/apps/lrt_tester/Makefile': {'word': '/home/andrew/code/pose_estimation/build/apps/lrt_tester/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/apps/lrt_tester/Makefile', 'kind': 'jump_list', 'abbr': 'build/apps/lrt_tester/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/apps/lrt_tester'}, '/home/andrew/code/pose_estimation/modules/ml/include/offset_leaf.h': {'word': '/home/andrew/code/pose_estimation/modules/ml/include/offset_leaf.h', 'action__path': '/home/andrew/code/pose_estimation/modules/ml/include/offset_leaf.h', 'kind': 'jump_list', 'abbr': 'modules/ml/include/offset_leaf.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/ml/include'}, '/home/andrew/code/pose_estimation/modules/gl/include/cuboid.h': {'word': '/home/andrew/code/pose_estimation/modules/gl/include/cuboid.h', 'action__path': '/home/andrew/code/pose_estimation/modules/gl/include/cuboid.h', 'kind': 'jump_list', 'abbr': 'modules/gl/include/cuboid.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/gl/include'}, '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig/colour_detector.cc': {'word': '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig/colour_detector.cc', 'action__path': '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig/colour_detector.cc', 'kind': 'jump_list', 'abbr': 'ext/objective_functions/xing/aig/colour_detector.cc', 'action__directory': '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig'}, '/home/andrew/code/pose_estimation/modules/io/include/wenping_pose_reader.h': {'word': '/home/andrew/code/pose_estimation/modules/io/include/wenping_pose_reader.h', 'action__path': '/home/andrew/code/pose_estimation/modules/io/include/wenping_pose_reader.h', 'kind': 'jump_list', 'abbr': 'modules/io/include/wenping_pose_reader.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/io/include'}, '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig/edge_evaluator.cc': {'word': '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig/edge_evaluator.cc', 'action__path': '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig/edge_evaluator.cc', 'kind': 'jump_list', 'abbr': 'ext/objective_functions/xing/aig/edge_evaluator.cc', 'action__directory': '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig'}, '/home/andrew/code/pose_estimation/ext/objective_functions/prog/depthseg/main.cc': {'word': '/home/andrew/code/pose_estimation/ext/objective_functions/prog/depthseg/main.cc', 'action__path': '/home/andrew/code/pose_estimation/ext/objective_functions/prog/depthseg/main.cc', 'kind': 'jump_list', 'abbr': 'ext/objective_functions/prog/depthseg/main.cc', 'action__directory': '/home/andrew/code/pose_estimation/ext/objective_functions/prog/depthseg'}, '/home/andrew/code/pose_estimation/build/apps/pose_interpolator/Makefile': {'word': '/home/andrew/code/pose_estimation/build/apps/pose_interpolator/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/apps/pose_interpolator/Makefile', 'kind': 'jump_list', 'abbr': 'build/apps/pose_interpolator/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/apps/pose_interpolator'}, '/home/andrew/code/pose_estimation/modules/core/include/mymath.h': {'word': '/home/andrew/code/pose_estimation/modules/core/include/mymath.h', 'action__path': '/home/andrew/code/pose_estimation/modules/core/include/mymath.h', 'kind': 'jump_list', 'abbr': 'modules/core/include/mymath.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/core/include'}, '/home/andrew/code/pose_estimation/modules/core/include/old_joint.h': {'word': '/home/andrew/code/pose_estimation/modules/core/include/old_joint.h', 'action__path': '/home/andrew/code/pose_estimation/modules/core/include/old_joint.h', 'kind': 'jump_list', 'abbr': 'modules/core/include/old_joint.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/core/include'}, '/home/andrew/code/pose_estimation/modules/core/src/hand_pose_27_dof.cc': {'word': '/home/andrew/code/pose_estimation/modules/core/src/hand_pose_27_dof.cc', 'action__path': '/home/andrew/code/pose_estimation/modules/core/src/hand_pose_27_dof.cc', 'kind': 'jump_list', 'abbr': 'modules/core/src/hand_pose_27_dof.cc', 'action__directory': '/home/andrew/code/pose_estimation/modules/core/src'}, '/home/andrew/code/pose_estimation/apps/pose_interpolator/include/pose_interpolator_options.h': {'word': '/home/andrew/code/pose_estimation/apps/pose_interpolator/include/pose_interpolator_options.h', 'action__path': '/home/andrew/code/pose_estimation/apps/pose_interpolator/include/pose_interpolator_options.h', 'kind': 'jump_list', 'abbr': 'apps/pose_interpolator/include/pose_interpolator_options.h', 'action__directory': '/home/andrew/code/pose_estimation/apps/pose_interpolator/include'}, '/home/andrew/code/pose_estimation/modules/io/src/json_reader_utils.cc': {'word': '/home/andrew/code/pose_estimation/modules/io/src/json_reader_utils.cc', 'action__path': '/home/andrew/code/pose_estimation/modules/io/src/json_reader_utils.cc', 'kind': 'jump_list', 'abbr': 'modules/io/src/json_reader_utils.cc', 'action__directory': '/home/andrew/code/pose_estimation/modules/io/src'}, '/home/andrew/code/pose_estimation/build/apps/sphere_model_optim/src/Makefile': {'word': '/home/andrew/code/pose_estimation/build/apps/sphere_model_optim/src/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/apps/sphere_model_optim/src/Makefile', 'kind': 'jump_list', 'abbr': 'build/apps/sphere_model_optim/src/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/apps/sphere_model_optim/src'}, '/home/andrew/code/pose_estimation/build/apps/edge_shader_viewer/src/Makefile': {'word': '/home/andrew/code/pose_estimation/build/apps/edge_shader_viewer/src/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/apps/edge_shader_viewer/src/Makefile', 'kind': 'jump_list', 'abbr': 'build/apps/edge_shader_viewer/src/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/apps/edge_shader_viewer/src'}, '/home/andrew/code/pose_estimation/modules/gl/include/shader_program.h': {'word': '/home/andrew/code/pose_estimation/modules/gl/include/shader_program.h', 'action__path': '/home/andrew/code/pose_estimation/modules/gl/include/shader_program.h', 'kind': 'jump_list', 'abbr': 'modules/gl/include/shader_program.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/gl/include'}, '/home/andrew/code/pose_estimation/modules/io/test/test_pose_writer.cc': {'word': '/home/andrew/code/pose_estimation/modules/io/test/test_pose_writer.cc', 'action__path': '/home/andrew/code/pose_estimation/modules/io/test/test_pose_writer.cc', 'kind': 'jump_list', 'abbr': 'modules/io/test/test_pose_writer.cc', 'action__directory': '/home/andrew/code/pose_estimation/modules/io/test'}, '/home/andrew/code/pose_estimation/modules/core/src/pose.cc': {'word': '/home/andrew/code/pose_estimation/modules/core/src/pose.cc', 'action__path': '/home/andrew/code/pose_estimation/modules/core/src/pose.cc', 'kind': 'jump_list', 'abbr': 'modules/core/src/pose.cc', 'action__directory': '/home/andrew/code/pose_estimation/modules/core/src'}, '/home/andrew/code/pose_estimation/build/apps/sphere_model_maker/Makefile': {'word': '/home/andrew/code/pose_estimation/build/apps/sphere_model_maker/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/apps/sphere_model_maker/Makefile', 'kind': 'jump_list', 'abbr': 'build/apps/sphere_model_maker/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/apps/sphere_model_maker'}, '/home/andrew/code/pose_estimation/modules/gl/src/tiler.cc': {'word': '/home/andrew/code/pose_estimation/modules/gl/src/tiler.cc', 'action__path': '/home/andrew/code/pose_estimation/modules/gl/src/tiler.cc', 'kind': 'jump_list', 'abbr': 'modules/gl/src/tiler.cc', 'action__directory': '/home/andrew/code/pose_estimation/modules/gl/src'}, '/home/andrew/code/pose_estimation/modules/io/include/json_pose_reader.h': {'word': '/home/andrew/code/pose_estimation/modules/io/include/json_pose_reader.h', 'action__path': '/home/andrew/code/pose_estimation/modules/io/include/json_pose_reader.h', 'kind': 'jump_list', 'abbr': 'modules/io/include/json_pose_reader.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/io/include'}, '/home/andrew/code/pose_estimation/modules/gl/include/background_drawer.h': {'word': '/home/andrew/code/pose_estimation/modules/gl/include/background_drawer.h', 'action__path': '/home/andrew/code/pose_estimation/modules/gl/include/background_drawer.h', 'kind': 'jump_list', 'abbr': 'modules/gl/include/background_drawer.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/gl/include'}, '/home/andrew/code/pose_estimation/modules/ml/include/latent_regression_tree.h': {'word': '/home/andrew/code/pose_estimation/modules/ml/include/latent_regression_tree.h', 'action__path': '/home/andrew/code/pose_estimation/modules/ml/include/latent_regression_tree.h', 'kind': 'jump_list', 'abbr': 'modules/ml/include/latent_regression_tree.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/ml/include'}, '/home/andrew/code/pose_estimation/build/apps/sphere_model_renderer/Makefile': {'word': '/home/andrew/code/pose_estimation/build/apps/sphere_model_renderer/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/apps/sphere_model_renderer/Makefile', 'kind': 'jump_list', 'abbr': 'build/apps/sphere_model_renderer/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/apps/sphere_model_renderer'}, '/home/andrew/code/pose_estimation/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c': {'word': '/home/andrew/code/pose_estimation/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__path': '/home/andrew/code/pose_estimation/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'kind': 'jump_list', 'abbr': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__directory': '/home/andrew/code/pose_estimation/build/CMakeFiles/2.8.12.2/CompilerIdC'}, '/home/andrew/code/pose_estimation/modules/core/include/pose_vector.h': {'word': '/home/andrew/code/pose_estimation/modules/core/include/pose_vector.h', 'action__path': '/home/andrew/code/pose_estimation/modules/core/include/pose_vector.h', 'kind': 'jump_list', 'abbr': 'modules/core/include/pose_vector.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/core/include'}, '/home/andrew/code/pose_estimation/modules/ml/test/discrete_information_gain_test.cc': {'word': '/home/andrew/code/pose_estimation/modules/ml/test/discrete_information_gain_test.cc', 'action__path': '/home/andrew/code/pose_estimation/modules/ml/test/discrete_information_gain_test.cc', 'kind': 'jump_list', 'abbr': 'modules/ml/test/discrete_information_gain_test.cc', 'action__directory': '/home/andrew/code/pose_estimation/modules/ml/test'}, '/home/andrew/code/pose_estimation/modules/gl/src/gbuffer.cc': {'word': '/home/andrew/code/pose_estimation/modules/gl/src/gbuffer.cc', 'action__path': '/home/andrew/code/pose_estimation/modules/gl/src/gbuffer.cc', 'kind': 'jump_list', 'abbr': 'modules/gl/src/gbuffer.cc', 'action__directory': '/home/andrew/code/pose_estimation/modules/gl/src'}, '/home/andrew/code/pose_estimation/build/apps/skel_viewer/src/Makefile': {'word': '/home/andrew/code/pose_estimation/build/apps/skel_viewer/src/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/apps/skel_viewer/src/Makefile', 'kind': 'jump_list', 'abbr': 'build/apps/skel_viewer/src/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/apps/skel_viewer/src'}, '/home/andrew/code/pose_estimation/modules/gl/include/pipeline.h': {'word': '/home/andrew/code/pose_estimation/modules/gl/include/pipeline.h', 'action__path': '/home/andrew/code/pose_estimation/modules/gl/include/pipeline.h', 'kind': 'jump_list', 'abbr': 'modules/gl/include/pipeline.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/gl/include'}, '/home/andrew/code/pose_estimation/modules/ml/src/latent_tree_model.cc': {'word': '/home/andrew/code/pose_estimation/modules/ml/src/latent_tree_model.cc', 'action__path': '/home/andrew/code/pose_estimation/modules/ml/src/latent_tree_model.cc', 'kind': 'jump_list', 'abbr': 'modules/ml/src/latent_tree_model.cc', 'action__directory': '/home/andrew/code/pose_estimation/modules/ml/src'}, '/home/andrew/code/pose_estimation/modules/geom/include/sphere.h': {'word': '/home/andrew/code/pose_estimation/modules/geom/include/sphere.h', 'action__path': '/home/andrew/code/pose_estimation/modules/geom/include/sphere.h', 'kind': 'jump_list', 'abbr': 'modules/geom/include/sphere.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/geom/include'}, '/home/andrew/code/pose_estimation/apps/depth_shader_viewer/src/depth_shader_viewer_options.cc': {'word': '/home/andrew/code/pose_estimation/apps/depth_shader_viewer/src/depth_shader_viewer_options.cc', 'action__path': '/home/andrew/code/pose_estimation/apps/depth_shader_viewer/src/depth_shader_viewer_options.cc', 'kind': 'jump_list', 'abbr': 'apps/depth_shader_viewer/src/depth_shader_viewer_options.cc', 'action__directory': '/home/andrew/code/pose_estimation/apps/depth_shader_viewer/src'}, '/home/andrew/code/pose_estimation/modules/io/include/io.h': {'word': '/home/andrew/code/pose_estimation/modules/io/include/io.h', 'action__path': '/home/andrew/code/pose_estimation/modules/io/include/io.h', 'kind': 'jump_list', 'abbr': 'modules/io/include/io.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/io/include'}, '/home/andrew/code/pose_estimation/ext/objective_functions/test/aig/test_camera_image_evaluator.cc': {'word': '/home/andrew/code/pose_estimation/ext/objective_functions/test/aig/test_camera_image_evaluator.cc', 'action__path': '/home/andrew/code/pose_estimation/ext/objective_functions/test/aig/test_camera_image_evaluator.cc', 'kind': 'jump_list', 'abbr': 'ext/objective_functions/test/aig/test_camera_image_evaluator.cc', 'action__directory': '/home/andrew/code/pose_estimation/ext/objective_functions/test/aig'}, '/home/andrew/code/pose_estimation/modules/ml/test/latent_tree_model_test.cc': {'word': '/home/andrew/code/pose_estimation/modules/ml/test/latent_tree_model_test.cc', 'action__path': '/home/andrew/code/pose_estimation/modules/ml/test/latent_tree_model_test.cc', 'kind': 'jump_list', 'abbr': 'modules/ml/test/latent_tree_model_test.cc', 'action__directory': '/home/andrew/code/pose_estimation/modules/ml/test'}, '/home/andrew/code/pose_estimation/modules/core/include/hand_pose_34_dof.h': {'word': '/home/andrew/code/pose_estimation/modules/core/include/hand_pose_34_dof.h', 'action__path': '/home/andrew/code/pose_estimation/modules/core/include/hand_pose_34_dof.h', 'kind': 'jump_list', 'abbr': 'modules/core/include/hand_pose_34_dof.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/core/include'}, '/home/andrew/code/pose_estimation/modules/gl/include/instanced_mesh_renderer.h': {'word': '/home/andrew/code/pose_estimation/modules/gl/include/instanced_mesh_renderer.h', 'action__path': '/home/andrew/code/pose_estimation/modules/gl/include/instanced_mesh_renderer.h', 'kind': 'jump_list', 'abbr': 'modules/gl/include/instanced_mesh_renderer.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/gl/include'}, '/home/andrew/code/pose_estimation/apps/multicam_mesh_viewer/src/main.cc': {'word': '/home/andrew/code/pose_estimation/apps/multicam_mesh_viewer/src/main.cc', 'action__path': '/home/andrew/code/pose_estimation/apps/multicam_mesh_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'apps/multicam_mesh_viewer/src/main.cc', 'action__directory': '/home/andrew/code/pose_estimation/apps/multicam_mesh_viewer/src'}, '/home/andrew/code/pose_estimation/modules/gl/include/surface.h': {'word': '/home/andrew/code/pose_estimation/modules/gl/include/surface.h', 'action__path': '/home/andrew/code/pose_estimation/modules/gl/include/surface.h', 'kind': 'jump_list', 'abbr': 'modules/gl/include/surface.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/gl/include'}, '/home/andrew/code/pose_estimation/apps/sphere_model_optim/src/main.cc': {'word': '/home/andrew/code/pose_estimation/apps/sphere_model_optim/src/main.cc', 'action__path': '/home/andrew/code/pose_estimation/apps/sphere_model_optim/src/main.cc', 'kind': 'jump_list', 'abbr': 'apps/sphere_model_optim/src/main.cc', 'action__directory': '/home/andrew/code/pose_estimation/apps/sphere_model_optim/src'}, '/home/andrew/code/pose_estimation/modules/gl/src/shape_renderer.cc': {'word': '/home/andrew/code/pose_estimation/modules/gl/src/shape_renderer.cc', 'action__path': '/home/andrew/code/pose_estimation/modules/gl/src/shape_renderer.cc', 'kind': 'jump_list', 'abbr': 'modules/gl/src/shape_renderer.cc', 'action__directory': '/home/andrew/code/pose_estimation/modules/gl/src'}, '/home/andrew/code/pose_estimation/modules/core/include/hand_pose_27_dof.h': {'word': '/home/andrew/code/pose_estimation/modules/core/include/hand_pose_27_dof.h', 'action__path': '/home/andrew/code/pose_estimation/modules/core/include/hand_pose_27_dof.h', 'kind': 'jump_list', 'abbr': 'modules/core/include/hand_pose_27_dof.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/core/include'}, '/home/andrew/code/pose_estimation/apps/bmvc_project/include/bmvc_options.h': {'word': '/home/andrew/code/pose_estimation/apps/bmvc_project/include/bmvc_options.h', 'action__path': '/home/andrew/code/pose_estimation/apps/bmvc_project/include/bmvc_options.h', 'kind': 'jump_list', 'abbr': 'apps/bmvc_project/include/bmvc_options.h', 'action__directory': '/home/andrew/code/pose_estimation/apps/bmvc_project/include'}, '/home/andrew/code/pose_estimation/apps/pose_renderer/src/pose_renderer_options.cc': {'word': '/home/andrew/code/pose_estimation/apps/pose_renderer/src/pose_renderer_options.cc', 'action__path': '/home/andrew/code/pose_estimation/apps/pose_renderer/src/pose_renderer_options.cc', 'kind': 'jump_list', 'abbr': 'apps/pose_renderer/src/pose_renderer_options.cc', 'action__directory': '/home/andrew/code/pose_estimation/apps/pose_renderer/src'}, '/home/andrew/code/pose_estimation/modules/gl/src/mesh.cc': {'word': '/home/andrew/code/pose_estimation/modules/gl/src/mesh.cc', 'action__path': '/home/andrew/code/pose_estimation/modules/gl/src/mesh.cc', 'kind': 'jump_list', 'abbr': 'modules/gl/src/mesh.cc', 'action__directory': '/home/andrew/code/pose_estimation/modules/gl/src'}, '/home/andrew/code/pose_estimation/modules/gl/include/background_shader.h': {'word': '/home/andrew/code/pose_estimation/modules/gl/include/background_shader.h', 'action__path': '/home/andrew/code/pose_estimation/modules/gl/include/background_shader.h', 'kind': 'jump_list', 'abbr': 'modules/gl/include/background_shader.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/gl/include'}, '/home/andrew/code/pose_estimation/ext/objective_functions/prog/showedge/showedge.hpp': {'word': '/home/andrew/code/pose_estimation/ext/objective_functions/prog/showedge/showedge.hpp', 'action__path': '/home/andrew/code/pose_estimation/ext/objective_functions/prog/showedge/showedge.hpp', 'kind': 'jump_list', 'abbr': 'ext/objective_functions/prog/showedge/showedge.hpp', 'action__directory': '/home/andrew/code/pose_estimation/ext/objective_functions/prog/showedge'}, '/home/andrew/code/pose_estimation/apps/edge_shader_viewer/.ycm_extra_conf.py': {'word': '/home/andrew/code/pose_estimation/apps/edge_shader_viewer/.ycm_extra_conf.py', 'action__path': '/home/andrew/code/pose_estimation/apps/edge_shader_viewer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'apps/edge_shader_viewer/.ycm_extra_conf.py', 'action__directory': '/home/andrew/code/pose_estimation/apps/edge_shader_viewer'}, '/home/andrew/code/pose_estimation/build/apps/pose_renderer/Makefile': {'word': '/home/andrew/code/pose_estimation/build/apps/pose_renderer/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/apps/pose_renderer/Makefile', 'kind': 'jump_list', 'abbr': 'build/apps/pose_renderer/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/apps/pose_renderer'}, '/home/andrew/code/pose_estimation/build/apps/sph_renderer/Makefile': {'word': '/home/andrew/code/pose_estimation/build/apps/sph_renderer/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/apps/sph_renderer/Makefile', 'kind': 'jump_list', 'abbr': 'build/apps/sph_renderer/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/apps/sph_renderer'}, '/home/andrew/code/pose_estimation/ext/objective_functions/build/prog/Makefile': {'word': '/home/andrew/code/pose_estimation/ext/objective_functions/build/prog/Makefile', 'action__path': '/home/andrew/code/pose_estimation/ext/objective_functions/build/prog/Makefile', 'kind': 'jump_list', 'abbr': 'ext/objective_functions/build/prog/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/ext/objective_functions/build/prog'}, '/home/andrew/code/pose_estimation/modules/gl/src/shader.cc': {'word': '/home/andrew/code/pose_estimation/modules/gl/src/shader.cc', 'action__path': '/home/andrew/code/pose_estimation/modules/gl/src/shader.cc', 'kind': 'jump_list', 'abbr': 'modules/gl/src/shader.cc', 'action__directory': '/home/andrew/code/pose_estimation/modules/gl/src'}, '/home/andrew/code/pose_estimation/apps/gbuffer_viewer/src/main.cc': {'word': '/home/andrew/code/pose_estimation/apps/gbuffer_viewer/src/main.cc', 'action__path': '/home/andrew/code/pose_estimation/apps/gbuffer_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'apps/gbuffer_viewer/src/main.cc', 'action__directory': '/home/andrew/code/pose_estimation/apps/gbuffer_viewer/src'}, '/home/andrew/code/pose_estimation/apps/lrt_tester/src/main.cc': {'word': '/home/andrew/code/pose_estimation/apps/lrt_tester/src/main.cc', 'action__path': '/home/andrew/code/pose_estimation/apps/lrt_tester/src/main.cc', 'kind': 'jump_list', 'abbr': 'apps/lrt_tester/src/main.cc', 'action__directory': '/home/andrew/code/pose_estimation/apps/lrt_tester/src'}, '/home/andrew/code/pose_estimation/build/modules/gl/Makefile': {'word': '/home/andrew/code/pose_estimation/build/modules/gl/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/modules/gl/Makefile', 'kind': 'jump_list', 'abbr': 'build/modules/gl/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/modules/gl'}, '/home/andrew/code/pose_estimation/modules/core/include/core.h': {'word': '/home/andrew/code/pose_estimation/modules/core/include/core.h', 'action__path': '/home/andrew/code/pose_estimation/modules/core/include/core.h', 'kind': 'jump_list', 'abbr': 'modules/core/include/core.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/core/include'}, '/home/andrew/code/pose_estimation/build/apps/gbuffer_viewer/Makefile': {'word': '/home/andrew/code/pose_estimation/build/apps/gbuffer_viewer/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/apps/gbuffer_viewer/Makefile', 'kind': 'jump_list', 'abbr': 'build/apps/gbuffer_viewer/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/apps/gbuffer_viewer'}, '/home/andrew/code/pose_estimation/build/modules/io/include/Makefile': {'word': '/home/andrew/code/pose_estimation/build/modules/io/include/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/modules/io/include/Makefile', 'kind': 'jump_list', 'abbr': 'build/modules/io/include/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/modules/io/include'}, '/home/andrew/code/pose_estimation/modules/io/src/wenping_pose_reader.cc': {'word': '/home/andrew/code/pose_estimation/modules/io/src/wenping_pose_reader.cc', 'action__path': '/home/andrew/code/pose_estimation/modules/io/src/wenping_pose_reader.cc', 'kind': 'jump_list', 'abbr': 'modules/io/src/wenping_pose_reader.cc', 'action__directory': '/home/andrew/code/pose_estimation/modules/io/src'}, '/home/andrew/code/pose_estimation/apps/pose_renderer/src/pose_renderer.cc': {'word': '/home/andrew/code/pose_estimation/apps/pose_renderer/src/pose_renderer.cc', 'action__path': '/home/andrew/code/pose_estimation/apps/pose_renderer/src/pose_renderer.cc', 'kind': 'jump_list', 'abbr': 'apps/pose_renderer/src/pose_renderer.cc', 'action__directory': '/home/andrew/code/pose_estimation/apps/pose_renderer/src'}, '/home/andrew/code/pose_estimation/ext/objective_functions/prog/erolation/main.cc': {'word': '/home/andrew/code/pose_estimation/ext/objective_functions/prog/erolation/main.cc', 'action__path': '/home/andrew/code/pose_estimation/ext/objective_functions/prog/erolation/main.cc', 'kind': 'jump_list', 'abbr': 'ext/objective_functions/prog/erolation/main.cc', 'action__directory': '/home/andrew/code/pose_estimation/ext/objective_functions/prog/erolation'}, '/home/andrew/code/pose_estimation/apps/sph_renderer/src/main.cc': {'word': '/home/andrew/code/pose_estimation/apps/sph_renderer/src/main.cc', 'action__path': '/home/andrew/code/pose_estimation/apps/sph_renderer/src/main.cc', 'kind': 'jump_list', 'abbr': 'apps/sph_renderer/src/main.cc', 'action__directory': '/home/andrew/code/pose_estimation/apps/sph_renderer/src'}, '/home/andrew/code/pose_estimation/build/apps/pose_viewer/include/Makefile': {'word': '/home/andrew/code/pose_estimation/build/apps/pose_viewer/include/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/apps/pose_viewer/include/Makefile', 'kind': 'jump_list', 'abbr': 'build/apps/pose_viewer/include/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/apps/pose_viewer/include'}, '/home/andrew/code/pose_estimation/apps/pose_creator/.ycm_extra_conf.py': {'word': '/home/andrew/code/pose_estimation/apps/pose_creator/.ycm_extra_conf.py', 'action__path': '/home/andrew/code/pose_estimation/apps/pose_creator/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'apps/pose_creator/.ycm_extra_conf.py', 'action__directory': '/home/andrew/code/pose_estimation/apps/pose_creator'}, '/home/andrew/code/pose_estimation/apps/pose_creator/src/main.cc': {'word': '/home/andrew/code/pose_estimation/apps/pose_creator/src/main.cc', 'action__path': '/home/andrew/code/pose_estimation/apps/pose_creator/src/main.cc', 'kind': 'jump_list', 'abbr': 'apps/pose_creator/src/main.cc', 'action__directory': '/home/andrew/code/pose_estimation/apps/pose_creator/src'}, '/home/andrew/code/pose_estimation/build/modules/Makefile': {'word': '/home/andrew/code/pose_estimation/build/modules/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/modules/Makefile', 'kind': 'jump_list', 'abbr': 'build/modules/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/modules'}, '/home/andrew/code/pose_estimation/modules/io/src/sphere_model_reader.cc': {'word': '/home/andrew/code/pose_estimation/modules/io/src/sphere_model_reader.cc', 'action__path': '/home/andrew/code/pose_estimation/modules/io/src/sphere_model_reader.cc', 'kind': 'jump_list', 'abbr': 'modules/io/src/sphere_model_reader.cc', 'action__directory': '/home/andrew/code/pose_estimation/modules/io/src'}, '/home/andrew/code/pose_estimation/build/apps/skel_viewer/Makefile': {'word': '/home/andrew/code/pose_estimation/build/apps/skel_viewer/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/apps/skel_viewer/Makefile', 'kind': 'jump_list', 'abbr': 'build/apps/skel_viewer/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/apps/skel_viewer'}, '/home/andrew/code/pose_estimation/modules/io/include/mesh_reader.h': {'word': '/home/andrew/code/pose_estimation/modules/io/include/mesh_reader.h', 'action__path': '/home/andrew/code/pose_estimation/modules/io/include/mesh_reader.h', 'kind': 'jump_list', 'abbr': 'modules/io/include/mesh_reader.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/io/include'}, '/home/andrew/code/pose_estimation/modules/gl/src/pipeline.cc': {'word': '/home/andrew/code/pose_estimation/modules/gl/src/pipeline.cc', 'action__path': '/home/andrew/code/pose_estimation/modules/gl/src/pipeline.cc', 'kind': 'jump_list', 'abbr': 'modules/gl/src/pipeline.cc', 'action__directory': '/home/andrew/code/pose_estimation/modules/gl/src'}, '/home/andrew/code/pose_estimation/modules/ml/include/latent_regression_forest.h': {'word': '/home/andrew/code/pose_estimation/modules/ml/include/latent_regression_forest.h', 'action__path': '/home/andrew/code/pose_estimation/modules/ml/include/latent_regression_forest.h', 'kind': 'jump_list', 'abbr': 'modules/ml/include/latent_regression_forest.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/ml/include'}, '/home/andrew/code/pose_estimation/modules/io/include/pose_reader.h': {'word': '/home/andrew/code/pose_estimation/modules/io/include/pose_reader.h', 'action__path': '/home/andrew/code/pose_estimation/modules/io/include/pose_reader.h', 'kind': 'jump_list', 'abbr': 'modules/io/include/pose_reader.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/io/include'}, '/home/andrew/code/pose_estimation/modules/gl/src/offscreen_buffer.cc': {'word': '/home/andrew/code/pose_estimation/modules/gl/src/offscreen_buffer.cc', 'action__path': '/home/andrew/code/pose_estimation/modules/gl/src/offscreen_buffer.cc', 'kind': 'jump_list', 'abbr': 'modules/gl/src/offscreen_buffer.cc', 'action__directory': '/home/andrew/code/pose_estimation/modules/gl/src'}, '/home/andrew/code/pose_estimation/build/apps/pose_viewer/Makefile': {'word': '/home/andrew/code/pose_estimation/build/apps/pose_viewer/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/apps/pose_viewer/Makefile', 'kind': 'jump_list', 'abbr': 'build/apps/pose_viewer/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/apps/pose_viewer'}, '/home/andrew/code/pose_estimation/apps/pose_viewer/.ycm_extra_conf.py': {'word': '/home/andrew/code/pose_estimation/apps/pose_viewer/.ycm_extra_conf.py', 'action__path': '/home/andrew/code/pose_estimation/apps/pose_viewer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'apps/pose_viewer/.ycm_extra_conf.py', 'action__directory': '/home/andrew/code/pose_estimation/apps/pose_viewer'}, '/home/andrew/code/pose_estimation/apps/tang_lrf/src/main.cc': {'word': '/home/andrew/code/pose_estimation/apps/tang_lrf/src/main.cc', 'action__path': '/home/andrew/code/pose_estimation/apps/tang_lrf/src/main.cc', 'kind': 'jump_list', 'abbr': 'apps/tang_lrf/src/main.cc', 'action__directory': '/home/andrew/code/pose_estimation/apps/tang_lrf/src'}, '/home/andrew/code/pose_estimation/apps/pose_renderer/.ycm_extra_conf.py': {'word': '/home/andrew/code/pose_estimation/apps/pose_renderer/.ycm_extra_conf.py', 'action__path': '/home/andrew/code/pose_estimation/apps/pose_renderer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'apps/pose_renderer/.ycm_extra_conf.py', 'action__directory': '/home/andrew/code/pose_estimation/apps/pose_renderer'}, '/home/andrew/code/pose_estimation/modules/gl/include/shader.h': {'word': '/home/andrew/code/pose_estimation/modules/gl/include/shader.h', 'action__path': '/home/andrew/code/pose_estimation/modules/gl/include/shader.h', 'kind': 'jump_list', 'abbr': 'modules/gl/include/shader.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/gl/include'}, '/home/andrew/code/pose_estimation/apps/depth_shader_viewer/include/depth_shader_viewer_options.h': {'word': '/home/andrew/code/pose_estimation/apps/depth_shader_viewer/include/depth_shader_viewer_options.h', 'action__path': '/home/andrew/code/pose_estimation/apps/depth_shader_viewer/include/depth_shader_viewer_options.h', 'kind': 'jump_list', 'abbr': 'apps/depth_shader_viewer/include/depth_shader_viewer_options.h', 'action__directory': '/home/andrew/code/pose_estimation/apps/depth_shader_viewer/include'}, '/home/andrew/code/pose_estimation/modules/ml/include/depth_split_function.h': {'word': '/home/andrew/code/pose_estimation/modules/ml/include/depth_split_function.h', 'action__path': '/home/andrew/code/pose_estimation/modules/ml/include/depth_split_function.h', 'kind': 'jump_list', 'abbr': 'modules/ml/include/depth_split_function.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/ml/include'}, '/home/andrew/code/pose_estimation/modules/io/src/humaneva_pose_reader.cc': {'word': '/home/andrew/code/pose_estimation/modules/io/src/humaneva_pose_reader.cc', 'action__path': '/home/andrew/code/pose_estimation/modules/io/src/humaneva_pose_reader.cc', 'kind': 'jump_list', 'abbr': 'modules/io/src/humaneva_pose_reader.cc', 'action__directory': '/home/andrew/code/pose_estimation/modules/io/src'}, '/home/andrew/code/pose_estimation/apps/pose_creator/src/pose_creator_options.cc': {'word': '/home/andrew/code/pose_estimation/apps/pose_creator/src/pose_creator_options.cc', 'action__path': '/home/andrew/code/pose_estimation/apps/pose_creator/src/pose_creator_options.cc', 'kind': 'jump_list', 'abbr': 'apps/pose_creator/src/pose_creator_options.cc', 'action__directory': '/home/andrew/code/pose_estimation/apps/pose_creator/src'}, '/home/andrew/code/pose_estimation/modules/core/include/camera_calibration.h': {'word': '/home/andrew/code/pose_estimation/modules/core/include/camera_calibration.h', 'action__path': '/home/andrew/code/pose_estimation/modules/core/include/camera_calibration.h', 'kind': 'jump_list', 'abbr': 'modules/core/include/camera_calibration.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/core/include'}, '/home/andrew/code/pose_estimation/build/apps/lrt_tester/src/Makefile': {'word': '/home/andrew/code/pose_estimation/build/apps/lrt_tester/src/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/apps/lrt_tester/src/Makefile', 'kind': 'jump_list', 'abbr': 'build/apps/lrt_tester/src/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/apps/lrt_tester/src'}, '/home/andrew/code/pose_estimation/modules/gl/include/gl_sphere.h': {'word': '/home/andrew/code/pose_estimation/modules/gl/include/gl_sphere.h', 'action__path': '/home/andrew/code/pose_estimation/modules/gl/include/gl_sphere.h', 'kind': 'jump_list', 'abbr': 'modules/gl/include/gl_sphere.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/gl/include'}, '/home/andrew/code/pose_estimation/modules/core/src/skeleton.cc': {'word': '/home/andrew/code/pose_estimation/modules/core/src/skeleton.cc', 'action__path': '/home/andrew/code/pose_estimation/modules/core/src/skeleton.cc', 'kind': 'jump_list', 'abbr': 'modules/core/src/skeleton.cc', 'action__directory': '/home/andrew/code/pose_estimation/modules/core/src'}, '/home/andrew/code/pose_estimation/build/apps/edge_shader_viewer/include/Makefile': {'word': '/home/andrew/code/pose_estimation/build/apps/edge_shader_viewer/include/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/apps/edge_shader_viewer/include/Makefile', 'kind': 'jump_list', 'abbr': 'build/apps/edge_shader_viewer/include/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/apps/edge_shader_viewer/include'}, '/home/andrew/code/pose_estimation/modules/gl/include/cone.h': {'word': '/home/andrew/code/pose_estimation/modules/gl/include/cone.h', 'action__path': '/home/andrew/code/pose_estimation/modules/gl/include/cone.h', 'kind': 'jump_list', 'abbr': 'modules/gl/include/cone.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/gl/include'}, '/home/andrew/code/pose_estimation/ext/objective_functions/create': {'word': '/home/andrew/code/pose_estimation/ext/objective_functions/create', 'action__path': '/home/andrew/code/pose_estimation/ext/objective_functions/create', 'kind': 'jump_list', 'abbr': 'ext/objective_functions/create', 'action__directory': '/home/andrew/code/pose_estimation/ext/objective_functions'}, '/home/andrew/code/pose_estimation/modules/gl/include/mesh.h': {'word': '/home/andrew/code/pose_estimation/modules/gl/include/mesh.h', 'action__path': '/home/andrew/code/pose_estimation/modules/gl/include/mesh.h', 'kind': 'jump_list', 'abbr': 'modules/gl/include/mesh.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/gl/include'}, '/home/andrew/code/pose_estimation/modules/ml/include/latent_tree_information_gain.h': {'word': '/home/andrew/code/pose_estimation/modules/ml/include/latent_tree_information_gain.h', 'action__path': '/home/andrew/code/pose_estimation/modules/ml/include/latent_tree_information_gain.h', 'kind': 'jump_list', 'abbr': 'modules/ml/include/latent_tree_information_gain.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/ml/include'}, '/home/andrew/code/pose_estimation/build/apps/pose_creator/src/Makefile': {'word': '/home/andrew/code/pose_estimation/build/apps/pose_creator/src/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/apps/pose_creator/src/Makefile', 'kind': 'jump_list', 'abbr': 'build/apps/pose_creator/src/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/apps/pose_creator/src'}, '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig/depth_overlap_evaluator.cc': {'word': '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig/depth_overlap_evaluator.cc', 'action__path': '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig/depth_overlap_evaluator.cc', 'kind': 'jump_list', 'abbr': 'ext/objective_functions/xing/aig/depth_overlap_evaluator.cc', 'action__directory': '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig'}, '/home/andrew/code/pose_estimation/modules/gl/include/gbuffer.h': {'word': '/home/andrew/code/pose_estimation/modules/gl/include/gbuffer.h', 'action__path': '/home/andrew/code/pose_estimation/modules/gl/include/gbuffer.h', 'kind': 'jump_list', 'abbr': 'modules/gl/include/gbuffer.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/gl/include'}, '/home/andrew/code/pose_estimation/apps/pose_viewer/src/main.cc': {'word': '/home/andrew/code/pose_estimation/apps/pose_viewer/src/main.cc', 'action__path': '/home/andrew/code/pose_estimation/apps/pose_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'apps/pose_viewer/src/main.cc', 'action__directory': '/home/andrew/code/pose_estimation/apps/pose_viewer/src'}, '/home/andrew/code/pose_estimation/modules/ml/include/leaf_factory.h': {'word': '/home/andrew/code/pose_estimation/modules/ml/include/leaf_factory.h', 'action__path': '/home/andrew/code/pose_estimation/modules/ml/include/leaf_factory.h', 'kind': 'jump_list', 'abbr': 'modules/ml/include/leaf_factory.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/ml/include'}, '/home/andrew/code/pose_estimation/modules/core/include/skeleton.h': {'word': '/home/andrew/code/pose_estimation/modules/core/include/skeleton.h', 'action__path': '/home/andrew/code/pose_estimation/modules/core/include/skeleton.h', 'kind': 'jump_list', 'abbr': 'modules/core/include/skeleton.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/core/include'}, '/home/andrew/code/pose_estimation/modules/ml/include/scalar_split_function_factory.h': {'word': '/home/andrew/code/pose_estimation/modules/ml/include/scalar_split_function_factory.h', 'action__path': '/home/andrew/code/pose_estimation/modules/ml/include/scalar_split_function_factory.h', 'kind': 'jump_list', 'abbr': 'modules/ml/include/scalar_split_function_factory.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/ml/include'}, '/home/andrew/code/pose_estimation/apps/pose_renderer/include/pose_renderer_options.h': {'word': '/home/andrew/code/pose_estimation/apps/pose_renderer/include/pose_renderer_options.h', 'action__path': '/home/andrew/code/pose_estimation/apps/pose_renderer/include/pose_renderer_options.h', 'kind': 'jump_list', 'abbr': 'apps/pose_renderer/include/pose_renderer_options.h', 'action__directory': '/home/andrew/code/pose_estimation/apps/pose_renderer/include'}, '/home/andrew/code/pose_estimation/modules/ml/include/depth_split_function_factory.h': {'word': '/home/andrew/code/pose_estimation/modules/ml/include/depth_split_function_factory.h', 'action__path': '/home/andrew/code/pose_estimation/modules/ml/include/depth_split_function_factory.h', 'kind': 'jump_list', 'abbr': 'modules/ml/include/depth_split_function_factory.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/ml/include'}, '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig/depth_evaluator.cc': {'word': '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig/depth_evaluator.cc', 'action__path': '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig/depth_evaluator.cc', 'kind': 'jump_list', 'abbr': 'ext/objective_functions/xing/aig/depth_evaluator.cc', 'action__directory': '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig'}, '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig/depth_evaluator.hpp': {'word': '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig/depth_evaluator.hpp', 'action__path': '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig/depth_evaluator.hpp', 'kind': 'jump_list', 'abbr': 'ext/objective_functions/xing/aig/depth_evaluator.hpp', 'action__directory': '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig'}, '/home/andrew/code/pose_estimation/modules/ml/include/training_data.h': {'word': '/home/andrew/code/pose_estimation/modules/ml/include/training_data.h', 'action__path': '/home/andrew/code/pose_estimation/modules/ml/include/training_data.h', 'kind': 'jump_list', 'abbr': 'modules/ml/include/training_data.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/ml/include'}, '/home/andrew/code/pose_estimation/modules/gl/include/mesh_renderer.h': {'word': '/home/andrew/code/pose_estimation/modules/gl/include/mesh_renderer.h', 'action__path': '/home/andrew/code/pose_estimation/modules/gl/include/mesh_renderer.h', 'kind': 'jump_list', 'abbr': 'modules/gl/include/mesh_renderer.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/gl/include'}, '/home/andrew/code/pose_estimation/build/modules/optim/src/Makefile': {'word': '/home/andrew/code/pose_estimation/build/modules/optim/src/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/modules/optim/src/Makefile', 'kind': 'jump_list', 'abbr': 'build/modules/optim/src/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/modules/optim/src'}, '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig/camera_image.cc': {'word': '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig/camera_image.cc', 'action__path': '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig/camera_image.cc', 'kind': 'jump_list', 'abbr': 'ext/objective_functions/xing/aig/camera_image.cc', 'action__directory': '/home/andrew/code/pose_estimation/ext/objective_functions/xing/aig'}, '/home/andrew/code/pose_estimation/modules/io/src/json_pose_reader.cc': {'word': '/home/andrew/code/pose_estimation/modules/io/src/json_pose_reader.cc', 'action__path': '/home/andrew/code/pose_estimation/modules/io/src/json_pose_reader.cc', 'kind': 'jump_list', 'abbr': 'modules/io/src/json_pose_reader.cc', 'action__directory': '/home/andrew/code/pose_estimation/modules/io/src'}, '/home/andrew/code/pose_estimation/scripts/create_app': {'word': '/home/andrew/code/pose_estimation/scripts/create_app', 'action__path': '/home/andrew/code/pose_estimation/scripts/create_app', 'kind': 'jump_list', 'abbr': 'scripts/create_app', 'action__directory': '/home/andrew/code/pose_estimation/scripts'}, '/home/andrew/code/pose_estimation/apps/abalone_forest/src/main.cc': {'word': '/home/andrew/code/pose_estimation/apps/abalone_forest/src/main.cc', 'action__path': '/home/andrew/code/pose_estimation/apps/abalone_forest/src/main.cc', 'kind': 'jump_list', 'abbr': 'apps/abalone_forest/src/main.cc', 'action__directory': '/home/andrew/code/pose_estimation/apps/abalone_forest/src'}, '/home/andrew/code/pose_estimation/modules/core/src/old_joint.cc': {'word': '/home/andrew/code/pose_estimation/modules/core/src/old_joint.cc', 'action__path': '/home/andrew/code/pose_estimation/modules/core/src/old_joint.cc', 'kind': 'jump_list', 'abbr': 'modules/core/src/old_joint.cc', 'action__directory': '/home/andrew/code/pose_estimation/modules/core/src'}, '/home/andrew/code/pose_estimation/apps/pose_renderer/src/main.cc': {'word': '/home/andrew/code/pose_estimation/apps/pose_renderer/src/main.cc', 'action__path': '/home/andrew/code/pose_estimation/apps/pose_renderer/src/main.cc', 'kind': 'jump_list', 'abbr': 'apps/pose_renderer/src/main.cc', 'action__directory': '/home/andrew/code/pose_estimation/apps/pose_renderer/src'}, '/home/andrew/code/pose_estimation/build/apps/Makefile': {'word': '/home/andrew/code/pose_estimation/build/apps/Makefile', 'action__path': '/home/andrew/code/pose_estimation/build/apps/Makefile', 'kind': 'jump_list', 'abbr': 'build/apps/Makefile', 'action__directory': '/home/andrew/code/pose_estimation/build/apps'}, '/home/andrew/code/pose_estimation/modules/gl/src/sphere_model_maker.cc': {'word': '/home/andrew/code/pose_estimation/modules/gl/src/sphere_model_maker.cc', 'action__path': '/home/andrew/code/pose_estimation/modules/gl/src/sphere_model_maker.cc', 'kind': 'jump_list', 'abbr': 'modules/gl/src/sphere_model_maker.cc', 'action__directory': '/home/andrew/code/pose_estimation/modules/gl/src'}, '/home/andrew/code/pose_estimation/modules/gl/include/shape_renderer.h': {'word': '/home/andrew/code/pose_estimation/modules/gl/include/shape_renderer.h', 'action__path': '/home/andrew/code/pose_estimation/modules/gl/include/shape_renderer.h', 'kind': 'jump_list', 'abbr': 'modules/gl/include/shape_renderer.h', 'action__directory': '/home/andrew/code/pose_estimation/modules/gl/include'}}, 'tags': [{'word': 'ADAM7_DX', 'action__pattern': '\M^static const unsigned ADAM7_DX[7] = { 8, 8, 4, 4, 2, 2, 1 }; /*x delta values*/$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'ext/lodepng/lodepng.cpp', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'ADAM7_DX                   @ext/lod..odepng.cpp  static const unsigned ADAM7_DX[7] = { 8, 8, 4, 4, 2, 2, 1 }; \/*x delta values*\/', 'is_multiline': 0, 'unite__abbr': 'ADAM7_DX                   @ext/lod..odepng.cpp  static const unsigned ADAM7_DX[7] = { 8, 8, 4, 4, 2, 2, 1 }; \/*x delta values*\/', 'action__tagname': 'ADAM7_DX'}, {'word': 'ADAM7_DY', 'action__pattern': '\M^static const unsigned ADAM7_DY[7] = { 8, 8, 8, 4, 4, 2, 2 }; /*y delta values*/$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'ext/lodepng/lodepng.cpp', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'ADAM7_DY                   @ext/lod..odepng.cpp  static const unsigned ADAM7_DY[7] = { 8, 8, 8, 4, 4, 2, 2 }; \/*y delta values*\/', 'is_multiline': 0, 'unite__abbr': 'ADAM7_DY                   @ext/lod..odepng.cpp  static const unsigned ADAM7_DY[7] = { 8, 8, 8, 4, 4, 2, 2 }; \/*y delta values*\/', 'action__tagname': 'ADAM7_DY'}, {'word': 'ADAM7_IX', 'action__pattern': '\M^static const unsigned ADAM7_IX[7] = { 0, 4, 0, 2, 0, 1, 0 }; /*x start values*/$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'ext/lodepng/lodepng.cpp', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'ADAM7_IX                   @ext/lod..odepng.cpp  static const unsigned ADAM7_IX[7] = { 0, 4, 0, 2, 0, 1, 0 }; \/*x start values*\/', 'is_multiline': 0, 'unite__abbr': 'ADAM7_IX                   @ext/lod..odepng.cpp  static const unsigned ADAM7_IX[7] = { 0, 4, 0, 2, 0, 1, 0 }; \/*x start values*\/', 'action__tagname': 'ADAM7_IX'}, {'word': 'ADAM7_IY', 'action__pattern': '\M^static const unsigned ADAM7_IY[7] = { 0, 0, 4, 0, 2, 0, 1 }; /*y start values*/$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'ext/lodepng/lodepng.cpp', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'ADAM7_IY                   @ext/lod..odepng.cpp  static const unsigned ADAM7_IY[7] = { 0, 0, 4, 0, 2, 0, 1 }; \/*y start values*\/', 'is_multiline': 0, 'unite__abbr': 'ADAM7_IY                   @ext/lod..odepng.cpp  static const unsigned ADAM7_IY[7] = { 0, 0, 4, 0, 2, 0, 1 }; \/*y start values*\/', 'action__tagname': 'ADAM7_IY'}, {'word': 'ARCHITECTURE_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'unite__is_marked': 0, 'action__line': 298, 'kind': 'jump_list', 'abbr': 'ARCHITECTURE_ID            @build/C..mpilerId.c  line:298', 'is_multiline': 0, 'unite__abbr': 'ARCHITECTURE_ID            @build/C..mpilerId.c  line:298', 'action__tagname': 'ARCHITECTURE_ID'}, {'word': 'ARCHITECTURE_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'unite__is_marked': 0, 'action__line': 301, 'kind': 'jump_list', 'abbr': 'ARCHITECTURE_ID            @build/C..mpilerId.c  line:301', 'is_multiline': 0, 'unite__abbr': 'ARCHITECTURE_ID            @build/C..mpilerId.c  line:301', 'action__tagname': 'ARCHITECTURE_ID'}, {'word': 'ARCHITECTURE_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'unite__is_marked': 0, 'action__line': 304, 'kind': 'jump_list', 'abbr': 'ARCHITECTURE_ID            @build/C..mpilerId.c  line:304', 'is_multiline': 0, 'unite__abbr': 'ARCHITECTURE_ID            @build/C..mpilerId.c  line:304', 'action__tagname': 'ARCHITECTURE_ID'}, {'word': 'ARCHITECTURE_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'unite__is_marked': 0, 'action__line': 307, 'kind': 'jump_list', 'abbr': 'ARCHITECTURE_ID            @build/C..mpilerId.c  line:307', 'is_multiline': 0, 'unite__abbr': 'ARCHITECTURE_ID            @build/C..mpilerId.c  line:307', 'action__tagname': 'ARCHITECTURE_ID'}, {'word': 'ARCHITECTURE_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'unite__is_marked': 0, 'action__line': 310, 'kind': 'jump_list', 'abbr': 'ARCHITECTURE_ID            @build/C..mpilerId.c  line:310', 'is_multiline': 0, 'unite__abbr': 'ARCHITECTURE_ID            @build/C..mpilerId.c  line:310', 'action__tagname': 'ARCHITECTURE_ID'}, {'word': 'ARCHITECTURE_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'unite__is_marked': 0, 'action__line': 313, 'kind': 'jump_list', 'abbr': 'ARCHITECTURE_ID            @build/C..mpilerId.c  line:313', 'is_multiline': 0, 'unite__abbr': 'ARCHITECTURE_ID            @build/C..mpilerId.c  line:313', 'action__tagname': 'ARCHITECTURE_ID'}, {'word': 'ARCHITECTURE_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'unite__is_marked': 0, 'action__line': 316, 'kind': 'jump_list', 'abbr': 'ARCHITECTURE_ID            @build/C..mpilerId.c  line:316', 'is_multiline': 0, 'unite__abbr': 'ARCHITECTURE_ID            @build/C..mpilerId.c  line:316', 'action__tagname': 'ARCHITECTURE_ID'}, {'word': 'ARCHITECTURE_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'unite__is_marked': 0, 'action__line': 320, 'kind': 'jump_list', 'abbr': 'ARCHITECTURE_ID            @build/C..mpilerId.c  line:320', 'is_multiline': 0, 'unite__abbr': 'ARCHITECTURE_ID            @build/C..mpilerId.c  line:320', 'action__tagname': 'ARCHITECTURE_ID'}, {'word': 'ARCHITECTURE_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'unite__is_marked': 0, 'action__line': 291, 'kind': 'jump_list', 'abbr': 'ARCHITECTURE_ID            @build/C..ilerId.cpp  line:291', 'is_multiline': 0, 'unite__abbr': 'ARCHITECTURE_ID            @build/C..ilerId.cpp  line:291', 'action__tagname': 'ARCHITECTURE_ID'}, {'word': 'ARCHITECTURE_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'unite__is_marked': 0, 'action__line': 294, 'kind': 'jump_list', 'abbr': 'ARCHITECTURE_ID            @build/C..ilerId.cpp  line:294', 'is_multiline': 0, 'unite__abbr': 'ARCHITECTURE_ID            @build/C..ilerId.cpp  line:294', 'action__tagname': 'ARCHITECTURE_ID'}, {'word': 'ARCHITECTURE_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'unite__is_marked': 0, 'action__line': 297, 'kind': 'jump_list', 'abbr': 'ARCHITECTURE_ID            @build/C..ilerId.cpp  line:297', 'is_multiline': 0, 'unite__abbr': 'ARCHITECTURE_ID            @build/C..ilerId.cpp  line:297', 'action__tagname': 'ARCHITECTURE_ID'}, {'word': 'ARCHITECTURE_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'unite__is_marked': 0, 'action__line': 300, 'kind': 'jump_list', 'abbr': 'ARCHITECTURE_ID            @build/C..ilerId.cpp  line:300', 'is_multiline': 0, 'unite__abbr': 'ARCHITECTURE_ID            @build/C..ilerId.cpp  line:300', 'action__tagname': 'ARCHITECTURE_ID'}, {'word': 'ARCHITECTURE_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'unite__is_marked': 0, 'action__line': 303, 'kind': 'jump_list', 'abbr': 'ARCHITECTURE_ID            @build/C..ilerId.cpp  line:303', 'is_multiline': 0, 'unite__abbr': 'ARCHITECTURE_ID            @build/C..ilerId.cpp  line:303', 'action__tagname': 'ARCHITECTURE_ID'}, {'word': 'ARCHITECTURE_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'unite__is_marked': 0, 'action__line': 306, 'kind': 'jump_list', 'abbr': 'ARCHITECTURE_ID            @build/C..ilerId.cpp  line:306', 'is_multiline': 0, 'unite__abbr': 'ARCHITECTURE_ID            @build/C..ilerId.cpp  line:306', 'action__tagname': 'ARCHITECTURE_ID'}, {'word': 'ARCHITECTURE_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'unite__is_marked': 0, 'action__line': 309, 'kind': 'jump_list', 'abbr': 'ARCHITECTURE_ID            @build/C..ilerId.cpp  line:309', 'is_multiline': 0, 'unite__abbr': 'ARCHITECTURE_ID            @build/C..ilerId.cpp  line:309', 'action__tagname': 'ARCHITECTURE_ID'}, {'word': 'ARCHITECTURE_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'unite__is_marked': 0, 'action__line': 313, 'kind': 'jump_list', 'abbr': 'ARCHITECTURE_ID            @build/C..ilerId.cpp  line:313', 'is_multiline': 0, 'unite__abbr': 'ARCHITECTURE_ID            @build/C..ilerId.cpp  line:313', 'action__tagname': 'ARCHITECTURE_ID'}, {'word': 'ARCHITECTURE_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 298, 'kind': 'jump_list', 'abbr': 'ARCHITECTURE_ID            @ext/obj..mpilerId.c  line:298', 'action__tagname': 'ARCHITECTURE_ID'}, {'word': 'ARCHITECTURE_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 301, 'kind': 'jump_list', 'abbr': 'ARCHITECTURE_ID            @ext/obj..mpilerId.c  line:301', 'action__tagname': 'ARCHITECTURE_ID'}, {'word': 'ARCHITECTURE_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 304, 'kind': 'jump_list', 'abbr': 'ARCHITECTURE_ID            @ext/obj..mpilerId.c  line:304', 'action__tagname': 'ARCHITECTURE_ID'}, {'word': 'ARCHITECTURE_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 307, 'kind': 'jump_list', 'abbr': 'ARCHITECTURE_ID            @ext/obj..mpilerId.c  line:307', 'action__tagname': 'ARCHITECTURE_ID'}, {'word': 'ARCHITECTURE_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 310, 'kind': 'jump_list', 'abbr': 'ARCHITECTURE_ID            @ext/obj..mpilerId.c  line:310', 'action__tagname': 'ARCHITECTURE_ID'}, {'word': 'ARCHITECTURE_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 313, 'kind': 'jump_list', 'abbr': 'ARCHITECTURE_ID            @ext/obj..mpilerId.c  line:313', 'action__tagname': 'ARCHITECTURE_ID'}, {'word': 'ARCHITECTURE_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 316, 'kind': 'jump_list', 'abbr': 'ARCHITECTURE_ID            @ext/obj..mpilerId.c  line:316', 'action__tagname': 'ARCHITECTURE_ID'}, {'word': 'ARCHITECTURE_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 320, 'kind': 'jump_list', 'abbr': 'ARCHITECTURE_ID            @ext/obj..mpilerId.c  line:320', 'action__tagname': 'ARCHITECTURE_ID'}, {'word': 'ARCHITECTURE_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 291, 'kind': 'jump_list', 'abbr': 'ARCHITECTURE_ID            @ext/obj..ilerId.cpp  line:291', 'action__tagname': 'ARCHITECTURE_ID'}, {'word': 'ARCHITECTURE_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 294, 'kind': 'jump_list', 'abbr': 'ARCHITECTURE_ID            @ext/obj..ilerId.cpp  line:294', 'action__tagname': 'ARCHITECTURE_ID'}, {'word': 'ARCHITECTURE_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 297, 'kind': 'jump_list', 'abbr': 'ARCHITECTURE_ID            @ext/obj..ilerId.cpp  line:297', 'action__tagname': 'ARCHITECTURE_ID'}, {'word': 'ARCHITECTURE_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 300, 'kind': 'jump_list', 'abbr': 'ARCHITECTURE_ID            @ext/obj..ilerId.cpp  line:300', 'action__tagname': 'ARCHITECTURE_ID'}, {'word': 'ARCHITECTURE_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 303, 'kind': 'jump_list', 'abbr': 'ARCHITECTURE_ID            @ext/obj..ilerId.cpp  line:303', 'action__tagname': 'ARCHITECTURE_ID'}, {'word': 'ARCHITECTURE_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 306, 'kind': 'jump_list', 'abbr': 'ARCHITECTURE_ID            @ext/obj..ilerId.cpp  line:306', 'action__tagname': 'ARCHITECTURE_ID'}, {'word': 'ARCHITECTURE_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 309, 'kind': 'jump_list', 'abbr': 'ARCHITECTURE_ID            @ext/obj..ilerId.cpp  line:309', 'action__tagname': 'ARCHITECTURE_ID'}, {'word': 'ARCHITECTURE_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 313, 'kind': 'jump_list', 'abbr': 'ARCHITECTURE_ID            @ext/obj..ilerId.cpp  line:313', 'action__tagname': 'ARCHITECTURE_ID'}, {'word': 'ASSERT', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'ext/objective_functions/prog/erolation/main.cc', 'unite__is_marked': 0, 'action__line': 53, 'kind': 'jump_list', 'abbr': 'ASSERT                     @ext/obj..on/main.cc  line:53', 'is_multiline': 0, 'unite__abbr': 'ASSERT                     @ext/obj..on/main.cc  line:53', 'action__tagname': 'ASSERT'}, {'word': 'Adam7_deinterlace', 'action__pattern': '\M^static void Adam7_deinterlace(unsigned char* out, const unsigned char* in, unsigned w, unsigned h, unsigned bpp)$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'ext/lodepng/lodepng.cpp', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'Adam7_deinterlace          @ext/lod..odepng.cpp  static void Adam7_deinterlace(unsigned char* out, const unsigned char* in, unsigned w, unsigned h, unsigned bpp)', 'is_multiline': 0, 'unite__abbr': 'Adam7_deinterlace          @ext/lod..odepng.cpp  static void Adam7_deinterlace(unsigned char* out, const unsigned char* in, unsigned w, unsigned h, unsigned ', 'action__tagname': 'Adam7_deinterlace'}, {'word': 'Adam7_getpassvalues', 'action__pattern': '\M^static void Adam7_getpassvalues(unsigned passw[7], unsigned passh[7], size_t filter_passstart[8],$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'ext/lodepng/lodepng.cpp', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'Adam7_getpassvalues        @ext/lod..odepng.cpp  static void Adam7_getpassvalues(unsigned passw[7], unsigned passh[7], size_t filter_passstart[8],', 'is_multiline': 0, 'unite__abbr': 'Adam7_getpassvalues        @ext/lod..odepng.cpp  static void Adam7_getpassvalues(unsigned passw[7], unsigned passh[7], size_t filter_passstart[8],', 'action__tagname': 'Adam7_getpassvalues'}, {'word': 'Adam7_interlace', 'action__pattern': '\M^static void Adam7_interlace(unsigned char* out, const unsigned char* in, unsigned w, unsigned h, unsigned bpp)$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'ext/lodepng/lodepng.cpp', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'Adam7_interlace            @ext/lod..odepng.cpp  static void Adam7_interlace(unsigned char* out, const unsigned char* in, unsigned w, unsigned h, unsigned bpp)', 'is_multiline': 0, 'unite__abbr': 'Adam7_interlace            @ext/lod..odepng.cpp  static void Adam7_interlace(unsigned char* out, const unsigned char* in, unsigned w, unsigned h, unsigned bp', 'action__tagname': 'Adam7_interlace'}, {'word': 'BMVCOptions', 'action__pattern': '\M^      BMVCOptions() :$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'apps/bmvc_project/include/bmvc_options.h', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'BMVCOptions                @apps/bm.._options.h        BMVCOptions() :', 'is_multiline': 0, 'unite__abbr': 'BMVCOptions                @apps/bm.._options.h        BMVCOptions() :', 'action__tagname': 'BMVCOptions'}, {'word': 'BMVCOptions', 'action__pattern': '\M^  class BMVCOptions$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'apps/bmvc_project/include/bmvc_options.h', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'BMVCOptions                @apps/bm.._options.h    class BMVCOptions', 'is_multiline': 0, 'unite__abbr': 'BMVCOptions                @apps/bm.._options.h    class BMVCOptions', 'action__tagname': 'BMVCOptions'}, {'word': 'BMVCProject', 'action__pattern': '\M^    BMVCProject(GLFWwindow* w, const BMVCOptions& o)$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'apps/bmvc_project/src/main.cc', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'BMVCProject                @apps/bm..rc/main.cc      BMVCProject(GLFWwindow* w, const BMVCOptions& o)', 'is_multiline': 0, 'unite__abbr': 'BMVCProject                @apps/bm..rc/main.cc      BMVCProject(GLFWwindow* w, const BMVCOptions& o)', 'action__tagname': 'BMVCProject'}, {'word': 'BMVCProject', 'action__pattern': '\M^class BMVCProject {$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'apps/bmvc_project/src/main.cc', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'BMVCProject                @apps/bm..rc/main.cc  class BMVCProject {', 'is_multiline': 0, 'unite__abbr': 'BMVCProject                @apps/bm..rc/main.cc  class BMVCProject {', 'action__tagname': 'BMVCProject'}, {'word': 'BackgroundDrawer', 'action__pattern': '\M^class BackgroundDrawer {$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'modules/gl/include/background_drawer.h', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'BackgroundDrawer           @modules..d_drawer.h  class BackgroundDrawer {', 'is_multiline': 0, 'unite__abbr': 'BackgroundDrawer           @modules..d_drawer.h  class BackgroundDrawer {', 'action__tagname': 'BackgroundDrawer'}, {'word': 'BackgroundDrawer', 'action__pattern': '\M^BackgroundDrawer::BackgroundDrawer() : vao(0),$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'modules/gl/src/background_drawer.cc', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'BackgroundDrawer           @modules.._drawer.cc  BackgroundDrawer::BackgroundDrawer() : vao(0),', 'is_multiline': 0, 'unite__abbr': 'BackgroundDrawer           @modules.._drawer.cc  BackgroundDrawer::BackgroundDrawer() : vao(0),', 'action__tagname': 'BackgroundDrawer'}, {'word': 'BackgroundShader', 'action__pattern': '\M^class BackgroundShader {$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'modules/gl/include/background_shader.h', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'BackgroundShader           @modules..d_shader.h  class BackgroundShader {', 'is_multiline': 0, 'unite__abbr': 'BackgroundShader           @modules..d_shader.h  class BackgroundShader {', 'action__tagname': 'BackgroundShader'}, {'word': 'BackgroundShader', 'action__pattern': '\M^BackgroundShader::BackgroundShader() {$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'modules/gl/src/background_shader.cc', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'BackgroundShader           @modules.._shader.cc  BackgroundShader::BackgroundShader() {', 'is_multiline': 0, 'unite__abbr': 'BackgroundShader           @modules.._shader.cc  BackgroundShader::BackgroundShader() {', 'action__tagname': 'BackgroundShader'}, {'word': 'Bone', 'action__pattern': '\M^class Bone {$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'modules/core/include/bone.h', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'Bone                       @modules..ude/bone.h  class Bone {', 'is_multiline': 0, 'unite__abbr': 'Bone                       @modules..ude/bone.h  class Bone {', 'action__tagname': 'Bone'}, {'word': 'Bone', 'action__pattern': '\M^Bone::Bone(const std::string& name) : transform(1.0),$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'modules/core/src/bone.cc', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'Bone                       @modules..rc/bone.cc  Bone::Bone(const std::string& name) : transform(1.0),', 'is_multiline': 0, 'unite__abbr': 'Bone                       @modules..rc/bone.cc  Bone::Bone(const std::string& name) : transform(1.0),', 'action__tagname': 'Bone'}, {'word': 'Bone', 'action__pattern': '\M^Bone::Bone(const std::string& name,$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'modules/core/src/bone.cc', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'Bone                       @modules..rc/bone.cc  Bone::Bone(const std::string& name,', 'is_multiline': 0, 'unite__abbr': 'Bone                       @modules..rc/bone.cc  Bone::Bone(const std::string& name,', 'action__tagname': 'Bone'}, {'word': 'BoneInfo', 'action__pattern': '\M^      BoneInfo() : boneOffset(0), finalTransformation(0) {$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'modules/gl/include/mesh.h', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'BoneInfo                   @modules..ude/mesh.h        BoneInfo() : boneOffset(0), finalTransformation(0) {', 'is_multiline': 0, 'unite__abbr': 'BoneInfo                   @modules..ude/mesh.h        BoneInfo() : boneOffset(0), finalTransformation(0) {', 'action__tagname': 'BoneInfo'}, {'word': 'BoneInfo', 'action__pattern': '\M^    struct BoneInfo {$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'modules/gl/include/mesh.h', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'BoneInfo                   @modules..ude/mesh.h      struct BoneInfo {', 'is_multiline': 0, 'unite__abbr': 'BoneInfo                   @modules..ude/mesh.h      struct BoneInfo {', 'action__tagname': 'BoneInfo'}, {'word': 'BufferType', 'action__pattern': '\M^    enum class BufferType : unsigned int {$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'modules/gl/include/gbuffer.h', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'BufferType                 @modules../gbuffer.h      enum class BufferType : unsigned int {', 'is_multiline': 0, 'unite__abbr': 'BufferType                 @modules../gbuffer.h      enum class BufferType : unsigned int {', 'action__tagname': 'BufferType'}, {'word': 'CERROR_BREAK', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'ext/lodepng/lodepng.cpp', 'unite__is_marked': 0, 'action__line': 94, 'kind': 'jump_list', 'abbr': 'CERROR_BREAK               @ext/lod..odepng.cpp  line:94', 'is_multiline': 0, 'unite__abbr': 'CERROR_BREAK               @ext/lod..odepng.cpp  line:94', 'action__tagname': 'CERROR_BREAK'}, {'word': 'CERROR_RETURN_ERROR', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'ext/lodepng/lodepng.cpp', 'unite__is_marked': 0, 'action__line': 104, 'kind': 'jump_list', 'abbr': 'CERROR_RETURN_ERROR        @ext/lod..odepng.cpp  line:104', 'is_multiline': 0, 'unite__abbr': 'CERROR_RETURN_ERROR        @ext/lod..odepng.cpp  line:104', 'action__tagname': 'CERROR_RETURN_ERROR'}, {'word': 'CERROR_TRY_RETURN', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'ext/lodepng/lodepng.cpp', 'unite__is_marked': 0, 'action__line': 111, 'kind': 'jump_list', 'abbr': 'CERROR_TRY_RETURN          @ext/lod..odepng.cpp  line:111', 'is_multiline': 0, 'unite__abbr': 'CERROR_TRY_RETURN          @ext/lod..odepng.cpp  line:111', 'action__tagname': 'CERROR_TRY_RETURN'}, {'word': 'CLCL_ORDER', 'action__pattern': '\M^static const unsigned CLCL_ORDER[NUM_CODE_LENGTH_CODES]$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'ext/lodepng/lodepng.cpp', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CLCL_ORDER                 @ext/lod..odepng.cpp  static const unsigned CLCL_ORDER[NUM_CODE_LENGTH_CODES]', 'is_multiline': 0, 'unite__abbr': 'CLCL_ORDER                 @ext/lod..odepng.cpp  static const unsigned CLCL_ORDER[NUM_CODE_LENGTH_CODES]', 'action__tagname': 'CLCL_ORDER'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/Makefile       CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'is_multiline': 0, 'unite__abbr': 'CMAKE_BINARY_DIR           @build/Makefile       CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/apps/34dof_to_json/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/a..n/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'is_multiline': 0, 'unite__abbr': 'CMAKE_BINARY_DIR           @build/a..n/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/apps/34dof_to_json/src/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/a..c/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'is_multiline': 0, 'unite__abbr': 'CMAKE_BINARY_DIR           @build/a..c/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/apps/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/apps/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'is_multiline': 0, 'unite__abbr': 'CMAKE_BINARY_DIR           @build/apps/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/apps/abalone_forest/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/a..t/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'is_multiline': 0, 'unite__abbr': 'CMAKE_BINARY_DIR           @build/a..t/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'action__path': 'build/apps/abalone_forest/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/a..c/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'action__path': 'build/apps/bmvc_project/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/a..t/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/apps/bmvc_project/include/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/a..e/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'is_multiline': 0, 'unite__abbr': 'CMAKE_BINARY_DIR           @build/a..e/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'action__path': 'build/apps/bmvc_project/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/a..c/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/apps/compare_poses/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/a..s/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'is_multiline': 0, 'unite__abbr': 'CMAKE_BINARY_DIR           @build/a..s/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'action__path': 'build/apps/compare_poses/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/a..c/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/apps/depth_shader_viewer/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/a..r/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'is_multiline': 0, 'unite__abbr': 'CMAKE_BINARY_DIR           @build/a..r/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'action__path': 'build/apps/depth_shader_viewer/include/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/a..e/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'action__path': 'build/apps/depth_shader_viewer/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/a..c/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'action__path': 'build/apps/edge_shader_viewer/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/a..r/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'action__path': 'build/apps/edge_shader_viewer/include/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/a..e/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'action__path': 'build/apps/edge_shader_viewer/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/a..c/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'action__path': 'build/apps/gbuffer_viewer/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/a..r/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'action__path': 'build/apps/gbuffer_viewer/include/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/a..e/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'action__path': 'build/apps/gbuffer_viewer/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/a..c/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'action__path': 'build/apps/lrt_tester/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/a..r/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'action__path': 'build/apps/lrt_tester/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/a..c/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'action__path': 'build/apps/multicam_mesh_viewer/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/a..r/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'action__path': 'build/apps/multicam_mesh_viewer/include/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/a..e/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'action__path': 'build/apps/multicam_mesh_viewer/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/a..c/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/apps/particle_swarm_demo/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/a..o/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'is_multiline': 0, 'unite__abbr': 'CMAKE_BINARY_DIR           @build/a..o/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'action__path': 'build/apps/particle_swarm_demo/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/a..c/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'action__path': 'build/apps/pose_creator/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/a..r/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'action__path': 'build/apps/pose_creator/include/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/a..e/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'action__path': 'build/apps/pose_creator/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/a..c/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'action__path': 'build/apps/pose_interpolator/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/a..r/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'action__path': 'build/apps/pose_interpolator/include/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/a..e/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'action__path': 'build/apps/pose_interpolator/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/a..c/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'action__path': 'build/apps/pose_renderer/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/a..r/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'action__path': 'build/apps/pose_renderer/include/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/a..e/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'action__path': 'build/apps/pose_renderer/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/a..c/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'action__path': 'build/apps/pose_viewer/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/a..r/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'action__path': 'build/apps/pose_viewer/include/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/a..e/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'action__path': 'build/apps/pose_viewer/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/a..c/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'action__path': 'build/apps/skel_viewer/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/a..r/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'action__path': 'build/apps/skel_viewer/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/a..c/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'action__path': 'build/apps/sph_renderer/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/a..r/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'action__path': 'build/apps/sph_renderer/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/a..c/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'action__path': 'build/apps/sphere_model_maker/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/a..r/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'action__path': 'build/apps/sphere_model_maker/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/a..c/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/apps/sphere_model_optim/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/a..m/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'is_multiline': 0, 'unite__abbr': 'CMAKE_BINARY_DIR           @build/a..m/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'action__path': 'build/apps/sphere_model_optim/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/a..c/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'action__path': 'build/apps/sphere_model_renderer/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/a..r/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'action__path': 'build/apps/sphere_model_renderer/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/a..c/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/apps/tang_lrf/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/a..f/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'is_multiline': 0, 'unite__abbr': 'CMAKE_BINARY_DIR           @build/a..f/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'action__path': 'build/apps/tang_lrf/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/a..c/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/modules/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/m..s/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'is_multiline': 0, 'unite__abbr': 'CMAKE_BINARY_DIR           @build/m..s/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/modules/core/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/m..e/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'is_multiline': 0, 'unite__abbr': 'CMAKE_BINARY_DIR           @build/m..e/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'action__path': 'build/modules/core/include/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/m..e/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/modules/core/src/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/m..c/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'is_multiline': 0, 'unite__abbr': 'CMAKE_BINARY_DIR           @build/m..c/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/modules/geom/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/m..m/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'is_multiline': 0, 'unite__abbr': 'CMAKE_BINARY_DIR           @build/m..m/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'action__path': 'build/modules/geom/include/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/m..e/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'action__path': 'build/modules/geom/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/m..c/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/modules/gl/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/m..l/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'is_multiline': 0, 'unite__abbr': 'CMAKE_BINARY_DIR           @build/m..l/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'action__path': 'build/modules/gl/include/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/m..e/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'action__path': 'build/modules/gl/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/m..c/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/modules/img/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/m..g/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'is_multiline': 0, 'unite__abbr': 'CMAKE_BINARY_DIR           @build/m..g/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'action__path': 'build/modules/img/include/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/m..e/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'action__path': 'build/modules/img/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/m..c/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/modules/io/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/m..o/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'is_multiline': 0, 'unite__abbr': 'CMAKE_BINARY_DIR           @build/m..o/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'action__path': 'build/modules/io/include/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/m..e/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'action__path': 'build/modules/io/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/m..c/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'action__path': 'build/modules/ml/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/m..l/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'action__path': 'build/modules/ml/include/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/m..e/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'action__path': 'build/modules/ml/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/m..c/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'action__path': 'build/modules/optim/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/m..m/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'action__path': 'build/modules/optim/include/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/m..e/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/build$', 'action__path': 'build/modules/optim/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @build/m..c/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/ext/objective_functions/build$', 'action__path': 'ext/objective_functions/build/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @ext/obj..d/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/ext\/objective_functions\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/ext/objective_functions/build$', 'action__path': 'ext/objective_functions/build/prog/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @ext/obj..g/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/ext\/objective_functions\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_BINARY_DIR', 'action__pattern': '\M^CMAKE_BINARY_DIR = /home/andrew/code/pose_estimation/ext/objective_functions/build$', 'action__path': 'ext/objective_functions/build/xing/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_BINARY_DIR           @ext/obj..g/Makefile  CMAKE_BINARY_DIR = \/home\/andrew\/code\/pose_estimation\/ext\/objective_functions\/build', 'action__tagname': 'CMAKE_BINARY_DIR'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/Makefile       CMAKE_COMMAND = \/usr\/bin\/cmake', 'is_multiline': 0, 'unite__abbr': 'CMAKE_COMMAND              @build/Makefile       CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/apps/34dof_to_json/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/a..n/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'is_multiline': 0, 'unite__abbr': 'CMAKE_COMMAND              @build/a..n/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/apps/34dof_to_json/src/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/a..c/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'is_multiline': 0, 'unite__abbr': 'CMAKE_COMMAND              @build/a..c/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/apps/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/apps/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'is_multiline': 0, 'unite__abbr': 'CMAKE_COMMAND              @build/apps/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/apps/abalone_forest/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/a..t/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'is_multiline': 0, 'unite__abbr': 'CMAKE_COMMAND              @build/a..t/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'action__path': 'build/apps/abalone_forest/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/a..c/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'action__path': 'build/apps/bmvc_project/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/a..t/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/apps/bmvc_project/include/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/a..e/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'is_multiline': 0, 'unite__abbr': 'CMAKE_COMMAND              @build/a..e/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'action__path': 'build/apps/bmvc_project/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/a..c/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/apps/compare_poses/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/a..s/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'is_multiline': 0, 'unite__abbr': 'CMAKE_COMMAND              @build/a..s/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'action__path': 'build/apps/compare_poses/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/a..c/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/apps/depth_shader_viewer/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/a..r/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'is_multiline': 0, 'unite__abbr': 'CMAKE_COMMAND              @build/a..r/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'action__path': 'build/apps/depth_shader_viewer/include/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/a..e/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'action__path': 'build/apps/depth_shader_viewer/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/a..c/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'action__path': 'build/apps/edge_shader_viewer/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/a..r/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'action__path': 'build/apps/edge_shader_viewer/include/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/a..e/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'action__path': 'build/apps/edge_shader_viewer/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/a..c/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'action__path': 'build/apps/gbuffer_viewer/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/a..r/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'action__path': 'build/apps/gbuffer_viewer/include/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/a..e/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'action__path': 'build/apps/gbuffer_viewer/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/a..c/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'action__path': 'build/apps/lrt_tester/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/a..r/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'action__path': 'build/apps/lrt_tester/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/a..c/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'action__path': 'build/apps/multicam_mesh_viewer/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/a..r/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'action__path': 'build/apps/multicam_mesh_viewer/include/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/a..e/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'action__path': 'build/apps/multicam_mesh_viewer/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/a..c/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/apps/particle_swarm_demo/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/a..o/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'is_multiline': 0, 'unite__abbr': 'CMAKE_COMMAND              @build/a..o/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'action__path': 'build/apps/particle_swarm_demo/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/a..c/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'action__path': 'build/apps/pose_creator/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/a..r/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'action__path': 'build/apps/pose_creator/include/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/a..e/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'action__path': 'build/apps/pose_creator/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/a..c/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'action__path': 'build/apps/pose_interpolator/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/a..r/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'action__path': 'build/apps/pose_interpolator/include/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/a..e/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'action__path': 'build/apps/pose_interpolator/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/a..c/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'action__path': 'build/apps/pose_renderer/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/a..r/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'action__path': 'build/apps/pose_renderer/include/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/a..e/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'action__path': 'build/apps/pose_renderer/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/a..c/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'action__path': 'build/apps/pose_viewer/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/a..r/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'action__path': 'build/apps/pose_viewer/include/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/a..e/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'action__path': 'build/apps/pose_viewer/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/a..c/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'action__path': 'build/apps/skel_viewer/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/a..r/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'action__path': 'build/apps/skel_viewer/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/a..c/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'action__path': 'build/apps/sph_renderer/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/a..r/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'action__path': 'build/apps/sph_renderer/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/a..c/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'action__path': 'build/apps/sphere_model_maker/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/a..r/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'action__path': 'build/apps/sphere_model_maker/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/a..c/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/apps/sphere_model_optim/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/a..m/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'is_multiline': 0, 'unite__abbr': 'CMAKE_COMMAND              @build/a..m/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'action__path': 'build/apps/sphere_model_optim/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/a..c/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'action__path': 'build/apps/sphere_model_renderer/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/a..r/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'action__path': 'build/apps/sphere_model_renderer/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/a..c/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/apps/tang_lrf/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/a..f/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'is_multiline': 0, 'unite__abbr': 'CMAKE_COMMAND              @build/a..f/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'action__path': 'build/apps/tang_lrf/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/a..c/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/modules/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/m..s/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'is_multiline': 0, 'unite__abbr': 'CMAKE_COMMAND              @build/m..s/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/modules/core/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/m..e/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'is_multiline': 0, 'unite__abbr': 'CMAKE_COMMAND              @build/m..e/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'action__path': 'build/modules/core/include/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/m..e/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/modules/core/src/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/m..c/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'is_multiline': 0, 'unite__abbr': 'CMAKE_COMMAND              @build/m..c/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/modules/geom/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/m..m/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'is_multiline': 0, 'unite__abbr': 'CMAKE_COMMAND              @build/m..m/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'action__path': 'build/modules/geom/include/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/m..e/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'action__path': 'build/modules/geom/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/m..c/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/modules/gl/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/m..l/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'is_multiline': 0, 'unite__abbr': 'CMAKE_COMMAND              @build/m..l/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'action__path': 'build/modules/gl/include/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/m..e/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'action__path': 'build/modules/gl/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/m..c/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/modules/img/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/m..g/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'is_multiline': 0, 'unite__abbr': 'CMAKE_COMMAND              @build/m..g/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'action__path': 'build/modules/img/include/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/m..e/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'action__path': 'build/modules/img/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/m..c/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/modules/io/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/m..o/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'is_multiline': 0, 'unite__abbr': 'CMAKE_COMMAND              @build/m..o/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'action__path': 'build/modules/io/include/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/m..e/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'action__path': 'build/modules/io/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/m..c/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'action__path': 'build/modules/ml/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/m..l/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'action__path': 'build/modules/ml/include/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/m..e/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'action__path': 'build/modules/ml/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/m..c/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'action__path': 'build/modules/optim/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/m..m/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'action__path': 'build/modules/optim/include/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/m..e/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'action__path': 'build/modules/optim/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @build/m..c/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'action__path': 'ext/objective_functions/build/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @ext/obj..d/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'action__path': 'ext/objective_functions/build/prog/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @ext/obj..g/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_COMMAND', 'action__pattern': '\M^CMAKE_COMMAND = /usr/bin/cmake$', 'action__path': 'ext/objective_functions/build/xing/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_COMMAND              @ext/obj..g/Makefile  CMAKE_COMMAND = \/usr\/bin\/cmake', 'action__tagname': 'CMAKE_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/Makefile       CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'is_multiline': 0, 'unite__abbr': 'CMAKE_EDIT_COMMAND         @build/Makefile       CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/apps/34dof_to_json/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/a..n/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'is_multiline': 0, 'unite__abbr': 'CMAKE_EDIT_COMMAND         @build/a..n/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/apps/34dof_to_json/src/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/a..c/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'is_multiline': 0, 'unite__abbr': 'CMAKE_EDIT_COMMAND         @build/a..c/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/apps/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/apps/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'is_multiline': 0, 'unite__abbr': 'CMAKE_EDIT_COMMAND         @build/apps/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/apps/abalone_forest/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/a..t/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'is_multiline': 0, 'unite__abbr': 'CMAKE_EDIT_COMMAND         @build/a..t/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'action__path': 'build/apps/abalone_forest/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/a..c/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'action__path': 'build/apps/bmvc_project/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/a..t/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/apps/bmvc_project/include/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/a..e/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'is_multiline': 0, 'unite__abbr': 'CMAKE_EDIT_COMMAND         @build/a..e/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'action__path': 'build/apps/bmvc_project/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/a..c/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/apps/compare_poses/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/a..s/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'is_multiline': 0, 'unite__abbr': 'CMAKE_EDIT_COMMAND         @build/a..s/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'action__path': 'build/apps/compare_poses/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/a..c/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/apps/depth_shader_viewer/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/a..r/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'is_multiline': 0, 'unite__abbr': 'CMAKE_EDIT_COMMAND         @build/a..r/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'action__path': 'build/apps/depth_shader_viewer/include/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/a..e/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'action__path': 'build/apps/depth_shader_viewer/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/a..c/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'action__path': 'build/apps/edge_shader_viewer/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/a..r/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'action__path': 'build/apps/edge_shader_viewer/include/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/a..e/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'action__path': 'build/apps/edge_shader_viewer/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/a..c/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'action__path': 'build/apps/gbuffer_viewer/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/a..r/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'action__path': 'build/apps/gbuffer_viewer/include/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/a..e/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'action__path': 'build/apps/gbuffer_viewer/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/a..c/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'action__path': 'build/apps/lrt_tester/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/a..r/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'action__path': 'build/apps/lrt_tester/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/a..c/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'action__path': 'build/apps/multicam_mesh_viewer/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/a..r/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'action__path': 'build/apps/multicam_mesh_viewer/include/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/a..e/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'action__path': 'build/apps/multicam_mesh_viewer/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/a..c/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/apps/particle_swarm_demo/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/a..o/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'is_multiline': 0, 'unite__abbr': 'CMAKE_EDIT_COMMAND         @build/a..o/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'action__path': 'build/apps/particle_swarm_demo/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/a..c/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'action__path': 'build/apps/pose_creator/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/a..r/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'action__path': 'build/apps/pose_creator/include/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/a..e/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'action__path': 'build/apps/pose_creator/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/a..c/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'action__path': 'build/apps/pose_interpolator/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/a..r/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'action__path': 'build/apps/pose_interpolator/include/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/a..e/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'action__path': 'build/apps/pose_interpolator/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/a..c/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'action__path': 'build/apps/pose_renderer/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/a..r/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'action__path': 'build/apps/pose_renderer/include/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/a..e/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'action__path': 'build/apps/pose_renderer/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/a..c/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'action__path': 'build/apps/pose_viewer/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/a..r/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'action__path': 'build/apps/pose_viewer/include/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/a..e/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'action__path': 'build/apps/pose_viewer/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/a..c/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'action__path': 'build/apps/skel_viewer/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/a..r/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'action__path': 'build/apps/skel_viewer/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/a..c/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'action__path': 'build/apps/sph_renderer/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/a..r/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'action__path': 'build/apps/sph_renderer/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/a..c/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'action__path': 'build/apps/sphere_model_maker/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/a..r/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'action__path': 'build/apps/sphere_model_maker/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/a..c/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/apps/sphere_model_optim/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/a..m/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'is_multiline': 0, 'unite__abbr': 'CMAKE_EDIT_COMMAND         @build/a..m/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'action__path': 'build/apps/sphere_model_optim/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/a..c/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'action__path': 'build/apps/sphere_model_renderer/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/a..r/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'action__path': 'build/apps/sphere_model_renderer/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/a..c/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/apps/tang_lrf/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/a..f/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'is_multiline': 0, 'unite__abbr': 'CMAKE_EDIT_COMMAND         @build/a..f/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'action__path': 'build/apps/tang_lrf/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/a..c/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/modules/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/m..s/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'is_multiline': 0, 'unite__abbr': 'CMAKE_EDIT_COMMAND         @build/m..s/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/modules/core/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/m..e/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'is_multiline': 0, 'unite__abbr': 'CMAKE_EDIT_COMMAND         @build/m..e/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'action__path': 'build/modules/core/include/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/m..e/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/modules/core/src/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/m..c/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'is_multiline': 0, 'unite__abbr': 'CMAKE_EDIT_COMMAND         @build/m..c/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/modules/geom/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/m..m/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'is_multiline': 0, 'unite__abbr': 'CMAKE_EDIT_COMMAND         @build/m..m/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'action__path': 'build/modules/geom/include/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/m..e/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'action__path': 'build/modules/geom/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/m..c/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/modules/gl/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/m..l/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'is_multiline': 0, 'unite__abbr': 'CMAKE_EDIT_COMMAND         @build/m..l/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'action__path': 'build/modules/gl/include/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/m..e/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'action__path': 'build/modules/gl/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/m..c/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/modules/img/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/m..g/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'is_multiline': 0, 'unite__abbr': 'CMAKE_EDIT_COMMAND         @build/m..g/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'action__path': 'build/modules/img/include/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/m..e/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'action__path': 'build/modules/img/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/m..c/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/modules/io/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/m..o/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'is_multiline': 0, 'unite__abbr': 'CMAKE_EDIT_COMMAND         @build/m..o/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'action__path': 'build/modules/io/include/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/m..e/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'action__path': 'build/modules/io/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/m..c/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'action__path': 'build/modules/ml/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/m..l/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'action__path': 'build/modules/ml/include/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/m..e/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'action__path': 'build/modules/ml/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/m..c/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'action__path': 'build/modules/optim/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/m..m/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'action__path': 'build/modules/optim/include/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/m..e/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_EDIT_COMMAND', 'action__pattern': '\M^CMAKE_EDIT_COMMAND = /usr/bin/ccmake$', 'action__path': 'build/modules/optim/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_EDIT_COMMAND         @build/m..c/Makefile  CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake', 'action__tagname': 'CMAKE_EDIT_COMMAND'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/Makefile       CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'is_multiline': 0, 'unite__abbr': 'CMAKE_SOURCE_DIR           @build/Makefile       CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/apps/34dof_to_json/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/a..n/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'is_multiline': 0, 'unite__abbr': 'CMAKE_SOURCE_DIR           @build/a..n/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/apps/34dof_to_json/src/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/a..c/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'is_multiline': 0, 'unite__abbr': 'CMAKE_SOURCE_DIR           @build/a..c/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/apps/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/apps/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'is_multiline': 0, 'unite__abbr': 'CMAKE_SOURCE_DIR           @build/apps/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/apps/abalone_forest/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/a..t/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'is_multiline': 0, 'unite__abbr': 'CMAKE_SOURCE_DIR           @build/a..t/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'action__path': 'build/apps/abalone_forest/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/a..c/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'action__path': 'build/apps/bmvc_project/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/a..t/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/apps/bmvc_project/include/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/a..e/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'is_multiline': 0, 'unite__abbr': 'CMAKE_SOURCE_DIR           @build/a..e/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'action__path': 'build/apps/bmvc_project/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/a..c/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/apps/compare_poses/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/a..s/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'is_multiline': 0, 'unite__abbr': 'CMAKE_SOURCE_DIR           @build/a..s/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'action__path': 'build/apps/compare_poses/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/a..c/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/apps/depth_shader_viewer/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/a..r/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'is_multiline': 0, 'unite__abbr': 'CMAKE_SOURCE_DIR           @build/a..r/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'action__path': 'build/apps/depth_shader_viewer/include/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/a..e/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'action__path': 'build/apps/depth_shader_viewer/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/a..c/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'action__path': 'build/apps/edge_shader_viewer/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/a..r/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'action__path': 'build/apps/edge_shader_viewer/include/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/a..e/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'action__path': 'build/apps/edge_shader_viewer/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/a..c/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'action__path': 'build/apps/gbuffer_viewer/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/a..r/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'action__path': 'build/apps/gbuffer_viewer/include/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/a..e/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'action__path': 'build/apps/gbuffer_viewer/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/a..c/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'action__path': 'build/apps/lrt_tester/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/a..r/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'action__path': 'build/apps/lrt_tester/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/a..c/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'action__path': 'build/apps/multicam_mesh_viewer/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/a..r/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'action__path': 'build/apps/multicam_mesh_viewer/include/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/a..e/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'action__path': 'build/apps/multicam_mesh_viewer/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/a..c/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/apps/particle_swarm_demo/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/a..o/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'is_multiline': 0, 'unite__abbr': 'CMAKE_SOURCE_DIR           @build/a..o/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'action__path': 'build/apps/particle_swarm_demo/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/a..c/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'action__path': 'build/apps/pose_creator/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/a..r/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'action__path': 'build/apps/pose_creator/include/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/a..e/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'action__path': 'build/apps/pose_creator/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/a..c/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'action__path': 'build/apps/pose_interpolator/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/a..r/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'action__path': 'build/apps/pose_interpolator/include/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/a..e/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'action__path': 'build/apps/pose_interpolator/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/a..c/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'action__path': 'build/apps/pose_renderer/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/a..r/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'action__path': 'build/apps/pose_renderer/include/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/a..e/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'action__path': 'build/apps/pose_renderer/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/a..c/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'action__path': 'build/apps/pose_viewer/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/a..r/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'action__path': 'build/apps/pose_viewer/include/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/a..e/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'action__path': 'build/apps/pose_viewer/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/a..c/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'action__path': 'build/apps/skel_viewer/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/a..r/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'action__path': 'build/apps/skel_viewer/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/a..c/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'action__path': 'build/apps/sph_renderer/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/a..r/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'action__path': 'build/apps/sph_renderer/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/a..c/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'action__path': 'build/apps/sphere_model_maker/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/a..r/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'action__path': 'build/apps/sphere_model_maker/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/a..c/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/apps/sphere_model_optim/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/a..m/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'is_multiline': 0, 'unite__abbr': 'CMAKE_SOURCE_DIR           @build/a..m/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'action__path': 'build/apps/sphere_model_optim/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/a..c/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'action__path': 'build/apps/sphere_model_renderer/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/a..r/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'action__path': 'build/apps/sphere_model_renderer/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/a..c/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/apps/tang_lrf/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/a..f/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'is_multiline': 0, 'unite__abbr': 'CMAKE_SOURCE_DIR           @build/a..f/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'action__path': 'build/apps/tang_lrf/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/a..c/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/modules/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/m..s/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'is_multiline': 0, 'unite__abbr': 'CMAKE_SOURCE_DIR           @build/m..s/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/modules/core/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/m..e/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'is_multiline': 0, 'unite__abbr': 'CMAKE_SOURCE_DIR           @build/m..e/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'action__path': 'build/modules/core/include/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/m..e/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/modules/core/src/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/m..c/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'is_multiline': 0, 'unite__abbr': 'CMAKE_SOURCE_DIR           @build/m..c/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/modules/geom/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/m..m/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'is_multiline': 0, 'unite__abbr': 'CMAKE_SOURCE_DIR           @build/m..m/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'action__path': 'build/modules/geom/include/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/m..e/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'action__path': 'build/modules/geom/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/m..c/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/modules/gl/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/m..l/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'is_multiline': 0, 'unite__abbr': 'CMAKE_SOURCE_DIR           @build/m..l/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'action__path': 'build/modules/gl/include/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/m..e/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'action__path': 'build/modules/gl/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/m..c/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/modules/img/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/m..g/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'is_multiline': 0, 'unite__abbr': 'CMAKE_SOURCE_DIR           @build/m..g/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'action__path': 'build/modules/img/include/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/m..e/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'action__path': 'build/modules/img/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/m..c/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/modules/io/Makefile', 'unite__is_marked': 0, 'source': 'tag', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/m..o/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'is_multiline': 0, 'unite__abbr': 'CMAKE_SOURCE_DIR           @build/m..o/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'action__path': 'build/modules/io/include/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/m..e/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'action__path': 'build/modules/io/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/m..c/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'action__path': 'build/modules/ml/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/m..l/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'action__path': 'build/modules/ml/include/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/m..e/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'action__path': 'build/modules/ml/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/m..c/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'action__path': 'build/modules/optim/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/m..m/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'action__path': 'build/modules/optim/include/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/m..e/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation$', 'action__path': 'build/modules/optim/src/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @build/m..c/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation/ext/objective_functions$', 'action__path': 'ext/objective_functions/build/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @ext/obj..d/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation\/ext\/objective_functions', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation/ext/objective_functions$', 'action__path': 'ext/objective_functions/build/prog/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @ext/obj..g/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation\/ext\/objective_functions', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'CMAKE_SOURCE_DIR', 'action__pattern': '\M^CMAKE_SOURCE_DIR = /home/andrew/code/pose_estimation/ext/objective_functions$', 'action__path': 'ext/objective_functions/build/xing/Makefile', 'kind': 'jump_list', 'abbr': 'CMAKE_SOURCE_DIR           @ext/obj..g/Makefile  CMAKE_SOURCE_DIR = \/home\/andrew\/code\/pose_estimation\/ext\/objective_functions', 'action__tagname': 'CMAKE_SOURCE_DIR'}, {'word': 'COMPILER_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'unite__is_marked': 0, 'action__line': 107, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @build/C..mpilerId.c  line:107', 'is_multiline': 0, 'unite__abbr': 'COMPILER_ID                @build/C..mpilerId.c  line:107', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'unite__is_marked': 0, 'action__line': 112, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @build/C..mpilerId.c  line:112', 'is_multiline': 0, 'unite__abbr': 'COMPILER_ID                @build/C..mpilerId.c  line:112', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'unite__is_marked': 0, 'action__line': 119, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @build/C..mpilerId.c  line:119', 'is_multiline': 0, 'unite__abbr': 'COMPILER_ID                @build/C..mpilerId.c  line:119', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'unite__is_marked': 0, 'action__line': 122, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @build/C..mpilerId.c  line:122', 'is_multiline': 0, 'unite__abbr': 'COMPILER_ID                @build/C..mpilerId.c  line:122', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'unite__is_marked': 0, 'action__line': 125, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @build/C..mpilerId.c  line:125', 'is_multiline': 0, 'unite__abbr': 'COMPILER_ID                @build/C..mpilerId.c  line:125', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'unite__is_marked': 0, 'action__line': 133, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @build/C..mpilerId.c  line:133', 'is_multiline': 0, 'unite__abbr': 'COMPILER_ID                @build/C..mpilerId.c  line:133', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'unite__is_marked': 0, 'action__line': 13, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @build/C..mpilerId.c  line:13', 'is_multiline': 0, 'unite__abbr': 'COMPILER_ID                @build/C..mpilerId.c  line:13', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'unite__is_marked': 0, 'action__line': 152, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @build/C..mpilerId.c  line:152', 'is_multiline': 0, 'unite__abbr': 'COMPILER_ID                @build/C..mpilerId.c  line:152', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'unite__is_marked': 0, 'action__line': 160, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @build/C..mpilerId.c  line:160', 'is_multiline': 0, 'unite__abbr': 'COMPILER_ID                @build/C..mpilerId.c  line:160', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'unite__is_marked': 0, 'action__line': 165, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @build/C..mpilerId.c  line:165', 'is_multiline': 0, 'unite__abbr': 'COMPILER_ID                @build/C..mpilerId.c  line:165', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'unite__is_marked': 0, 'action__line': 170, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @build/C..mpilerId.c  line:170', 'is_multiline': 0, 'unite__abbr': 'COMPILER_ID                @build/C..mpilerId.c  line:170', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'unite__is_marked': 0, 'action__line': 177, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @build/C..mpilerId.c  line:177', 'is_multiline': 0, 'unite__abbr': 'COMPILER_ID                @build/C..mpilerId.c  line:177', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'unite__is_marked': 0, 'action__line': 194, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @build/C..mpilerId.c  line:194', 'is_multiline': 0, 'unite__abbr': 'COMPILER_ID                @build/C..mpilerId.c  line:194', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'unite__is_marked': 0, 'action__line': 197, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @build/C..mpilerId.c  line:197', 'is_multiline': 0, 'unite__abbr': 'COMPILER_ID                @build/C..mpilerId.c  line:197', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'unite__is_marked': 0, 'action__line': 200, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @build/C..mpilerId.c  line:200', 'is_multiline': 0, 'unite__abbr': 'COMPILER_ID                @build/C..mpilerId.c  line:200', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'unite__is_marked': 0, 'action__line': 24, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @build/C..mpilerId.c  line:24', 'is_multiline': 0, 'unite__abbr': 'COMPILER_ID                @build/C..mpilerId.c  line:24', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'unite__is_marked': 0, 'action__line': 32, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @build/C..mpilerId.c  line:32', 'is_multiline': 0, 'unite__abbr': 'COMPILER_ID                @build/C..mpilerId.c  line:32', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'unite__is_marked': 0, 'action__line': 38, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @build/C..mpilerId.c  line:38', 'is_multiline': 0, 'unite__abbr': 'COMPILER_ID                @build/C..mpilerId.c  line:38', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'unite__is_marked': 0, 'action__line': 44, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @build/C..mpilerId.c  line:44', 'is_multiline': 0, 'unite__abbr': 'COMPILER_ID                @build/C..mpilerId.c  line:44', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'unite__is_marked': 0, 'action__line': 50, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @build/C..mpilerId.c  line:50', 'is_multiline': 0, 'unite__abbr': 'COMPILER_ID                @build/C..mpilerId.c  line:50', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'unite__is_marked': 0, 'action__line': 56, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @build/C..mpilerId.c  line:56', 'is_multiline': 0, 'unite__abbr': 'COMPILER_ID                @build/C..mpilerId.c  line:56', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'unite__is_marked': 0, 'action__line': 70, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @build/C..mpilerId.c  line:70', 'is_multiline': 0, 'unite__abbr': 'COMPILER_ID                @build/C..mpilerId.c  line:70', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'unite__is_marked': 0, 'action__line': 77, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @build/C..mpilerId.c  line:77', 'is_multiline': 0, 'unite__abbr': 'COMPILER_ID                @build/C..mpilerId.c  line:77', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'unite__is_marked': 0, 'action__line': 85, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @build/C..mpilerId.c  line:85', 'is_multiline': 0, 'unite__abbr': 'COMPILER_ID                @build/C..mpilerId.c  line:85', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'unite__is_marked': 0, 'action__line': 88, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @build/C..mpilerId.c  line:88', 'is_multiline': 0, 'unite__abbr': 'COMPILER_ID                @build/C..mpilerId.c  line:88', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'unite__is_marked': 0, 'action__line': 90, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @build/C..mpilerId.c  line:90', 'is_multiline': 0, 'unite__abbr': 'COMPILER_ID                @build/C..mpilerId.c  line:90', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'unite__is_marked': 0, 'action__line': 99, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @build/C..mpilerId.c  line:99', 'is_multiline': 0, 'unite__abbr': 'COMPILER_ID                @build/C..mpilerId.c  line:99', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'unite__is_marked': 0, 'action__line': 104, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @build/C..ilerId.cpp  line:104', 'is_multiline': 0, 'unite__abbr': 'COMPILER_ID                @build/C..ilerId.cpp  line:104', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'unite__is_marked': 0, 'action__line': 112, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @build/C..ilerId.cpp  line:112', 'is_multiline': 0, 'unite__abbr': 'COMPILER_ID                @build/C..ilerId.cpp  line:112', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'unite__is_marked': 0, 'action__line': 117, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @build/C..ilerId.cpp  line:117', 'is_multiline': 0, 'unite__abbr': 'COMPILER_ID                @build/C..ilerId.cpp  line:117', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'unite__is_marked': 0, 'action__line': 124, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @build/C..ilerId.cpp  line:124', 'is_multiline': 0, 'unite__abbr': 'COMPILER_ID                @build/C..ilerId.cpp  line:124', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'unite__is_marked': 0, 'action__line': 127, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @build/C..ilerId.cpp  line:127', 'is_multiline': 0, 'unite__abbr': 'COMPILER_ID                @build/C..ilerId.cpp  line:127', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'unite__is_marked': 0, 'action__line': 12, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @build/C..ilerId.cpp  line:12', 'is_multiline': 0, 'unite__abbr': 'COMPILER_ID                @build/C..ilerId.cpp  line:12', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'unite__is_marked': 0, 'action__line': 135, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @build/C..ilerId.cpp  line:135', 'is_multiline': 0, 'unite__abbr': 'COMPILER_ID                @build/C..ilerId.cpp  line:135', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'unite__is_marked': 0, 'action__line': 154, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @build/C..ilerId.cpp  line:154', 'is_multiline': 0, 'unite__abbr': 'COMPILER_ID                @build/C..ilerId.cpp  line:154', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'unite__is_marked': 0, 'action__line': 162, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @build/C..ilerId.cpp  line:162', 'is_multiline': 0, 'unite__abbr': 'COMPILER_ID                @build/C..ilerId.cpp  line:162', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'unite__is_marked': 0, 'action__line': 167, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @build/C..ilerId.cpp  line:167', 'is_multiline': 0, 'unite__abbr': 'COMPILER_ID                @build/C..ilerId.cpp  line:167', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'unite__is_marked': 0, 'action__line': 170, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @build/C..ilerId.cpp  line:170', 'is_multiline': 0, 'unite__abbr': 'COMPILER_ID                @build/C..ilerId.cpp  line:170', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'unite__is_marked': 0, 'action__line': 187, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @build/C..ilerId.cpp  line:187', 'is_multiline': 0, 'unite__abbr': 'COMPILER_ID                @build/C..ilerId.cpp  line:187', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'unite__is_marked': 0, 'action__line': 18, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @build/C..ilerId.cpp  line:18', 'is_multiline': 0, 'unite__abbr': 'COMPILER_ID                @build/C..ilerId.cpp  line:18', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'unite__is_marked': 0, 'action__line': 190, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @build/C..ilerId.cpp  line:190', 'is_multiline': 0, 'unite__abbr': 'COMPILER_ID                @build/C..ilerId.cpp  line:190', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'unite__is_marked': 0, 'action__line': 193, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @build/C..ilerId.cpp  line:193', 'is_multiline': 0, 'unite__abbr': 'COMPILER_ID                @build/C..ilerId.cpp  line:193', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'unite__is_marked': 0, 'action__line': 29, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @build/C..ilerId.cpp  line:29', 'is_multiline': 0, 'unite__abbr': 'COMPILER_ID                @build/C..ilerId.cpp  line:29', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'unite__is_marked': 0, 'action__line': 37, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @build/C..ilerId.cpp  line:37', 'is_multiline': 0, 'unite__abbr': 'COMPILER_ID                @build/C..ilerId.cpp  line:37', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'unite__is_marked': 0, 'action__line': 43, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @build/C..ilerId.cpp  line:43', 'is_multiline': 0, 'unite__abbr': 'COMPILER_ID                @build/C..ilerId.cpp  line:43', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'unite__is_marked': 0, 'action__line': 49, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @build/C..ilerId.cpp  line:49', 'is_multiline': 0, 'unite__abbr': 'COMPILER_ID                @build/C..ilerId.cpp  line:49', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'unite__is_marked': 0, 'action__line': 55, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @build/C..ilerId.cpp  line:55', 'is_multiline': 0, 'unite__abbr': 'COMPILER_ID                @build/C..ilerId.cpp  line:55', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'unite__is_marked': 0, 'action__line': 61, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @build/C..ilerId.cpp  line:61', 'is_multiline': 0, 'unite__abbr': 'COMPILER_ID                @build/C..ilerId.cpp  line:61', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'unite__is_marked': 0, 'action__line': 75, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @build/C..ilerId.cpp  line:75', 'is_multiline': 0, 'unite__abbr': 'COMPILER_ID                @build/C..ilerId.cpp  line:75', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'unite__is_marked': 0, 'action__line': 82, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @build/C..ilerId.cpp  line:82', 'is_multiline': 0, 'unite__abbr': 'COMPILER_ID                @build/C..ilerId.cpp  line:82', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'unite__is_marked': 0, 'action__line': 90, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @build/C..ilerId.cpp  line:90', 'is_multiline': 0, 'unite__abbr': 'COMPILER_ID                @build/C..ilerId.cpp  line:90', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'unite__is_marked': 0, 'action__line': 93, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @build/C..ilerId.cpp  line:93', 'is_multiline': 0, 'unite__abbr': 'COMPILER_ID                @build/C..ilerId.cpp  line:93', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'unite__is_marked': 0, 'action__line': 95, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @build/C..ilerId.cpp  line:95', 'is_multiline': 0, 'unite__abbr': 'COMPILER_ID                @build/C..ilerId.cpp  line:95', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 107, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @ext/obj..mpilerId.c  line:107', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 112, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @ext/obj..mpilerId.c  line:112', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 119, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @ext/obj..mpilerId.c  line:119', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 122, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @ext/obj..mpilerId.c  line:122', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 125, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @ext/obj..mpilerId.c  line:125', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 133, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @ext/obj..mpilerId.c  line:133', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 13, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @ext/obj..mpilerId.c  line:13', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 152, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @ext/obj..mpilerId.c  line:152', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 160, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @ext/obj..mpilerId.c  line:160', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 165, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @ext/obj..mpilerId.c  line:165', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 170, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @ext/obj..mpilerId.c  line:170', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 177, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @ext/obj..mpilerId.c  line:177', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 194, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @ext/obj..mpilerId.c  line:194', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 197, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @ext/obj..mpilerId.c  line:197', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 200, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @ext/obj..mpilerId.c  line:200', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 24, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @ext/obj..mpilerId.c  line:24', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 32, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @ext/obj..mpilerId.c  line:32', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 38, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @ext/obj..mpilerId.c  line:38', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 44, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @ext/obj..mpilerId.c  line:44', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 50, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @ext/obj..mpilerId.c  line:50', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 56, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @ext/obj..mpilerId.c  line:56', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 70, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @ext/obj..mpilerId.c  line:70', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 77, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @ext/obj..mpilerId.c  line:77', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 85, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @ext/obj..mpilerId.c  line:85', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 88, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @ext/obj..mpilerId.c  line:88', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 90, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @ext/obj..mpilerId.c  line:90', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 99, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @ext/obj..mpilerId.c  line:99', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 104, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @ext/obj..ilerId.cpp  line:104', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 112, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @ext/obj..ilerId.cpp  line:112', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 117, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @ext/obj..ilerId.cpp  line:117', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 124, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @ext/obj..ilerId.cpp  line:124', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 127, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @ext/obj..ilerId.cpp  line:127', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 12, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @ext/obj..ilerId.cpp  line:12', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 135, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @ext/obj..ilerId.cpp  line:135', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 154, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @ext/obj..ilerId.cpp  line:154', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 162, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @ext/obj..ilerId.cpp  line:162', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 167, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @ext/obj..ilerId.cpp  line:167', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 170, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @ext/obj..ilerId.cpp  line:170', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 187, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @ext/obj..ilerId.cpp  line:187', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 18, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @ext/obj..ilerId.cpp  line:18', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 190, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @ext/obj..ilerId.cpp  line:190', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 193, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @ext/obj..ilerId.cpp  line:193', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 29, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @ext/obj..ilerId.cpp  line:29', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 37, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @ext/obj..ilerId.cpp  line:37', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 43, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @ext/obj..ilerId.cpp  line:43', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 49, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @ext/obj..ilerId.cpp  line:49', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 55, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @ext/obj..ilerId.cpp  line:55', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 61, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @ext/obj..ilerId.cpp  line:61', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 75, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @ext/obj..ilerId.cpp  line:75', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 82, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @ext/obj..ilerId.cpp  line:82', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 90, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @ext/obj..ilerId.cpp  line:90', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 93, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @ext/obj..ilerId.cpp  line:93', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 95, 'kind': 'jump_list', 'abbr': 'COMPILER_ID                @ext/obj..ilerId.cpp  line:95', 'action__tagname': 'COMPILER_ID'}, {'word': 'COMPILER_VERSION_MAJOR', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'unite__is_marked': 0, 'action__line': 100, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @build/C..mpilerId.c  line:100', 'is_multiline': 0, 'unite__abbr': 'COMPILER_VERSION_MAJOR     @build/C..mpilerId.c  line:100', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'unite__is_marked': 0, 'action__line': 108, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @build/C..mpilerId.c  line:108', 'is_multiline': 0, 'unite__abbr': 'COMPILER_VERSION_MAJOR     @build/C..mpilerId.c  line:108', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'unite__is_marked': 0, 'action__line': 114, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @build/C..mpilerId.c  line:114', 'is_multiline': 0, 'unite__abbr': 'COMPILER_VERSION_MAJOR     @build/C..mpilerId.c  line:114', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'unite__is_marked': 0, 'action__line': 126, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @build/C..mpilerId.c  line:126', 'is_multiline': 0, 'unite__abbr': 'COMPILER_VERSION_MAJOR     @build/C..mpilerId.c  line:126', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'unite__is_marked': 0, 'action__line': 135, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @build/C..mpilerId.c  line:135', 'is_multiline': 0, 'unite__abbr': 'COMPILER_VERSION_MAJOR     @build/C..mpilerId.c  line:135', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'unite__is_marked': 0, 'action__line': 154, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @build/C..mpilerId.c  line:154', 'is_multiline': 0, 'unite__abbr': 'COMPILER_VERSION_MAJOR     @build/C..mpilerId.c  line:154', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'unite__is_marked': 0, 'action__line': 15, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @build/C..mpilerId.c  line:15', 'is_multiline': 0, 'unite__abbr': 'COMPILER_VERSION_MAJOR     @build/C..mpilerId.c  line:15', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'unite__is_marked': 0, 'action__line': 172, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @build/C..mpilerId.c  line:172', 'is_multiline': 0, 'unite__abbr': 'COMPILER_VERSION_MAJOR     @build/C..mpilerId.c  line:172', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'unite__is_marked': 0, 'action__line': 180, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @build/C..mpilerId.c  line:180', 'is_multiline': 0, 'unite__abbr': 'COMPILER_VERSION_MAJOR     @build/C..mpilerId.c  line:180', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'unite__is_marked': 0, 'action__line': 185, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @build/C..mpilerId.c  line:185', 'is_multiline': 0, 'unite__abbr': 'COMPILER_VERSION_MAJOR     @build/C..mpilerId.c  line:185', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'unite__is_marked': 0, 'action__line': 25, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @build/C..mpilerId.c  line:25', 'is_multiline': 0, 'unite__abbr': 'COMPILER_VERSION_MAJOR     @build/C..mpilerId.c  line:25', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'unite__is_marked': 0, 'action__line': 33, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @build/C..mpilerId.c  line:33', 'is_multiline': 0, 'unite__abbr': 'COMPILER_VERSION_MAJOR     @build/C..mpilerId.c  line:33', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'unite__is_marked': 0, 'action__line': 39, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @build/C..mpilerId.c  line:39', 'is_multiline': 0, 'unite__abbr': 'COMPILER_VERSION_MAJOR     @build/C..mpilerId.c  line:39', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'unite__is_marked': 0, 'action__line': 46, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @build/C..mpilerId.c  line:46', 'is_multiline': 0, 'unite__abbr': 'COMPILER_VERSION_MAJOR     @build/C..mpilerId.c  line:46', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'unite__is_marked': 0, 'action__line': 52, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @build/C..mpilerId.c  line:52', 'is_multiline': 0, 'unite__abbr': 'COMPILER_VERSION_MAJOR     @build/C..mpilerId.c  line:52', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'unite__is_marked': 0, 'action__line': 59, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @build/C..mpilerId.c  line:59', 'is_multiline': 0, 'unite__abbr': 'COMPILER_VERSION_MAJOR     @build/C..mpilerId.c  line:59', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'unite__is_marked': 0, 'action__line': 64, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @build/C..mpilerId.c  line:64', 'is_multiline': 0, 'unite__abbr': 'COMPILER_VERSION_MAJOR     @build/C..mpilerId.c  line:64', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'unite__is_marked': 0, 'action__line': 72, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @build/C..mpilerId.c  line:72', 'is_multiline': 0, 'unite__abbr': 'COMPILER_VERSION_MAJOR     @build/C..mpilerId.c  line:72', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'unite__is_marked': 0, 'action__line': 79, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @build/C..mpilerId.c  line:79', 'is_multiline': 0, 'unite__abbr': 'COMPILER_VERSION_MAJOR     @build/C..mpilerId.c  line:79', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'unite__is_marked': 0, 'action__line': 93, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @build/C..mpilerId.c  line:93', 'is_multiline': 0, 'unite__abbr': 'COMPILER_VERSION_MAJOR     @build/C..mpilerId.c  line:93', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'unite__is_marked': 0, 'action__line': 105, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @build/C..ilerId.cpp  line:105', 'is_multiline': 0, 'unite__abbr': 'COMPILER_VERSION_MAJOR     @build/C..ilerId.cpp  line:105', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'unite__is_marked': 0, 'action__line': 113, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @build/C..ilerId.cpp  line:113', 'is_multiline': 0, 'unite__abbr': 'COMPILER_VERSION_MAJOR     @build/C..ilerId.cpp  line:113', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'unite__is_marked': 0, 'action__line': 119, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @build/C..ilerId.cpp  line:119', 'is_multiline': 0, 'unite__abbr': 'COMPILER_VERSION_MAJOR     @build/C..ilerId.cpp  line:119', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'unite__is_marked': 0, 'action__line': 128, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @build/C..ilerId.cpp  line:128', 'is_multiline': 0, 'unite__abbr': 'COMPILER_VERSION_MAJOR     @build/C..ilerId.cpp  line:128', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'unite__is_marked': 0, 'action__line': 137, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @build/C..ilerId.cpp  line:137', 'is_multiline': 0, 'unite__abbr': 'COMPILER_VERSION_MAJOR     @build/C..ilerId.cpp  line:137', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'unite__is_marked': 0, 'action__line': 14, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @build/C..ilerId.cpp  line:14', 'is_multiline': 0, 'unite__abbr': 'COMPILER_VERSION_MAJOR     @build/C..ilerId.cpp  line:14', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'unite__is_marked': 0, 'action__line': 156, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @build/C..ilerId.cpp  line:156', 'is_multiline': 0, 'unite__abbr': 'COMPILER_VERSION_MAJOR     @build/C..ilerId.cpp  line:156', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'unite__is_marked': 0, 'action__line': 173, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @build/C..ilerId.cpp  line:173', 'is_multiline': 0, 'unite__abbr': 'COMPILER_VERSION_MAJOR     @build/C..ilerId.cpp  line:173', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'unite__is_marked': 0, 'action__line': 178, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @build/C..ilerId.cpp  line:178', 'is_multiline': 0, 'unite__abbr': 'COMPILER_VERSION_MAJOR     @build/C..ilerId.cpp  line:178', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'unite__is_marked': 0, 'action__line': 20, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @build/C..ilerId.cpp  line:20', 'is_multiline': 0, 'unite__abbr': 'COMPILER_VERSION_MAJOR     @build/C..ilerId.cpp  line:20', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'unite__is_marked': 0, 'action__line': 30, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @build/C..ilerId.cpp  line:30', 'is_multiline': 0, 'unite__abbr': 'COMPILER_VERSION_MAJOR     @build/C..ilerId.cpp  line:30', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'unite__is_marked': 0, 'action__line': 38, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @build/C..ilerId.cpp  line:38', 'is_multiline': 0, 'unite__abbr': 'COMPILER_VERSION_MAJOR     @build/C..ilerId.cpp  line:38', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'source': 'tag', 'is_dummy': 0, 'is_matched': 1, 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'unite__is_marked': 0, 'action__line': 44, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @build/C..ilerId.cpp  line:44', 'is_multiline': 0, 'unite__abbr': 'COMPILER_VERSION_MAJOR     @build/C..ilerId.cpp  line:44', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 51, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @build/C..ilerId.cpp  line:51', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 57, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @build/C..ilerId.cpp  line:57', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 64, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @build/C..ilerId.cpp  line:64', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 69, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @build/C..ilerId.cpp  line:69', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 77, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @build/C..ilerId.cpp  line:77', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 84, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @build/C..ilerId.cpp  line:84', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 98, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @build/C..ilerId.cpp  line:98', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 100, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @ext/obj..mpilerId.c  line:100', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 108, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @ext/obj..mpilerId.c  line:108', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 114, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @ext/obj..mpilerId.c  line:114', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 126, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @ext/obj..mpilerId.c  line:126', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 135, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @ext/obj..mpilerId.c  line:135', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 154, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @ext/obj..mpilerId.c  line:154', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 15, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @ext/obj..mpilerId.c  line:15', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 172, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @ext/obj..mpilerId.c  line:172', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 180, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @ext/obj..mpilerId.c  line:180', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 185, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @ext/obj..mpilerId.c  line:185', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 25, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @ext/obj..mpilerId.c  line:25', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 33, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @ext/obj..mpilerId.c  line:33', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 39, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @ext/obj..mpilerId.c  line:39', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 46, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @ext/obj..mpilerId.c  line:46', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 52, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @ext/obj..mpilerId.c  line:52', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 59, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @ext/obj..mpilerId.c  line:59', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 64, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @ext/obj..mpilerId.c  line:64', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 72, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @ext/obj..mpilerId.c  line:72', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 79, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @ext/obj..mpilerId.c  line:79', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 93, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @ext/obj..mpilerId.c  line:93', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 105, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @ext/obj..ilerId.cpp  line:105', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 113, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @ext/obj..ilerId.cpp  line:113', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 119, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @ext/obj..ilerId.cpp  line:119', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 128, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @ext/obj..ilerId.cpp  line:128', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 137, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @ext/obj..ilerId.cpp  line:137', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 14, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @ext/obj..ilerId.cpp  line:14', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 156, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @ext/obj..ilerId.cpp  line:156', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 173, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @ext/obj..ilerId.cpp  line:173', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 178, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @ext/obj..ilerId.cpp  line:178', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 20, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @ext/obj..ilerId.cpp  line:20', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 30, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @ext/obj..ilerId.cpp  line:30', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 38, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @ext/obj..ilerId.cpp  line:38', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 44, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @ext/obj..ilerId.cpp  line:44', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 51, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @ext/obj..ilerId.cpp  line:51', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 57, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @ext/obj..ilerId.cpp  line:57', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 64, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @ext/obj..ilerId.cpp  line:64', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 69, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @ext/obj..ilerId.cpp  line:69', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 77, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @ext/obj..ilerId.cpp  line:77', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 84, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @ext/obj..ilerId.cpp  line:84', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MAJOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 98, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MAJOR     @ext/obj..ilerId.cpp  line:98', 'action__tagname': 'COMPILER_VERSION_MAJOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 101, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @build/C..mpilerId.c  line:101', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 109, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @build/C..mpilerId.c  line:109', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 115, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @build/C..mpilerId.c  line:115', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 127, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @build/C..mpilerId.c  line:127', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 136, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @build/C..mpilerId.c  line:136', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 155, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @build/C..mpilerId.c  line:155', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 16, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @build/C..mpilerId.c  line:16', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 173, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @build/C..mpilerId.c  line:173', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 181, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @build/C..mpilerId.c  line:181', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 186, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @build/C..mpilerId.c  line:186', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 26, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @build/C..mpilerId.c  line:26', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 34, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @build/C..mpilerId.c  line:34', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 40, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @build/C..mpilerId.c  line:40', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 47, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @build/C..mpilerId.c  line:47', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 53, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @build/C..mpilerId.c  line:53', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 60, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @build/C..mpilerId.c  line:60', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 65, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @build/C..mpilerId.c  line:65', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 73, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @build/C..mpilerId.c  line:73', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 80, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @build/C..mpilerId.c  line:80', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 94, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @build/C..mpilerId.c  line:94', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 106, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @build/C..ilerId.cpp  line:106', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 114, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @build/C..ilerId.cpp  line:114', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 120, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @build/C..ilerId.cpp  line:120', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 129, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @build/C..ilerId.cpp  line:129', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 138, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @build/C..ilerId.cpp  line:138', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 157, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @build/C..ilerId.cpp  line:157', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 15, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @build/C..ilerId.cpp  line:15', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 174, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @build/C..ilerId.cpp  line:174', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 179, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @build/C..ilerId.cpp  line:179', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 21, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @build/C..ilerId.cpp  line:21', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 31, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @build/C..ilerId.cpp  line:31', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 39, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @build/C..ilerId.cpp  line:39', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 45, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @build/C..ilerId.cpp  line:45', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 52, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @build/C..ilerId.cpp  line:52', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 58, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @build/C..ilerId.cpp  line:58', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 65, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @build/C..ilerId.cpp  line:65', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 70, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @build/C..ilerId.cpp  line:70', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 78, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @build/C..ilerId.cpp  line:78', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 85, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @build/C..ilerId.cpp  line:85', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 99, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @build/C..ilerId.cpp  line:99', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 101, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @ext/obj..mpilerId.c  line:101', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 109, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @ext/obj..mpilerId.c  line:109', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 115, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @ext/obj..mpilerId.c  line:115', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 127, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @ext/obj..mpilerId.c  line:127', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 136, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @ext/obj..mpilerId.c  line:136', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 155, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @ext/obj..mpilerId.c  line:155', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 16, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @ext/obj..mpilerId.c  line:16', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 173, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @ext/obj..mpilerId.c  line:173', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 181, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @ext/obj..mpilerId.c  line:181', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 186, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @ext/obj..mpilerId.c  line:186', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 26, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @ext/obj..mpilerId.c  line:26', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 34, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @ext/obj..mpilerId.c  line:34', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 40, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @ext/obj..mpilerId.c  line:40', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 47, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @ext/obj..mpilerId.c  line:47', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 53, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @ext/obj..mpilerId.c  line:53', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 60, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @ext/obj..mpilerId.c  line:60', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 65, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @ext/obj..mpilerId.c  line:65', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 73, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @ext/obj..mpilerId.c  line:73', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 80, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @ext/obj..mpilerId.c  line:80', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 94, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @ext/obj..mpilerId.c  line:94', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 106, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @ext/obj..ilerId.cpp  line:106', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 114, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @ext/obj..ilerId.cpp  line:114', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 120, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @ext/obj..ilerId.cpp  line:120', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 129, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @ext/obj..ilerId.cpp  line:129', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 138, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @ext/obj..ilerId.cpp  line:138', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 157, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @ext/obj..ilerId.cpp  line:157', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 15, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @ext/obj..ilerId.cpp  line:15', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 174, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @ext/obj..ilerId.cpp  line:174', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 179, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @ext/obj..ilerId.cpp  line:179', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 21, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @ext/obj..ilerId.cpp  line:21', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 31, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @ext/obj..ilerId.cpp  line:31', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 39, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @ext/obj..ilerId.cpp  line:39', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 45, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @ext/obj..ilerId.cpp  line:45', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 52, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @ext/obj..ilerId.cpp  line:52', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 58, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @ext/obj..ilerId.cpp  line:58', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 65, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @ext/obj..ilerId.cpp  line:65', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 70, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @ext/obj..ilerId.cpp  line:70', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 78, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @ext/obj..ilerId.cpp  line:78', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 85, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @ext/obj..ilerId.cpp  line:85', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_MINOR', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 99, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_MINOR     @ext/obj..ilerId.cpp  line:99', 'action__tagname': 'COMPILER_VERSION_MINOR'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 103, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @build/C..mpilerId.c  line:103', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 116, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @build/C..mpilerId.c  line:116', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 129, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @build/C..mpilerId.c  line:129', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 140, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @build/C..mpilerId.c  line:140', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 143, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @build/C..mpilerId.c  line:143', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 156, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @build/C..mpilerId.c  line:156', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 174, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @build/C..mpilerId.c  line:174', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 17, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @build/C..mpilerId.c  line:17', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 182, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @build/C..mpilerId.c  line:182', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 187, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @build/C..mpilerId.c  line:187', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 28, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @build/C..mpilerId.c  line:28', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 35, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @build/C..mpilerId.c  line:35', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 41, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @build/C..mpilerId.c  line:41', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 61, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @build/C..mpilerId.c  line:61', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 66, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @build/C..mpilerId.c  line:66', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 74, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @build/C..mpilerId.c  line:74', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 81, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @build/C..mpilerId.c  line:81', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 95, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @build/C..mpilerId.c  line:95', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 100, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @build/C..ilerId.cpp  line:100', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 108, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @build/C..ilerId.cpp  line:108', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 121, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @build/C..ilerId.cpp  line:121', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 131, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @build/C..ilerId.cpp  line:131', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 142, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @build/C..ilerId.cpp  line:142', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 145, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @build/C..ilerId.cpp  line:145', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 158, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @build/C..ilerId.cpp  line:158', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 175, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @build/C..ilerId.cpp  line:175', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 180, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @build/C..ilerId.cpp  line:180', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 22, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @build/C..ilerId.cpp  line:22', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 33, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @build/C..ilerId.cpp  line:33', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 40, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @build/C..ilerId.cpp  line:40', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 46, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @build/C..ilerId.cpp  line:46', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 66, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @build/C..ilerId.cpp  line:66', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 71, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @build/C..ilerId.cpp  line:71', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 79, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @build/C..ilerId.cpp  line:79', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 86, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @build/C..ilerId.cpp  line:86', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 103, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @ext/obj..mpilerId.c  line:103', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 116, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @ext/obj..mpilerId.c  line:116', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 129, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @ext/obj..mpilerId.c  line:129', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 140, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @ext/obj..mpilerId.c  line:140', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 143, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @ext/obj..mpilerId.c  line:143', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 156, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @ext/obj..mpilerId.c  line:156', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 174, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @ext/obj..mpilerId.c  line:174', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 17, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @ext/obj..mpilerId.c  line:17', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 182, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @ext/obj..mpilerId.c  line:182', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 187, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @ext/obj..mpilerId.c  line:187', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 28, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @ext/obj..mpilerId.c  line:28', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 35, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @ext/obj..mpilerId.c  line:35', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 41, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @ext/obj..mpilerId.c  line:41', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 61, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @ext/obj..mpilerId.c  line:61', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 66, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @ext/obj..mpilerId.c  line:66', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 74, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @ext/obj..mpilerId.c  line:74', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 81, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @ext/obj..mpilerId.c  line:81', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 95, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @ext/obj..mpilerId.c  line:95', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 100, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @ext/obj..ilerId.cpp  line:100', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 108, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @ext/obj..ilerId.cpp  line:108', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 121, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @ext/obj..ilerId.cpp  line:121', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 131, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @ext/obj..ilerId.cpp  line:131', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 142, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @ext/obj..ilerId.cpp  line:142', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 145, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @ext/obj..ilerId.cpp  line:145', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 158, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @ext/obj..ilerId.cpp  line:158', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 175, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @ext/obj..ilerId.cpp  line:175', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 180, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @ext/obj..ilerId.cpp  line:180', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 22, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @ext/obj..ilerId.cpp  line:22', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 33, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @ext/obj..ilerId.cpp  line:33', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 40, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @ext/obj..ilerId.cpp  line:40', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 46, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @ext/obj..ilerId.cpp  line:46', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 66, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @ext/obj..ilerId.cpp  line:66', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 71, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @ext/obj..ilerId.cpp  line:71', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 79, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @ext/obj..ilerId.cpp  line:79', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_PATCH', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 86, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_PATCH     @ext/obj..ilerId.cpp  line:86', 'action__tagname': 'COMPILER_VERSION_PATCH'}, {'word': 'COMPILER_VERSION_TWEAK', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 147, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_TWEAK     @build/C..mpilerId.c  line:147', 'action__tagname': 'COMPILER_VERSION_TWEAK'}, {'word': 'COMPILER_VERSION_TWEAK', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 20, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_TWEAK     @build/C..mpilerId.c  line:20', 'action__tagname': 'COMPILER_VERSION_TWEAK'}, {'word': 'COMPILER_VERSION_TWEAK', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 149, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_TWEAK     @build/C..ilerId.cpp  line:149', 'action__tagname': 'COMPILER_VERSION_TWEAK'}, {'word': 'COMPILER_VERSION_TWEAK', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 25, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_TWEAK     @build/C..ilerId.cpp  line:25', 'action__tagname': 'COMPILER_VERSION_TWEAK'}, {'word': 'COMPILER_VERSION_TWEAK', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 147, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_TWEAK     @ext/obj..mpilerId.c  line:147', 'action__tagname': 'COMPILER_VERSION_TWEAK'}, {'word': 'COMPILER_VERSION_TWEAK', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 20, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_TWEAK     @ext/obj..mpilerId.c  line:20', 'action__tagname': 'COMPILER_VERSION_TWEAK'}, {'word': 'COMPILER_VERSION_TWEAK', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 149, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_TWEAK     @ext/obj..ilerId.cpp  line:149', 'action__tagname': 'COMPILER_VERSION_TWEAK'}, {'word': 'COMPILER_VERSION_TWEAK', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 25, 'kind': 'jump_list', 'abbr': 'COMPILER_VERSION_TWEAK     @ext/obj..ilerId.cpp  line:25', 'action__tagname': 'COMPILER_VERSION_TWEAK'}, {'word': 'CalibratedCamera', 'action__pattern': '\M^    class CalibratedCamera {$', 'action__path': 'modules/core/include/camera_calibration.h', 'kind': 'jump_list', 'abbr': 'CalibratedCamera           @modules..ibration.h      class CalibratedCamera {', 'action__tagname': 'CalibratedCamera'}, {'word': 'CalibratedCamera', 'action__pattern': '\M^CalibratedCamera::CalibratedCamera(const float (&v)[16],$', 'action__path': 'modules/core/src/camera_calibration.cc', 'kind': 'jump_list', 'abbr': 'CalibratedCamera           @modules..bration.cc  CalibratedCamera::CalibratedCamera(const float (&v)[16],', 'action__tagname': 'CalibratedCamera'}, {'word': 'Camera', 'action__pattern': '\M^class Camera {$', 'action__path': 'modules/gl/include/camera.h', 'kind': 'jump_list', 'abbr': 'Camera                     @modules..e/camera.h  class Camera {', 'action__tagname': 'Camera'}, {'word': 'Camera', 'action__pattern': '\M^Camera::Camera(const glm::vec3& eye, const glm::vec3& up) :$', 'action__path': 'modules/gl/src/camera.cc', 'kind': 'jump_list', 'abbr': 'Camera                     @modules../camera.cc  Camera::Camera(const glm::vec3& eye, const glm::vec3& up) :', 'action__tagname': 'Camera'}, {'word': 'CameraCalibration', 'action__pattern': '\M^class CameraCalibration {$', 'action__path': 'modules/core/include/camera_calibration.h', 'kind': 'jump_list', 'abbr': 'CameraCalibration          @modules..ibration.h  class CameraCalibration {', 'action__tagname': 'CameraCalibration'}, {'word': 'CameraImage', 'action__pattern': '\M^CameraImage::CameraImage() : $', 'action__path': 'ext/objective_functions/xing/aig/camera_image.cc', 'kind': 'jump_list', 'abbr': 'CameraImage                @ext/obj..a_image.cc  CameraImage::CameraImage() : ', 'action__tagname': 'CameraImage'}, {'word': 'CameraImage', 'action__pattern': '\M^CameraImage::CameraImage(const cv::Mat& img, $', 'action__path': 'ext/objective_functions/xing/aig/camera_image.cc', 'kind': 'jump_list', 'abbr': 'CameraImage                @ext/obj..a_image.cc  CameraImage::CameraImage(const cv::Mat& img, ', 'action__tagname': 'CameraImage'}, {'word': 'CameraImage', 'action__pattern': '\M^CameraImage::CameraImage(const cv::Mat& img, ImageSource hint) : $', 'action__path': 'ext/objective_functions/xing/aig/camera_image.cc', 'kind': 'jump_list', 'abbr': 'CameraImage                @ext/obj..a_image.cc  CameraImage::CameraImage(const cv::Mat& img, ImageSource hint) : ', 'action__tagname': 'CameraImage'}, {'word': 'CameraImage', 'action__pattern': '\M^class CameraImage$', 'action__path': 'ext/objective_functions/xing/aig/camera_image.hpp', 'kind': 'jump_list', 'abbr': 'CameraImage                @ext/obj.._image.hpp  class CameraImage', 'action__tagname': 'CameraImage'}, {'word': 'CameraImageEvaluator', 'action__pattern': '\M^CameraImageEvaluator::CameraImageEvaluator() :$', 'action__path': 'ext/objective_functions/xing/aig/camera_image_evaluator.cc', 'kind': 'jump_list', 'abbr': 'CameraImageEvaluator       @ext/obj..aluator.cc  CameraImageEvaluator::CameraImageEvaluator() :', 'action__tagname': 'CameraImageEvaluator'}, {'word': 'CameraImageEvaluator', 'action__pattern': '\M^    CameraImageEvaluator(Args&& ...args) : CameraImageEvaluator()$', 'action__path': 'ext/objective_functions/xing/aig/camera_image_evaluator.hpp', 'kind': 'jump_list', 'abbr': 'CameraImageEvaluator       @ext/obj..luator.hpp      CameraImageEvaluator(Args&& ...args) : CameraImageEvaluator()', 'action__tagname': 'CameraImageEvaluator'}, {'word': 'CameraImageEvaluator', 'action__pattern': '\M^class CameraImageEvaluator$', 'action__path': 'ext/objective_functions/xing/aig/camera_image_evaluator.hpp', 'kind': 'jump_list', 'abbr': 'CameraImageEvaluator       @ext/obj..luator.hpp  class CameraImageEvaluator', 'action__tagname': 'CameraImageEvaluator'}, {'word': 'ChessboardDrawer', 'action__pattern': '\M^class ChessboardDrawer {$', 'action__path': 'modules/gl/include/chessboard_drawer.h', 'kind': 'jump_list', 'abbr': 'ChessboardDrawer           @modules..d_drawer.h  class ChessboardDrawer {', 'action__tagname': 'ChessboardDrawer'}, {'word': 'ChessboardDrawer', 'action__pattern': '\M^  ChessboardDrawer::ChessboardDrawer(unsigned int rows,$', 'action__path': 'modules/gl/src/chessboard_drawer.cc', 'kind': 'jump_list', 'abbr': 'ChessboardDrawer           @modules.._drawer.cc    ChessboardDrawer::ChessboardDrawer(unsigned int rows,', 'action__tagname': 'ChessboardDrawer'}, {'word': 'ClassifierLeaf', 'action__pattern': '\M^    ClassifierLeaf() : medianClass(0) {}$', 'action__path': 'modules/ml/include/classifier_leaf.h', 'kind': 'jump_list', 'abbr': 'ClassifierLeaf             @modules..ier_leaf.h      ClassifierLeaf() : medianClass(0) {}', 'action__tagname': 'ClassifierLeaf'}, {'word': 'ClassifierLeaf', 'action__pattern': '\M^ClassifierLeaf<DataType>::ClassifierLeaf(std::vector<std::shared_ptr<TrainingData<DataType, int>>> data) :$', 'action__path': 'modules/ml/include/classifier_leaf.h', 'kind': 'jump_list', 'abbr': 'ClassifierLeaf             @modules..ier_leaf.h  ClassifierLeaf<DataType>::ClassifierLeaf(std::vector<std::shared_ptr<TrainingData<DataType, int>>> data) :', 'action__tagname': 'ClassifierLeaf'}, {'word': 'ClassifierLeaf', 'action__pattern': '\M^class ClassifierLeaf {$', 'action__path': 'modules/ml/include/classifier_leaf.h', 'kind': 'jump_list', 'abbr': 'ClassifierLeaf             @modules..ier_leaf.h  class ClassifierLeaf {', 'action__tagname': 'ClassifierLeaf'}, {'word': 'Coin', 'action__pattern': '\M^typedef struct Coin$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'Coin                       @ext/lod..odepng.cpp  typedef struct Coin', 'action__tagname': 'Coin'}, {'word': 'Coin', 'action__pattern': '\M^} Coin;$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'Coin                       @ext/lod..odepng.cpp  } Coin;', 'action__tagname': 'Coin'}, {'word': 'ColorProfile', 'action__pattern': '\M^typedef struct ColorProfile$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'ColorProfile               @ext/lod..odepng.cpp  typedef struct ColorProfile', 'action__tagname': 'ColorProfile'}, {'word': 'ColorProfile', 'action__pattern': '\M^} ColorProfile;$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'ColorProfile               @ext/lod..odepng.cpp  } ColorProfile;', 'action__tagname': 'ColorProfile'}, {'word': 'ColorTree', 'action__pattern': '\M^struct ColorTree$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'ColorTree                  @ext/lod..odepng.cpp  struct ColorTree', 'action__tagname': 'ColorTree'}, {'word': 'ColorTree', 'action__pattern': '\M^typedef struct ColorTree ColorTree;$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'ColorTree                  @ext/lod..odepng.cpp  typedef struct ColorTree ColorTree;', 'action__tagname': 'ColorTree'}, {'word': 'ColourCount', 'action__pattern': '\M^    struct ColourCount$', 'action__path': 'ext/objective_functions/xing/aig/colour_detector.hpp', 'kind': 'jump_list', 'abbr': 'ColourCount                @ext/obj..tector.hpp      struct ColourCount', 'action__tagname': 'ColourCount'}, {'word': 'ColourDetector', 'action__pattern': '\M^ColourDetector::ColourDetector() : $', 'action__path': 'ext/objective_functions/xing/aig/colour_detector.cc', 'kind': 'jump_list', 'abbr': 'ColourDetector             @ext/obj..etector.cc  ColourDetector::ColourDetector() : ', 'action__tagname': 'ColourDetector'}, {'word': 'ColourDetector', 'action__pattern': '\M^class ColourDetector$', 'action__path': 'ext/objective_functions/xing/aig/colour_detector.hpp', 'kind': 'jump_list', 'abbr': 'ColourDetector             @ext/obj..tector.hpp  class ColourDetector', 'action__tagname': 'ColourDetector'}, {'word': 'Cuboid', 'action__pattern': '\M^class Cuboid {$', 'action__path': 'modules/gl/include/cuboid.h', 'kind': 'jump_list', 'abbr': 'Cuboid                     @modules..e/cuboid.h  class Cuboid {', 'action__tagname': 'Cuboid'}, {'word': 'CyclicChooserAlgorithm', 'action__pattern': '\M^    CyclicChooserAlgorithm(unsigned int l) :$', 'action__path': 'modules/ml/include/energy_function_chooser.h', 'kind': 'jump_list', 'abbr': 'CyclicChooserAlgorithm     @modules.._chooser.h      CyclicChooserAlgorithm(unsigned int l) :', 'action__tagname': 'CyclicChooserAlgorithm'}, {'word': 'CyclicChooserAlgorithm', 'action__pattern': '\M^class CyclicChooserAlgorithm {$', 'action__path': 'modules/ml/include/energy_function_chooser.h', 'kind': 'jump_list', 'abbr': 'CyclicChooserAlgorithm     @modules.._chooser.h  class CyclicChooserAlgorithm {', 'action__tagname': 'CyclicChooserAlgorithm'}, {'word': 'DEC', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 324, 'kind': 'jump_list', 'abbr': 'DEC                        @build/C..mpilerId.c  line:324', 'action__tagname': 'DEC'}, {'word': 'DEC', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 317, 'kind': 'jump_list', 'abbr': 'DEC                        @build/C..ilerId.cpp  line:317', 'action__tagname': 'DEC'}, {'word': 'DEC', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 324, 'kind': 'jump_list', 'abbr': 'DEC                        @ext/obj..mpilerId.c  line:324', 'action__tagname': 'DEC'}, {'word': 'DEC', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 317, 'kind': 'jump_list', 'abbr': 'DEC                        @ext/obj..ilerId.cpp  line:317', 'action__tagname': 'DEC'}, {'word': 'DEFAULT_TRUNC_DEPTH', 'action__pattern': '\M^    static constexpr const double DEFAULT_TRUNC_DEPTH = 100.0;$', 'action__path': 'ext/objective_functions/xing/aig/depth_overlap_evaluator.hpp', 'kind': 'jump_list', 'abbr': 'DEFAULT_TRUNC_DEPTH        @ext/obj..luator.hpp      static constexpr const double DEFAULT_TRUNC_DEPTH = 100.0;', 'action__tagname': 'DEFAULT_TRUNC_DEPTH'}, {'word': 'DEFAULT_WINDOWSIZE', 'action__path': 'ext/lodepng/lodepng.cpp', 'action__line': 2217, 'kind': 'jump_list', 'abbr': 'DEFAULT_WINDOWSIZE         @ext/lod..odepng.cpp  line:2217', 'action__tagname': 'DEFAULT_WINDOWSIZE'}, {'word': 'DEPTH_CAMERA_IMAGE', 'action__pattern': '\M^    UNKNOWN = -1, DEPTH_CAMERA_IMAGE = 0, RGB_CAMERA_IMAGE$', 'action__path': 'ext/objective_functions/xing/aig/camera_image.hpp', 'kind': 'jump_list', 'abbr': 'DEPTH_CAMERA_IMAGE         @ext/obj.._image.hpp      UNKNOWN = -1, DEPTH_CAMERA_IMAGE = 0, RGB_CAMERA_IMAGE', 'action__tagname': 'DEPTH_CAMERA_IMAGE'}, {'word': 'DETECT', 'action__pattern': '\M^enum {TRAIN, DETECT, UNKNOWN} programMode = UNKNOWN;$', 'action__path': 'ext/objective_functions/prog/colour-detect/main.cc', 'kind': 'jump_list', 'abbr': 'DETECT                     @ext/obj..ct/main.cc  enum {TRAIN, DETECT, UNKNOWN} programMode = UNKNOWN;', 'action__tagname': 'DETECT'}, {'word': 'DIGTest', 'action__pattern': '\M^class DIGTest : public ::testing::Test {$', 'action__path': 'modules/ml/test/discrete_information_gain_test.cc', 'kind': 'jump_list', 'abbr': 'DIGTest                    @modules..in_test.cc  class DIGTest : public ::testing::Test {', 'action__tagname': 'DIGTest'}, {'word': 'DISTANCEBASE', 'action__pattern': '\M^static const unsigned DISTANCEBASE[30]$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'DISTANCEBASE               @ext/lod..odepng.cpp  static const unsigned DISTANCEBASE[30]', 'action__tagname': 'DISTANCEBASE'}, {'word': 'DISTANCEEXTRA', 'action__pattern': '\M^static const unsigned DISTANCEEXTRA[30]$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'DISTANCEEXTRA              @ext/lod..odepng.cpp  static const unsigned DISTANCEEXTRA[30]', 'action__tagname': 'DISTANCEEXTRA'}, {'word': 'DepthEvaluator', 'action__pattern': '\M^struct DepthEvaluator$', 'action__path': 'ext/objective_functions/xing/aig/depth_evaluator.hpp', 'kind': 'jump_list', 'abbr': 'DepthEvaluator             @ext/obj..luator.hpp  struct DepthEvaluator', 'action__tagname': 'DepthEvaluator'}, {'word': 'DepthOverlapEvaluator', 'action__pattern': '\M^DepthOverlapEvaluator::DepthOverlapEvaluator(double trunc) :$', 'action__path': 'ext/objective_functions/xing/aig/depth_overlap_evaluator.cc', 'kind': 'jump_list', 'abbr': 'DepthOverlapEvaluator      @ext/obj..aluator.cc  DepthOverlapEvaluator::DepthOverlapEvaluator(double trunc) :', 'action__tagname': 'DepthOverlapEvaluator'}, {'word': 'DepthOverlapEvaluator', 'action__pattern': '\M^class DepthOverlapEvaluator$', 'action__path': 'ext/objective_functions/xing/aig/depth_overlap_evaluator.hpp', 'kind': 'jump_list', 'abbr': 'DepthOverlapEvaluator      @ext/obj..luator.hpp  class DepthOverlapEvaluator', 'action__tagname': 'DepthOverlapEvaluator'}, {'word': 'DepthShaderViewer', 'action__pattern': '\M^    DepthShaderViewer(GLFWwindow* w, const DepthShaderViewerOptions& o) :$', 'action__path': 'apps/depth_shader_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'DepthShaderViewer          @apps/de..rc/main.cc      DepthShaderViewer(GLFWwindow* w, const DepthShaderViewerOptions& o) :', 'action__tagname': 'DepthShaderViewer'}, {'word': 'DepthShaderViewer', 'action__pattern': '\M^class DepthShaderViewer {$', 'action__path': 'apps/depth_shader_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'DepthShaderViewer          @apps/de..rc/main.cc  class DepthShaderViewer {', 'action__tagname': 'DepthShaderViewer'}, {'word': 'DepthShaderViewerOptions', 'action__pattern': '\M^      DepthShaderViewerOptions() :$', 'action__path': 'apps/depth_shader_viewer/include/depth_shader_viewer_options.h', 'kind': 'jump_list', 'abbr': 'DepthShaderViewerOptions   @apps/de.._options.h        DepthShaderViewerOptions() :', 'action__tagname': 'DepthShaderViewerOptions'}, {'word': 'DepthShaderViewerOptions', 'action__pattern': '\M^  class DepthShaderViewerOptions$', 'action__path': 'apps/depth_shader_viewer/include/depth_shader_viewer_options.h', 'kind': 'jump_list', 'abbr': 'DepthShaderViewerOptions   @apps/de.._options.h    class DepthShaderViewerOptions', 'action__tagname': 'DepthShaderViewerOptions'}, {'word': 'DepthSplitFunction', 'action__pattern': '\M^    DepthSplitFunction() : u(0), v(0), t(0) { }$', 'action__path': 'modules/ml/include/depth_split_function.h', 'kind': 'jump_list', 'abbr': 'DepthSplitFunction         @modules..function.h      DepthSplitFunction() : u(0), v(0), t(0) { }', 'action__tagname': 'DepthSplitFunction'}, {'word': 'DepthSplitFunction', 'action__pattern': '\M^    DepthSplitFunction(const glm::vec2& u,  // First offset$', 'action__path': 'modules/ml/include/depth_split_function.h', 'kind': 'jump_list', 'abbr': 'DepthSplitFunction         @modules..function.h      DepthSplitFunction(const glm::vec2& u,  \/\/ First offset', 'action__tagname': 'DepthSplitFunction'}, {'word': 'DepthSplitFunction', 'action__pattern': '\M^class DepthSplitFunction {$', 'action__path': 'modules/ml/include/depth_split_function.h', 'kind': 'jump_list', 'abbr': 'DepthSplitFunction         @modules..function.h  class DepthSplitFunction {', 'action__tagname': 'DepthSplitFunction'}, {'word': 'DepthSplitFunctionFactory', 'action__pattern': '\M^    DepthSplitFunctionFactory(const DepthSplitFunctionFactory& d) : $', 'action__path': 'modules/ml/include/depth_split_function_factory.h', 'kind': 'jump_list', 'abbr': 'DepthSplitFunctionFactory  @modules.._factory.h      DepthSplitFunctionFactory(const DepthSplitFunctionFactory& d) : ', 'action__tagname': 'DepthSplitFunctionFactory'}, {'word': 'DepthSplitFunctionFactory', 'action__pattern': '\M^    DepthSplitFunctionFactory(int maxX, int maxY, double maxT) :$', 'action__path': 'modules/ml/include/depth_split_function_factory.h', 'kind': 'jump_list', 'abbr': 'DepthSplitFunctionFactory  @modules.._factory.h      DepthSplitFunctionFactory(int maxX, int maxY, double maxT) :', 'action__tagname': 'DepthSplitFunctionFactory'}, {'word': 'DepthSplitFunctionFactory', 'action__pattern': '\M^class DepthSplitFunctionFactory {$', 'action__path': 'modules/ml/include/depth_split_function_factory.h', 'kind': 'jump_list', 'abbr': 'DepthSplitFunctionFactory  @modules.._factory.h  class DepthSplitFunctionFactory {', 'action__tagname': 'DepthSplitFunctionFactory'}, {'word': 'DirectoryOfThisScript', 'action__pattern': '\M^def DirectoryOfThisScript():$', 'action__path': '.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'DirectoryOfThisScript      @.ycm_extra_conf.py   def DirectoryOfThisScript():', 'action__tagname': 'DirectoryOfThisScript'}, {'word': 'DirectoryOfThisScript', 'action__pattern': '\M^def DirectoryOfThisScript():$', 'action__path': 'apps/34dof_to_json/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'DirectoryOfThisScript      @apps/34..ra_conf.py  def DirectoryOfThisScript():', 'action__tagname': 'DirectoryOfThisScript'}, {'word': 'DirectoryOfThisScript', 'action__pattern': '\M^def DirectoryOfThisScript():$', 'action__path': 'apps/bmvc_project/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'DirectoryOfThisScript      @apps/bm..ra_conf.py  def DirectoryOfThisScript():', 'action__tagname': 'DirectoryOfThisScript'}, {'word': 'DirectoryOfThisScript', 'action__pattern': '\M^def DirectoryOfThisScript():$', 'action__path': 'apps/depth_shader_viewer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'DirectoryOfThisScript      @apps/de..ra_conf.py  def DirectoryOfThisScript():', 'action__tagname': 'DirectoryOfThisScript'}, {'word': 'DirectoryOfThisScript', 'action__pattern': '\M^def DirectoryOfThisScript():$', 'action__path': 'apps/edge_shader_viewer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'DirectoryOfThisScript      @apps/ed..ra_conf.py  def DirectoryOfThisScript():', 'action__tagname': 'DirectoryOfThisScript'}, {'word': 'DirectoryOfThisScript', 'action__pattern': '\M^def DirectoryOfThisScript():$', 'action__path': 'apps/gbuffer_viewer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'DirectoryOfThisScript      @apps/gb..ra_conf.py  def DirectoryOfThisScript():', 'action__tagname': 'DirectoryOfThisScript'}, {'word': 'DirectoryOfThisScript', 'action__pattern': '\M^def DirectoryOfThisScript():$', 'action__path': 'apps/multicam_mesh_viewer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'DirectoryOfThisScript      @apps/mu..ra_conf.py  def DirectoryOfThisScript():', 'action__tagname': 'DirectoryOfThisScript'}, {'word': 'DirectoryOfThisScript', 'action__pattern': '\M^def DirectoryOfThisScript():$', 'action__path': 'apps/pose_creator/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'DirectoryOfThisScript      @apps/po..ra_conf.py  def DirectoryOfThisScript():', 'action__tagname': 'DirectoryOfThisScript'}, {'word': 'DirectoryOfThisScript', 'action__pattern': '\M^def DirectoryOfThisScript():$', 'action__path': 'apps/pose_interpolator/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'DirectoryOfThisScript      @apps/po..ra_conf.py  def DirectoryOfThisScript():', 'action__tagname': 'DirectoryOfThisScript'}, {'word': 'DirectoryOfThisScript', 'action__pattern': '\M^def DirectoryOfThisScript():$', 'action__path': 'apps/pose_renderer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'DirectoryOfThisScript      @apps/po..ra_conf.py  def DirectoryOfThisScript():', 'action__tagname': 'DirectoryOfThisScript'}, {'word': 'DirectoryOfThisScript', 'action__pattern': '\M^def DirectoryOfThisScript():$', 'action__path': 'apps/pose_viewer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'DirectoryOfThisScript      @apps/po..ra_conf.py  def DirectoryOfThisScript():', 'action__tagname': 'DirectoryOfThisScript'}, {'word': 'DiscreteEntropyTest', 'action__pattern': '\M^class DiscreteEntropyTest : public ::testing::Test {$', 'action__path': 'modules/ml/test/discrete_entropy_test.cc', 'kind': 'jump_list', 'abbr': 'DiscreteEntropyTest        @modules..py_test.cc  class DiscreteEntropyTest : public ::testing::Test {', 'action__tagname': 'DiscreteEntropyTest'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/Makefile       EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/apps/34dof_to_json/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/a..n/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/apps/34dof_to_json/src/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/a..c/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/apps/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/apps/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/apps/abalone_forest/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/a..t/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/apps/abalone_forest/src/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/a..c/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/apps/bmvc_project/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/a..t/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/apps/bmvc_project/include/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/a..e/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/apps/bmvc_project/src/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/a..c/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/apps/compare_poses/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/a..s/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/apps/compare_poses/src/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/a..c/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/apps/depth_shader_viewer/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/a..r/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/apps/depth_shader_viewer/include/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/a..e/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/apps/depth_shader_viewer/src/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/a..c/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/apps/edge_shader_viewer/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/a..r/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/apps/edge_shader_viewer/include/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/a..e/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/apps/edge_shader_viewer/src/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/a..c/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/apps/gbuffer_viewer/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/a..r/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/apps/gbuffer_viewer/include/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/a..e/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/apps/gbuffer_viewer/src/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/a..c/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/apps/lrt_tester/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/a..r/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/apps/lrt_tester/src/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/a..c/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/apps/multicam_mesh_viewer/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/a..r/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/apps/multicam_mesh_viewer/include/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/a..e/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/apps/multicam_mesh_viewer/src/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/a..c/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/apps/particle_swarm_demo/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/a..o/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/apps/particle_swarm_demo/src/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/a..c/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/apps/pose_creator/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/a..r/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/apps/pose_creator/include/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/a..e/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/apps/pose_creator/src/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/a..c/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/apps/pose_interpolator/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/a..r/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/apps/pose_interpolator/include/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/a..e/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/apps/pose_interpolator/src/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/a..c/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/apps/pose_renderer/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/a..r/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/apps/pose_renderer/include/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/a..e/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/apps/pose_renderer/src/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/a..c/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/apps/pose_viewer/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/a..r/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/apps/pose_viewer/include/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/a..e/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/apps/pose_viewer/src/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/a..c/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/apps/skel_viewer/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/a..r/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/apps/skel_viewer/src/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/a..c/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/apps/sph_renderer/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/a..r/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/apps/sph_renderer/src/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/a..c/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/apps/sphere_model_maker/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/a..r/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/apps/sphere_model_maker/src/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/a..c/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/apps/sphere_model_optim/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/a..m/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/apps/sphere_model_optim/src/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/a..c/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/apps/sphere_model_renderer/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/a..r/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/apps/sphere_model_renderer/src/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/a..c/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/apps/tang_lrf/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/a..f/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/apps/tang_lrf/src/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/a..c/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/modules/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/m..s/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/modules/core/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/m..e/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/modules/core/include/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/m..e/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/modules/core/src/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/m..c/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/modules/geom/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/m..m/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/modules/geom/include/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/m..e/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/modules/geom/src/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/m..c/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/modules/gl/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/m..l/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/modules/gl/include/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/m..e/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/modules/gl/src/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/m..c/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/modules/img/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/m..g/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/modules/img/include/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/m..e/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/modules/img/src/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/m..c/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/modules/io/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/m..o/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/modules/io/include/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/m..e/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/modules/io/src/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/m..c/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/modules/ml/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/m..l/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/modules/ml/include/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/m..e/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/modules/ml/src/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/m..c/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/modules/optim/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/m..m/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/modules/optim/include/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/m..e/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'build/modules/optim/src/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @build/m..c/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'ext/objective_functions/build/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @ext/obj..d/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'ext/objective_functions/build/prog/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @ext/obj..g/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'EQUALS', 'action__pattern': '\M^EQUALS = =$', 'action__path': 'ext/objective_functions/build/xing/Makefile', 'kind': 'jump_list', 'abbr': 'EQUALS                     @ext/obj..g/Makefile  EQUALS = =', 'action__tagname': 'EQUALS'}, {'word': 'ERROR_BREAK', 'action__path': 'ext/lodepng/lodepng.cpp', 'action__line': 101, 'kind': 'jump_list', 'abbr': 'ERROR_BREAK                @ext/lod..odepng.cpp  line:101', 'action__tagname': 'ERROR_BREAK'}, {'word': 'EdgeDistanceMap', 'action__pattern': '\M^EdgeDistanceMap::EdgeDistanceMap() :$', 'action__path': 'ext/objective_functions/xing/aig/edge_distance_map.cc', 'kind': 'jump_list', 'abbr': 'EdgeDistanceMap            @ext/obj..nce_map.cc  EdgeDistanceMap::EdgeDistanceMap() :', 'action__tagname': 'EdgeDistanceMap'}, {'word': 'EdgeDistanceMap', 'action__pattern': '\M^EdgeDistanceMap::EdgeDistanceMap(const EdgeDistanceMap& rhs) : EdgeDistanceMap()$', 'action__path': 'ext/objective_functions/xing/aig/edge_distance_map.cc', 'kind': 'jump_list', 'abbr': 'EdgeDistanceMap            @ext/obj..nce_map.cc  EdgeDistanceMap::EdgeDistanceMap(const EdgeDistanceMap& rhs) : EdgeDistanceMap()', 'action__tagname': 'EdgeDistanceMap'}, {'word': 'EdgeDistanceMap', 'action__pattern': '\M^EdgeDistanceMap::EdgeDistanceMap(const cv::Mat& edgeMap) :$', 'action__path': 'ext/objective_functions/xing/aig/edge_distance_map.cc', 'kind': 'jump_list', 'abbr': 'EdgeDistanceMap            @ext/obj..nce_map.cc  EdgeDistanceMap::EdgeDistanceMap(const cv::Mat& edgeMap) :', 'action__tagname': 'EdgeDistanceMap'}, {'word': 'EdgeDistanceMap', 'action__pattern': '\M^class EdgeDistanceMap$', 'action__path': 'ext/objective_functions/xing/aig/edge_distance_map.hpp', 'kind': 'jump_list', 'abbr': 'EdgeDistanceMap            @ext/obj..ce_map.hpp  class EdgeDistanceMap', 'action__tagname': 'EdgeDistanceMap'}, {'word': 'EdgeEvaluator', 'action__pattern': '\M^struct EdgeEvaluator$', 'action__path': 'ext/objective_functions/xing/aig/edge_evaluator.hpp', 'kind': 'jump_list', 'abbr': 'EdgeEvaluator              @ext/obj..luator.hpp  struct EdgeEvaluator', 'action__tagname': 'EdgeEvaluator'}, {'word': 'EdgePointList', 'action__pattern': '\M^    typedef std::vector<cv::Point> EdgePointList;$', 'action__path': 'ext/objective_functions/xing/aig/edge_distance_map.hpp', 'kind': 'jump_list', 'abbr': 'EdgePointList              @ext/obj..ce_map.hpp      typedef std::vector<cv::Point> EdgePointList;', 'action__tagname': 'EdgePointList'}, {'word': 'EdgeShaderViewer', 'action__pattern': '\M^    EdgeShaderViewer(GLFWwindow* w, const EdgeShaderViewerOptions& o) try :$', 'action__path': 'apps/edge_shader_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'EdgeShaderViewer           @apps/ed..rc/main.cc      EdgeShaderViewer(GLFWwindow* w, const EdgeShaderViewerOptions& o) try :', 'action__tagname': 'EdgeShaderViewer'}, {'word': 'EdgeShaderViewer', 'action__pattern': '\M^class EdgeShaderViewer {$', 'action__path': 'apps/edge_shader_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'EdgeShaderViewer           @apps/ed..rc/main.cc  class EdgeShaderViewer {', 'action__tagname': 'EdgeShaderViewer'}, {'word': 'EdgeShaderViewerOptions', 'action__pattern': '\M^      EdgeShaderViewerOptions() :$', 'action__path': 'apps/edge_shader_viewer/include/edge_shader_viewer_options.h', 'kind': 'jump_list', 'abbr': 'EdgeShaderViewerOptions    @apps/ed.._options.h        EdgeShaderViewerOptions() :', 'action__tagname': 'EdgeShaderViewerOptions'}, {'word': 'EdgeShaderViewerOptions', 'action__pattern': '\M^  class EdgeShaderViewerOptions$', 'action__path': 'apps/edge_shader_viewer/include/edge_shader_viewer_options.h', 'kind': 'jump_list', 'abbr': 'EdgeShaderViewerOptions    @apps/ed.._options.h    class EdgeShaderViewerOptions', 'action__tagname': 'EdgeShaderViewerOptions'}, {'word': 'EnergyFunctionChooser', 'action__pattern': '\M^    EnergyFunctionChooser(EnergyFunction& f,$', 'action__path': 'modules/ml/include/energy_function_chooser.h', 'kind': 'jump_list', 'abbr': 'EnergyFunctionChooser      @modules.._chooser.h      EnergyFunctionChooser(EnergyFunction& f,', 'action__tagname': 'EnergyFunctionChooser'}, {'word': 'EnergyFunctionChooser', 'action__pattern': '\M^    EnergyFunctionChooser(const EnergyFunctionChooser& e) : funcs(e.funcs),$', 'action__path': 'modules/ml/include/energy_function_chooser.h', 'kind': 'jump_list', 'abbr': 'EnergyFunctionChooser      @modules.._chooser.h      EnergyFunctionChooser(const EnergyFunctionChooser& e) : funcs(e.funcs),', 'action__tagname': 'EnergyFunctionChooser'}, {'word': 'EnergyFunctionChooser', 'action__pattern': '\M^class EnergyFunctionChooser {$', 'action__path': 'modules/ml/include/energy_function_chooser.h', 'kind': 'jump_list', 'abbr': 'EnergyFunctionChooser      @modules.._chooser.h  class EnergyFunctionChooser {', 'action__tagname': 'EnergyFunctionChooser'}, {'word': 'EnergyTerm', 'action__pattern': '\M^    struct EnergyTerm$', 'action__path': 'ext/objective_functions/xing/aig/camera_image_evaluator.hpp', 'kind': 'jump_list', 'abbr': 'EnergyTerm                 @ext/obj..luator.hpp      struct EnergyTerm', 'action__tagname': 'EnergyTerm'}, {'word': 'Evaluate', 'action__pattern': '\M^  virtual bool Evaluate(const double* parameters,$', 'action__path': 'apps/sphere_model_optim/src/main.cc', 'kind': 'jump_list', 'abbr': 'Evaluate                   @apps/sp..rc/main.cc    virtual bool Evaluate(const double* parameters,', 'action__tagname': 'Evaluate'}, {'word': 'FAIL', 'action__pattern': '\M^    FAIL() << "Test is not implemented.";$', 'action__path': 'ext/objective_functions/create', 'kind': 'jump_list', 'abbr': 'FAIL                       @ext/obj..ons/create      FAIL() << "Test is not implemented.";', 'action__tagname': 'FAIL'}, {'word': 'FIRST_LENGTH_CODE_INDEX', 'action__path': 'ext/lodepng/lodepng.cpp', 'action__line': 447, 'kind': 'jump_list', 'abbr': 'FIRST_LENGTH_CODE_INDEX    @ext/lod..odepng.cpp  line:447', 'action__tagname': 'FIRST_LENGTH_CODE_INDEX'}, {'word': 'Finger', 'action__pattern': '\M^    enum Finger {$', 'action__path': 'modules/gl/include/quadric_hand.h', 'kind': 'jump_list', 'abbr': 'Finger                     @modules..ric_hand.h      enum Finger {', 'action__tagname': 'Finger'}, {'word': 'FlagsForFile', 'action__pattern': '\M^def FlagsForFile( filename, **kwargs ):$', 'action__path': '.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'FlagsForFile               @.ycm_extra_conf.py   def FlagsForFile( filename, **kwargs ):', 'action__tagname': 'FlagsForFile'}, {'word': 'FlagsForFile', 'action__pattern': '\M^def FlagsForFile( filename, **kwargs ):$', 'action__path': 'apps/34dof_to_json/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'FlagsForFile               @apps/34..ra_conf.py  def FlagsForFile( filename, **kwargs ):', 'action__tagname': 'FlagsForFile'}, {'word': 'FlagsForFile', 'action__pattern': '\M^def FlagsForFile( filename, **kwargs ):$', 'action__path': 'apps/bmvc_project/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'FlagsForFile               @apps/bm..ra_conf.py  def FlagsForFile( filename, **kwargs ):', 'action__tagname': 'FlagsForFile'}, {'word': 'FlagsForFile', 'action__pattern': '\M^def FlagsForFile( filename, **kwargs ):$', 'action__path': 'apps/depth_shader_viewer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'FlagsForFile               @apps/de..ra_conf.py  def FlagsForFile( filename, **kwargs ):', 'action__tagname': 'FlagsForFile'}, {'word': 'FlagsForFile', 'action__pattern': '\M^def FlagsForFile( filename, **kwargs ):$', 'action__path': 'apps/edge_shader_viewer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'FlagsForFile               @apps/ed..ra_conf.py  def FlagsForFile( filename, **kwargs ):', 'action__tagname': 'FlagsForFile'}, {'word': 'FlagsForFile', 'action__pattern': '\M^def FlagsForFile( filename, **kwargs ):$', 'action__path': 'apps/gbuffer_viewer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'FlagsForFile               @apps/gb..ra_conf.py  def FlagsForFile( filename, **kwargs ):', 'action__tagname': 'FlagsForFile'}, {'word': 'FlagsForFile', 'action__pattern': '\M^def FlagsForFile( filename, **kwargs ):$', 'action__path': 'apps/multicam_mesh_viewer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'FlagsForFile               @apps/mu..ra_conf.py  def FlagsForFile( filename, **kwargs ):', 'action__tagname': 'FlagsForFile'}, {'word': 'FlagsForFile', 'action__pattern': '\M^def FlagsForFile( filename, **kwargs ):$', 'action__path': 'apps/pose_creator/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'FlagsForFile               @apps/po..ra_conf.py  def FlagsForFile( filename, **kwargs ):', 'action__tagname': 'FlagsForFile'}, {'word': 'FlagsForFile', 'action__pattern': '\M^def FlagsForFile( filename, **kwargs ):$', 'action__path': 'apps/pose_interpolator/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'FlagsForFile               @apps/po..ra_conf.py  def FlagsForFile( filename, **kwargs ):', 'action__tagname': 'FlagsForFile'}, {'word': 'FlagsForFile', 'action__pattern': '\M^def FlagsForFile( filename, **kwargs ):$', 'action__path': 'apps/pose_renderer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'FlagsForFile               @apps/po..ra_conf.py  def FlagsForFile( filename, **kwargs ):', 'action__tagname': 'FlagsForFile'}, {'word': 'FlagsForFile', 'action__pattern': '\M^def FlagsForFile( filename, **kwargs ):$', 'action__path': 'apps/pose_viewer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'FlagsForFile               @apps/po..ra_conf.py  def FlagsForFile( filename, **kwargs ):', 'action__tagname': 'FlagsForFile'}, {'word': 'GBuffer', 'action__pattern': '\M^class GBuffer {$', 'action__path': 'modules/gl/include/gbuffer.h', 'kind': 'jump_list', 'abbr': 'GBuffer                    @modules../gbuffer.h  class GBuffer {', 'action__tagname': 'GBuffer'}, {'word': 'GBuffer', 'action__pattern': '\M^GBuffer::GBuffer(unsigned int width, unsigned int height)$', 'action__path': 'modules/gl/src/gbuffer.cc', 'kind': 'jump_list', 'abbr': 'GBuffer                    @modules..gbuffer.cc  GBuffer::GBuffer(unsigned int width, unsigned int height)', 'action__tagname': 'GBuffer'}, {'word': 'GBufferViewer', 'action__pattern': '\M^    GBufferViewer(GLFWwindow* w, const GBufferViewerOptions& o) try :$', 'action__path': 'apps/gbuffer_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'GBufferViewer              @apps/gb..rc/main.cc      GBufferViewer(GLFWwindow* w, const GBufferViewerOptions& o) try :', 'action__tagname': 'GBufferViewer'}, {'word': 'GBufferViewer', 'action__pattern': '\M^class GBufferViewer {$', 'action__path': 'apps/gbuffer_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'GBufferViewer              @apps/gb..rc/main.cc  class GBufferViewer {', 'action__tagname': 'GBufferViewer'}, {'word': 'GBufferViewerOptions', 'action__pattern': '\M^      GBufferViewerOptions() :$', 'action__path': 'apps/gbuffer_viewer/include/gbuffer_viewer_options.h', 'kind': 'jump_list', 'abbr': 'GBufferViewerOptions       @apps/gb.._options.h        GBufferViewerOptions() :', 'action__tagname': 'GBufferViewerOptions'}, {'word': 'GBufferViewerOptions', 'action__pattern': '\M^  class GBufferViewerOptions$', 'action__path': 'apps/gbuffer_viewer/include/gbuffer_viewer_options.h', 'kind': 'jump_list', 'abbr': 'GBufferViewerOptions       @apps/gb.._options.h    class GBufferViewerOptions', 'action__tagname': 'GBufferViewerOptions'}, {'word': 'GLM_FORCE_RADIANS', 'action__path': 'apps/depth_shader_viewer/src/main.cc', 'action__line': 6, 'kind': 'jump_list', 'abbr': 'GLM_FORCE_RADIANS          @apps/de..rc/main.cc  line:6', 'action__tagname': 'GLM_FORCE_RADIANS'}, {'word': 'GLM_FORCE_RADIANS', 'action__path': 'apps/pose_interpolator/src/main.cc', 'action__line': 8, 'kind': 'jump_list', 'abbr': 'GLM_FORCE_RADIANS          @apps/po..rc/main.cc  line:8', 'action__tagname': 'GLM_FORCE_RADIANS'}, {'word': 'GLM_FORCE_RADIANS', 'action__path': 'apps/pose_renderer/src/main.cc', 'action__line': 1, 'kind': 'jump_list', 'abbr': 'GLM_FORCE_RADIANS          @apps/po..rc/main.cc  line:1', 'action__tagname': 'GLM_FORCE_RADIANS'}, {'word': 'GLM_FORCE_RADIANS', 'action__path': 'apps/pose_renderer/src/pose_renderer.cc', 'action__line': 9, 'kind': 'jump_list', 'abbr': 'GLM_FORCE_RADIANS          @apps/po..enderer.cc  line:9', 'action__tagname': 'GLM_FORCE_RADIANS'}, {'word': 'GLM_FORCE_RADIANS', 'action__path': 'apps/sph_renderer/src/main.cc', 'action__line': 6, 'kind': 'jump_list', 'abbr': 'GLM_FORCE_RADIANS          @apps/sp..rc/main.cc  line:6', 'action__tagname': 'GLM_FORCE_RADIANS'}, {'word': 'GLM_FORCE_RADIANS', 'action__path': 'apps/sphere_model_maker/src/main.cc', 'action__line': 5, 'kind': 'jump_list', 'abbr': 'GLM_FORCE_RADIANS          @apps/sp..rc/main.cc  line:5', 'action__tagname': 'GLM_FORCE_RADIANS'}, {'word': 'GLM_FORCE_RADIANS', 'action__path': 'apps/sphere_model_optim/src/main.cc', 'action__line': 8, 'kind': 'jump_list', 'abbr': 'GLM_FORCE_RADIANS          @apps/sp..rc/main.cc  line:8', 'action__tagname': 'GLM_FORCE_RADIANS'}, {'word': 'GLM_FORCE_RADIANS', 'action__path': 'apps/sphere_model_renderer/src/main.cc', 'action__line': 6, 'kind': 'jump_list', 'abbr': 'GLM_FORCE_RADIANS          @apps/sp..rc/main.cc  line:6', 'action__tagname': 'GLM_FORCE_RADIANS'}, {'word': 'GLM_FORCE_RADIANS', 'action__path': 'modules/core/include/camera_calibration.h', 'action__line': 5, 'kind': 'jump_list', 'abbr': 'GLM_FORCE_RADIANS          @modules..ibration.h  line:5', 'action__tagname': 'GLM_FORCE_RADIANS'}, {'word': 'GLM_FORCE_RADIANS', 'action__path': 'modules/core/include/old_joint.h', 'action__line': 18, 'kind': 'jump_list', 'abbr': 'GLM_FORCE_RADIANS          @modules..ld_joint.h  line:18', 'action__tagname': 'GLM_FORCE_RADIANS'}, {'word': 'GLM_FORCE_RADIANS', 'action__path': 'modules/core/include/old_pose.h', 'action__line': 7, 'kind': 'jump_list', 'abbr': 'GLM_FORCE_RADIANS          @modules..old_pose.h  line:7', 'action__tagname': 'GLM_FORCE_RADIANS'}, {'word': 'GLM_FORCE_RADIANS', 'action__path': 'modules/core/include/pose.h', 'action__line': 6, 'kind': 'jump_list', 'abbr': 'GLM_FORCE_RADIANS          @modules..ude/pose.h  line:6', 'action__tagname': 'GLM_FORCE_RADIANS'}, {'word': 'GLM_FORCE_RADIANS', 'action__path': 'modules/core/src/pose.cc', 'action__line': 2, 'kind': 'jump_list', 'abbr': 'GLM_FORCE_RADIANS          @modules..rc/pose.cc  line:2', 'action__tagname': 'GLM_FORCE_RADIANS'}, {'word': 'GLM_FORCE_RADIANS', 'action__path': 'modules/gl/include/mesh.h', 'action__line': 23, 'kind': 'jump_list', 'abbr': 'GLM_FORCE_RADIANS          @modules..ude/mesh.h  line:23', 'action__tagname': 'GLM_FORCE_RADIANS'}, {'word': 'GLM_FORCE_RADIANS', 'action__path': 'modules/gl/include/pipeline.h', 'action__line': 3, 'kind': 'jump_list', 'abbr': 'GLM_FORCE_RADIANS          @modules..pipeline.h  line:3', 'action__tagname': 'GLM_FORCE_RADIANS'}, {'word': 'GLM_FORCE_RADIANS', 'action__path': 'modules/gl/include/shader_program.h', 'action__line': 6, 'kind': 'jump_list', 'abbr': 'GLM_FORCE_RADIANS          @modules.._program.h  line:6', 'action__tagname': 'GLM_FORCE_RADIANS'}, {'word': 'GLM_FORCE_RADIANS', 'action__path': 'modules/gl/include/surface.h', 'action__line': 14, 'kind': 'jump_list', 'abbr': 'GLM_FORCE_RADIANS          @modules../surface.h  line:14', 'action__tagname': 'GLM_FORCE_RADIANS'}, {'word': 'GLM_FORCE_RADIANS', 'action__path': 'modules/gl/include/tiler.h', 'action__line': 11, 'kind': 'jump_list', 'abbr': 'GLM_FORCE_RADIANS          @modules..de/tiler.h  line:11', 'action__tagname': 'GLM_FORCE_RADIANS'}, {'word': 'GLM_FORCE_RADIANS', 'action__path': 'modules/gl/src/camera.cc', 'action__line': 3, 'kind': 'jump_list', 'abbr': 'GLM_FORCE_RADIANS          @modules../camera.cc  line:3', 'action__tagname': 'GLM_FORCE_RADIANS'}, {'word': 'GLM_FORCE_RADIANS', 'action__path': 'modules/gl/src/shader_program.cc', 'action__line': 6, 'kind': 'jump_list', 'abbr': 'GLM_FORCE_RADIANS          @modules..program.cc  line:6', 'action__tagname': 'GLM_FORCE_RADIANS'}, {'word': 'GLM_FORCE_RADIANS', 'action__path': 'modules/gl/src/tiler.cc', 'action__line': 3, 'kind': 'jump_list', 'abbr': 'GLM_FORCE_RADIANS          @modules..c/tiler.cc  line:3', 'action__tagname': 'GLM_FORCE_RADIANS'}, {'word': 'GLM_FORCE_RADIANS', 'action__path': 'modules/io/include/json_reader_utils.h', 'action__line': 4, 'kind': 'jump_list', 'abbr': 'GLM_FORCE_RADIANS          @modules..er_utils.h  line:4', 'action__tagname': 'GLM_FORCE_RADIANS'}, {'word': 'GLM_FORCE_RADIANS', 'action__path': 'modules/io/include/json_writer_utils.h', 'action__line': 4, 'kind': 'jump_list', 'abbr': 'GLM_FORCE_RADIANS          @modules..er_utils.h  line:4', 'action__tagname': 'GLM_FORCE_RADIANS'}, {'word': 'GLOBAL_POS_X', 'action__pattern': '\M^    const static unsigned int GLOBAL_POS_X = 0;$', 'action__path': 'modules/gl/include/quadric_hand.h', 'kind': 'jump_list', 'abbr': 'GLOBAL_POS_X               @modules..ric_hand.h      const static unsigned int GLOBAL_POS_X = 0;', 'action__tagname': 'GLOBAL_POS_X'}, {'word': 'GLOBAL_POS_Y', 'action__pattern': '\M^    const static unsigned int GLOBAL_POS_Y = 1;$', 'action__path': 'modules/gl/include/quadric_hand.h', 'kind': 'jump_list', 'abbr': 'GLOBAL_POS_Y               @modules..ric_hand.h      const static unsigned int GLOBAL_POS_Y = 1;', 'action__tagname': 'GLOBAL_POS_Y'}, {'word': 'GLOBAL_POS_Z', 'action__pattern': '\M^    const static unsigned int GLOBAL_POS_Z = 2;$', 'action__path': 'modules/gl/include/quadric_hand.h', 'kind': 'jump_list', 'abbr': 'GLOBAL_POS_Z               @modules..ric_hand.h      const static unsigned int GLOBAL_POS_Z = 2;', 'action__tagname': 'GLOBAL_POS_Z'}, {'word': 'GLOBAL_ROT_W', 'action__pattern': '\M^    const static unsigned int GLOBAL_ROT_W = 6;$', 'action__path': 'modules/gl/include/quadric_hand.h', 'kind': 'jump_list', 'abbr': 'GLOBAL_ROT_W               @modules..ric_hand.h      const static unsigned int GLOBAL_ROT_W = 6;', 'action__tagname': 'GLOBAL_ROT_W'}, {'word': 'GLOBAL_ROT_X', 'action__pattern': '\M^    const static unsigned int GLOBAL_ROT_X = 3;$', 'action__path': 'modules/gl/include/quadric_hand.h', 'kind': 'jump_list', 'abbr': 'GLOBAL_ROT_X               @modules..ric_hand.h      const static unsigned int GLOBAL_ROT_X = 3;', 'action__tagname': 'GLOBAL_ROT_X'}, {'word': 'GLOBAL_ROT_Y', 'action__pattern': '\M^    const static unsigned int GLOBAL_ROT_Y = 4;$', 'action__path': 'modules/gl/include/quadric_hand.h', 'kind': 'jump_list', 'abbr': 'GLOBAL_ROT_Y               @modules..ric_hand.h      const static unsigned int GLOBAL_ROT_Y = 4;', 'action__tagname': 'GLOBAL_ROT_Y'}, {'word': 'GLOBAL_ROT_Z', 'action__pattern': '\M^    const static unsigned int GLOBAL_ROT_Z = 5;$', 'action__path': 'modules/gl/include/quadric_hand.h', 'kind': 'jump_list', 'abbr': 'GLOBAL_ROT_Z               @modules..ric_hand.h      const static unsigned int GLOBAL_ROT_Z = 5;', 'action__tagname': 'GLOBAL_ROT_Z'}, {'word': 'GLSphere', 'action__pattern': '\M^class GLSphere$', 'action__path': 'modules/gl/include/gl_sphere.h', 'kind': 'jump_list', 'abbr': 'GLSphere                   @modules..l_sphere.h  class GLSphere', 'action__tagname': 'GLSphere'}, {'word': 'GLSphere', 'action__pattern': '\M^GLSphere::GLSphere(double radius, unsigned int rings, unsigned int slices) {$', 'action__path': 'modules/gl/src/gl_sphere.cc', 'kind': 'jump_list', 'abbr': 'GLSphere                   @modules.._sphere.cc  GLSphere::GLSphere(double radius, unsigned int rings, unsigned int slices) {', 'action__tagname': 'GLSphere'}, {'word': 'GLUtility', 'action__pattern': '\M^class GLUtility {$', 'action__path': 'modules/gl/include/gl_utility.h', 'kind': 'jump_list', 'abbr': 'GLUtility                  @modules.._utility.h  class GLUtility {', 'action__tagname': 'GLUtility'}, {'word': 'GetCompilationInfoForFile', 'action__pattern': '\M^def GetCompilationInfoForFile( filename ):$', 'action__path': '.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'GetCompilationInfoForFile  @.ycm_extra_conf.py   def GetCompilationInfoForFile( filename ):', 'action__tagname': 'GetCompilationInfoForFile'}, {'word': 'GetCompilationInfoForFile', 'action__pattern': '\M^def GetCompilationInfoForFile( filename ):$', 'action__path': 'apps/34dof_to_json/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'GetCompilationInfoForFile  @apps/34..ra_conf.py  def GetCompilationInfoForFile( filename ):', 'action__tagname': 'GetCompilationInfoForFile'}, {'word': 'GetCompilationInfoForFile', 'action__pattern': '\M^def GetCompilationInfoForFile( filename ):$', 'action__path': 'apps/bmvc_project/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'GetCompilationInfoForFile  @apps/bm..ra_conf.py  def GetCompilationInfoForFile( filename ):', 'action__tagname': 'GetCompilationInfoForFile'}, {'word': 'GetCompilationInfoForFile', 'action__pattern': '\M^def GetCompilationInfoForFile( filename ):$', 'action__path': 'apps/depth_shader_viewer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'GetCompilationInfoForFile  @apps/de..ra_conf.py  def GetCompilationInfoForFile( filename ):', 'action__tagname': 'GetCompilationInfoForFile'}, {'word': 'GetCompilationInfoForFile', 'action__pattern': '\M^def GetCompilationInfoForFile( filename ):$', 'action__path': 'apps/edge_shader_viewer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'GetCompilationInfoForFile  @apps/ed..ra_conf.py  def GetCompilationInfoForFile( filename ):', 'action__tagname': 'GetCompilationInfoForFile'}, {'word': 'GetCompilationInfoForFile', 'action__pattern': '\M^def GetCompilationInfoForFile( filename ):$', 'action__path': 'apps/gbuffer_viewer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'GetCompilationInfoForFile  @apps/gb..ra_conf.py  def GetCompilationInfoForFile( filename ):', 'action__tagname': 'GetCompilationInfoForFile'}, {'word': 'GetCompilationInfoForFile', 'action__pattern': '\M^def GetCompilationInfoForFile( filename ):$', 'action__path': 'apps/multicam_mesh_viewer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'GetCompilationInfoForFile  @apps/mu..ra_conf.py  def GetCompilationInfoForFile( filename ):', 'action__tagname': 'GetCompilationInfoForFile'}, {'word': 'GetCompilationInfoForFile', 'action__pattern': '\M^def GetCompilationInfoForFile( filename ):$', 'action__path': 'apps/pose_creator/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'GetCompilationInfoForFile  @apps/po..ra_conf.py  def GetCompilationInfoForFile( filename ):', 'action__tagname': 'GetCompilationInfoForFile'}, {'word': 'GetCompilationInfoForFile', 'action__pattern': '\M^def GetCompilationInfoForFile( filename ):$', 'action__path': 'apps/pose_interpolator/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'GetCompilationInfoForFile  @apps/po..ra_conf.py  def GetCompilationInfoForFile( filename ):', 'action__tagname': 'GetCompilationInfoForFile'}, {'word': 'GetCompilationInfoForFile', 'action__pattern': '\M^def GetCompilationInfoForFile( filename ):$', 'action__path': 'apps/pose_renderer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'GetCompilationInfoForFile  @apps/po..ra_conf.py  def GetCompilationInfoForFile( filename ):', 'action__tagname': 'GetCompilationInfoForFile'}, {'word': 'GetCompilationInfoForFile', 'action__pattern': '\M^def GetCompilationInfoForFile( filename ):$', 'action__path': 'apps/pose_viewer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'GetCompilationInfoForFile  @apps/po..ra_conf.py  def GetCompilationInfoForFile( filename ):', 'action__tagname': 'GetCompilationInfoForFile'}, {'word': 'HASH_BIT_MASK', 'action__pattern': '\M^static const unsigned HASH_BIT_MASK = 65535;$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'HASH_BIT_MASK              @ext/lod..odepng.cpp  static const unsigned HASH_BIT_MASK = 65535;', 'action__tagname': 'HASH_BIT_MASK'}, {'word': 'HASH_NUM_CHARACTERS', 'action__pattern': '\M^static const unsigned HASH_NUM_CHARACTERS = 3;$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'HASH_NUM_CHARACTERS        @ext/lod..odepng.cpp  static const unsigned HASH_NUM_CHARACTERS = 3;', 'action__tagname': 'HASH_NUM_CHARACTERS'}, {'word': 'HASH_NUM_VALUES', 'action__pattern': '\M^static const unsigned HASH_NUM_VALUES = 65536;$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'HASH_NUM_VALUES            @ext/lod..odepng.cpp  static const unsigned HASH_NUM_VALUES = 65536;', 'action__tagname': 'HASH_NUM_VALUES'}, {'word': 'HASH_SHIFT', 'action__pattern': '\M^static const unsigned HASH_SHIFT = 2;$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'HASH_SHIFT                 @ext/lod..odepng.cpp  static const unsigned HASH_SHIFT = 2;', 'action__tagname': 'HASH_SHIFT'}, {'word': 'HEX', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 335, 'kind': 'jump_list', 'abbr': 'HEX                        @build/C..mpilerId.c  line:335', 'action__tagname': 'HEX'}, {'word': 'HEX', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 328, 'kind': 'jump_list', 'abbr': 'HEX                        @build/C..ilerId.cpp  line:328', 'action__tagname': 'HEX'}, {'word': 'HEX', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 335, 'kind': 'jump_list', 'abbr': 'HEX                        @ext/obj..mpilerId.c  line:335', 'action__tagname': 'HEX'}, {'word': 'HEX', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 328, 'kind': 'jump_list', 'abbr': 'HEX                        @ext/obj..ilerId.cpp  line:328', 'action__tagname': 'HEX'}, {'word': 'HandPose27DOF', 'action__pattern': '\M^    explicit HandPose27DOF(const Pose<glm::quat>& p) {$', 'action__path': 'modules/core/include/hand_pose_27_dof.h', 'kind': 'jump_list', 'abbr': 'HandPose27DOF              @modules..e_27_dof.h      explicit HandPose27DOF(const Pose<glm::quat>& p) {', 'action__tagname': 'HandPose27DOF'}, {'word': 'HandPose27DOF', 'action__pattern': '\M^    explicit HandPose27DOF(const std::vector<double>& v) {$', 'action__path': 'modules/core/include/hand_pose_27_dof.h', 'kind': 'jump_list', 'abbr': 'HandPose27DOF              @modules..e_27_dof.h      explicit HandPose27DOF(const std::vector<double>& v) {', 'action__tagname': 'HandPose27DOF'}, {'word': 'HandPose27DOF', 'action__pattern': '\M^class HandPose27DOF : public Pose<glm::quat> {$', 'action__path': 'modules/core/include/hand_pose_27_dof.h', 'kind': 'jump_list', 'abbr': 'HandPose27DOF              @modules..e_27_dof.h  class HandPose27DOF : public Pose<glm::quat> {', 'action__tagname': 'HandPose27DOF'}, {'word': 'HandPose27DOF', 'action__pattern': '\M^HandPose27DOF::HandPose27DOF(const std::vector<double>& v) {$', 'action__path': 'modules/core/src/hand_pose_27_dof.cc', 'kind': 'jump_list', 'abbr': 'HandPose27DOF              @modules.._27_dof.cc  HandPose27DOF::HandPose27DOF(const std::vector<double>& v) {', 'action__tagname': 'HandPose27DOF'}, {'word': 'HandPose34DOF', 'action__pattern': '\M^class HandPose34DOF : public Pose<T> {$', 'action__path': 'modules/core/include/hand_pose_34_dof.h', 'kind': 'jump_list', 'abbr': 'HandPose34DOF              @modules..e_34_dof.h  class HandPose34DOF : public Pose<T> {', 'action__tagname': 'HandPose34DOF'}, {'word': 'HandPose34DOF', 'action__pattern': '\M^HandPose34DOF::HandPose34DOF(const std::vector<double>& v) {$', 'action__path': 'modules/core/src/hand_pose_34_dof.cc', 'kind': 'jump_list', 'abbr': 'HandPose34DOF              @modules.._34_dof.cc  HandPose34DOF::HandPose34DOF(const std::vector<double>& v) {', 'action__tagname': 'HandPose34DOF'}, {'word': 'Hash', 'action__pattern': '\M^typedef struct Hash$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'Hash                       @ext/lod..odepng.cpp  typedef struct Hash', 'action__tagname': 'Hash'}, {'word': 'Hash', 'action__pattern': '\M^} Hash;$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'Hash                       @ext/lod..odepng.cpp  } Hash;', 'action__tagname': 'Hash'}, {'word': 'Histogram2D', 'action__pattern': '\M^class Histogram2D {$', 'action__path': 'modules/core/include/histogram2d.h', 'kind': 'jump_list', 'abbr': 'Histogram2D                @modules..togram2d.h  class Histogram2D {', 'action__tagname': 'Histogram2D'}, {'word': 'Histogram2D', 'action__pattern': '\M^Histogram2D::Histogram2D(const std::string& filename) : total(0),$', 'action__path': 'modules/core/src/histogram2d.cc', 'kind': 'jump_list', 'abbr': 'Histogram2D                @modules..ogram2d.cc  Histogram2D::Histogram2D(const std::string& filename) : total(0),', 'action__tagname': 'Histogram2D'}, {'word': 'HuffmanTree', 'action__pattern': '\M^typedef struct HuffmanTree$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'HuffmanTree                @ext/lod..odepng.cpp  typedef struct HuffmanTree', 'action__tagname': 'HuffmanTree'}, {'word': 'HuffmanTree', 'action__pattern': '\M^} HuffmanTree;$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'HuffmanTree                @ext/lod..odepng.cpp  } HuffmanTree;', 'action__tagname': 'HuffmanTree'}, {'word': 'HuffmanTree_cleanup', 'action__pattern': '\M^static void HuffmanTree_cleanup(HuffmanTree* tree)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'HuffmanTree_cleanup        @ext/lod..odepng.cpp  static void HuffmanTree_cleanup(HuffmanTree* tree)', 'action__tagname': 'HuffmanTree_cleanup'}, {'word': 'HuffmanTree_getCode', 'action__pattern': '\M^static unsigned HuffmanTree_getCode(const HuffmanTree* tree, unsigned index)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'HuffmanTree_getCode        @ext/lod..odepng.cpp  static unsigned HuffmanTree_getCode(const HuffmanTree* tree, unsigned index)', 'action__tagname': 'HuffmanTree_getCode'}, {'word': 'HuffmanTree_getLength', 'action__pattern': '\M^static unsigned HuffmanTree_getLength(const HuffmanTree* tree, unsigned index)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'HuffmanTree_getLength      @ext/lod..odepng.cpp  static unsigned HuffmanTree_getLength(const HuffmanTree* tree, unsigned index)', 'action__tagname': 'HuffmanTree_getLength'}, {'word': 'HuffmanTree_init', 'action__pattern': '\M^static void HuffmanTree_init(HuffmanTree* tree)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'HuffmanTree_init           @ext/lod..odepng.cpp  static void HuffmanTree_init(HuffmanTree* tree)', 'action__tagname': 'HuffmanTree_init'}, {'word': 'HuffmanTree_make2DTree', 'action__pattern': '\M^static unsigned HuffmanTree_make2DTree(HuffmanTree* tree)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'HuffmanTree_make2DTree     @ext/lod..odepng.cpp  static unsigned HuffmanTree_make2DTree(HuffmanTree* tree)', 'action__tagname': 'HuffmanTree_make2DTree'}, {'word': 'HuffmanTree_makeFromFrequencies', 'action__pattern': '\M^static unsigned HuffmanTree_makeFromFrequencies(HuffmanTree* tree, const unsigned* frequencies,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'HuffmanT..FromFrequencies  @ext/lod..odepng.cpp  static unsigned HuffmanTree_makeFromFrequencies(HuffmanTree* tree, const unsigned* frequencies,', 'action__tagname': 'HuffmanTree_makeFromFrequencies'}, {'word': 'HuffmanTree_makeFromLengths', 'action__pattern': '\M^static unsigned HuffmanTree_makeFromLengths(HuffmanTree* tree, const unsigned* bitlen,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'HuffmanT..makeFromLengths  @ext/lod..odepng.cpp  static unsigned HuffmanTree_makeFromLengths(HuffmanTree* tree, const unsigned* bitlen,', 'action__tagname': 'HuffmanTree_makeFromLengths'}, {'word': 'HuffmanTree_makeFromLengths2', 'action__pattern': '\M^static unsigned HuffmanTree_makeFromLengths2(HuffmanTree* tree)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'HuffmanT..akeFromLengths2  @ext/lod..odepng.cpp  static unsigned HuffmanTree_makeFromLengths2(HuffmanTree* tree)', 'action__tagname': 'HuffmanTree_makeFromLengths2'}, {'word': 'HumanEvaPoseReader', 'action__pattern': '\M^class HumanEvaPoseReader : public PoseReader<glm::vec3> {$', 'action__path': 'modules/io/include/humaneva_pose_reader.h', 'kind': 'jump_list', 'abbr': 'HumanEvaPoseReader         @modules..e_reader.h  class HumanEvaPoseReader : public PoseReader<glm::vec3> {', 'action__tagname': 'HumanEvaPoseReader'}, {'word': 'HumanEvaPoseReader', 'action__pattern': '\M^HumanEvaPoseReader::HumanEvaPoseReader(const std::string& filename) {$', 'action__path': 'modules/io/src/humaneva_pose_reader.cc', 'kind': 'jump_list', 'abbr': 'HumanEvaPoseReader         @modules.._reader.cc  HumanEvaPoseReader::HumanEvaPoseReader(const std::string& filename) {', 'action__tagname': 'HumanEvaPoseReader'}, {'word': 'HysteresisThresholder', 'action__pattern': '\M^  class HysteresisThresholder$', 'action__path': 'modules/img/include/hysteresis_thresholder.h', 'kind': 'jump_list', 'abbr': 'HysteresisThresholder      @modules..esholder.h    class HysteresisThresholder', 'action__tagname': 'HysteresisThresholder'}, {'word': 'HysteresisThresholder', 'action__pattern': '\M^  HysteresisThresholder::HysteresisThresholder(float min,$', 'action__path': 'modules/img/src/hysteresis_thresholder.cc', 'kind': 'jump_list', 'abbr': 'HysteresisThresholder      @modules..sholder.cc    HysteresisThresholder::HysteresisThresholder(float min,', 'action__tagname': 'HysteresisThresholder'}, {'word': 'ID_VOID_MAIN', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 9, 'kind': 'jump_list', 'abbr': 'ID_VOID_MAIN               @build/C..mpilerId.c  line:9', 'action__tagname': 'ID_VOID_MAIN'}, {'word': 'ID_VOID_MAIN', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 9, 'kind': 'jump_list', 'abbr': 'ID_VOID_MAIN               @ext/obj..mpilerId.c  line:9', 'action__tagname': 'ID_VOID_MAIN'}, {'word': 'INDEX', 'action__pattern': '\M^      INDEX = 0,$', 'action__path': 'modules/gl/include/quadric_hand.h', 'kind': 'jump_list', 'abbr': 'INDEX                      @modules..ric_hand.h        INDEX = 0,', 'action__tagname': 'INDEX'}, {'word': 'INVALID_MATERIAL', 'action__pattern': '\M^    static const int INVALID_MATERIAL = 0xFFFFFFFF;$', 'action__path': 'modules/gl/include/mesh.h', 'kind': 'jump_list', 'abbr': 'INVALID_MATERIAL           @modules..ude/mesh.h      static const int INVALID_MATERIAL = 0xFFFFFFFF;', 'action__tagname': 'INVALID_MATERIAL'}, {'word': 'INVALID_OGL_VALUE', 'action__pattern': '\M^    static const int INVALID_OGL_VALUE = 0xFFFFFFFF;$', 'action__path': 'modules/gl/include/mesh.h', 'kind': 'jump_list', 'abbr': 'INVALID_OGL_VALUE          @modules..ude/mesh.h      static const int INVALID_OGL_VALUE = 0xFFFFFFFF;', 'action__tagname': 'INVALID_OGL_VALUE'}, {'word': 'ImageSize', 'action__pattern': '\M^  constexpr explicit ImageSize(unsigned int w, unsigned int h)$', 'action__path': 'modules/core/include/image.h', 'kind': 'jump_list', 'abbr': 'ImageSize                  @modules..de/image.h    constexpr explicit ImageSize(unsigned int w, unsigned int h)', 'action__tagname': 'ImageSize'}, {'word': 'ImageSize', 'action__pattern': '\M^struct ImageSize {$', 'action__path': 'modules/core/include/image.h', 'kind': 'jump_list', 'abbr': 'ImageSize                  @modules..de/image.h  struct ImageSize {', 'action__tagname': 'ImageSize'}, {'word': 'ImageSource', 'action__pattern': '\M^enum ImageSource$', 'action__path': 'ext/objective_functions/xing/aig/camera_image.hpp', 'kind': 'jump_list', 'abbr': 'ImageSource                @ext/obj.._image.hpp  enum ImageSource', 'action__tagname': 'ImageSource'}, {'word': 'ImageType', 'action__pattern': '\M^enum class ImageType : unsigned int {$', 'action__path': 'modules/core/include/image.h', 'kind': 'jump_list', 'abbr': 'ImageType                  @modules..de/image.h  enum class ImageType : unsigned int {', 'action__tagname': 'ImageType'}, {'word': 'InstancedMeshRenderer', 'action__pattern': '\M^class InstancedMeshRenderer$', 'action__path': 'modules/gl/include/instanced_mesh_renderer.h', 'kind': 'jump_list', 'abbr': 'InstancedMeshRenderer      @modules..renderer.h  class InstancedMeshRenderer', 'action__tagname': 'InstancedMeshRenderer'}, {'word': 'InstancedMeshRenderer', 'action__pattern': '\M^InstancedMeshRenderer::InstancedMeshRenderer(const Mesh& m)$', 'action__path': 'modules/gl/src/instanced_mesh_renderer.cc', 'kind': 'jump_list', 'abbr': 'InstancedMeshRenderer      @modules..enderer.cc  InstancedMeshRenderer::InstancedMeshRenderer(const Mesh& m)', 'action__tagname': 'InstancedMeshRenderer'}, {'word': 'InstancedShapeRenderer', 'action__pattern': '\M^InstancedShapeRenderer<Shape>::InstancedShapeRenderer(const Shape& s)$', 'action__path': 'modules/gl/include/instanced_shape_renderer.h', 'kind': 'jump_list', 'abbr': 'InstancedShapeRenderer     @modules..renderer.h  InstancedShapeRenderer<Shape>::InstancedShapeRenderer(const Shape& s)', 'action__tagname': 'InstancedShapeRenderer'}, {'word': 'InstancedShapeRenderer', 'action__pattern': '\M^class InstancedShapeRenderer$', 'action__path': 'modules/gl/include/instanced_shape_renderer.h', 'kind': 'jump_list', 'abbr': 'InstancedShapeRenderer     @modules..renderer.h  class InstancedShapeRenderer', 'action__tagname': 'InstancedShapeRenderer'}, {'word': 'InterpolationType', 'action__pattern': '\M^    enum class InterpolationType : char {$', 'action__path': 'apps/pose_interpolator/include/pose_interpolator_options.h', 'kind': 'jump_list', 'abbr': 'InterpolationType          @apps/po.._options.h      enum class InterpolationType : char {', 'action__tagname': 'InterpolationType'}, {'word': 'IsHeaderFile', 'action__pattern': '\M^def IsHeaderFile( filename ):$', 'action__path': '.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'IsHeaderFile               @.ycm_extra_conf.py   def IsHeaderFile( filename ):', 'action__tagname': 'IsHeaderFile'}, {'word': 'IsHeaderFile', 'action__pattern': '\M^def IsHeaderFile( filename ):$', 'action__path': 'apps/34dof_to_json/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'IsHeaderFile               @apps/34..ra_conf.py  def IsHeaderFile( filename ):', 'action__tagname': 'IsHeaderFile'}, {'word': 'IsHeaderFile', 'action__pattern': '\M^def IsHeaderFile( filename ):$', 'action__path': 'apps/bmvc_project/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'IsHeaderFile               @apps/bm..ra_conf.py  def IsHeaderFile( filename ):', 'action__tagname': 'IsHeaderFile'}, {'word': 'IsHeaderFile', 'action__pattern': '\M^def IsHeaderFile( filename ):$', 'action__path': 'apps/depth_shader_viewer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'IsHeaderFile               @apps/de..ra_conf.py  def IsHeaderFile( filename ):', 'action__tagname': 'IsHeaderFile'}, {'word': 'IsHeaderFile', 'action__pattern': '\M^def IsHeaderFile( filename ):$', 'action__path': 'apps/edge_shader_viewer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'IsHeaderFile               @apps/ed..ra_conf.py  def IsHeaderFile( filename ):', 'action__tagname': 'IsHeaderFile'}, {'word': 'IsHeaderFile', 'action__pattern': '\M^def IsHeaderFile( filename ):$', 'action__path': 'apps/gbuffer_viewer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'IsHeaderFile               @apps/gb..ra_conf.py  def IsHeaderFile( filename ):', 'action__tagname': 'IsHeaderFile'}, {'word': 'IsHeaderFile', 'action__pattern': '\M^def IsHeaderFile( filename ):$', 'action__path': 'apps/multicam_mesh_viewer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'IsHeaderFile               @apps/mu..ra_conf.py  def IsHeaderFile( filename ):', 'action__tagname': 'IsHeaderFile'}, {'word': 'IsHeaderFile', 'action__pattern': '\M^def IsHeaderFile( filename ):$', 'action__path': 'apps/pose_creator/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'IsHeaderFile               @apps/po..ra_conf.py  def IsHeaderFile( filename ):', 'action__tagname': 'IsHeaderFile'}, {'word': 'IsHeaderFile', 'action__pattern': '\M^def IsHeaderFile( filename ):$', 'action__path': 'apps/pose_interpolator/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'IsHeaderFile               @apps/po..ra_conf.py  def IsHeaderFile( filename ):', 'action__tagname': 'IsHeaderFile'}, {'word': 'IsHeaderFile', 'action__pattern': '\M^def IsHeaderFile( filename ):$', 'action__path': 'apps/pose_renderer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'IsHeaderFile               @apps/po..ra_conf.py  def IsHeaderFile( filename ):', 'action__tagname': 'IsHeaderFile'}, {'word': 'IsHeaderFile', 'action__pattern': '\M^def IsHeaderFile( filename ):$', 'action__path': 'apps/pose_viewer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'IsHeaderFile               @apps/po..ra_conf.py  def IsHeaderFile( filename ):', 'action__tagname': 'IsHeaderFile'}, {'word': 'Joint', 'action__pattern': '\M^class Joint {$', 'action__path': 'modules/core/include/old_joint.h', 'kind': 'jump_list', 'abbr': 'Joint                      @modules..ld_joint.h  class Joint {', 'action__tagname': 'Joint'}, {'word': 'Joint', 'action__pattern': '\M^Joint::Joint() : name("root"),$', 'action__path': 'modules/core/src/old_joint.cc', 'kind': 'jump_list', 'abbr': 'Joint                      @modules..d_joint.cc  Joint::Joint() : name("root"),', 'action__tagname': 'Joint'}, {'word': 'Joint', 'action__pattern': '\M^Joint::Joint(const std::string& n,$', 'action__path': 'modules/core/src/old_joint.cc', 'kind': 'jump_list', 'abbr': 'Joint                      @modules..d_joint.cc  Joint::Joint(const std::string& n,', 'action__tagname': 'Joint'}, {'word': 'JsonPoseReader', 'action__pattern': '\M^JsonPoseReader<T>::JsonPoseReader(const std::string& filename) {$', 'action__path': 'modules/io/include/json_pose_reader.h', 'kind': 'jump_list', 'abbr': 'JsonPoseReader             @modules..e_reader.h  JsonPoseReader<T>::JsonPoseReader(const std::string& filename) {', 'action__tagname': 'JsonPoseReader'}, {'word': 'JsonPoseReader', 'action__pattern': '\M^class JsonPoseReader : public PoseReader<T> {$', 'action__path': 'modules/io/include/json_pose_reader.h', 'kind': 'jump_list', 'abbr': 'JsonPoseReader             @modules..e_reader.h  class JsonPoseReader : public PoseReader<T> {', 'action__tagname': 'JsonPoseReader'}, {'word': 'JsonPoseWriter', 'action__pattern': '\M^class JsonPoseWriter {$', 'action__path': 'modules/io/include/json_pose_writer.h', 'kind': 'jump_list', 'abbr': 'JsonPoseWriter             @modules..e_writer.h  class JsonPoseWriter {', 'action__tagname': 'JsonPoseWriter'}, {'word': 'JsonPoseWriter', 'action__pattern': '\M^JsonPoseWriter::JsonPoseWriter(const std::string& filename) {$', 'action__path': 'modules/io/src/json_pose_writer.cc', 'kind': 'jump_list', 'abbr': 'JsonPoseWriter             @modules.._writer.cc  JsonPoseWriter::JsonPoseWriter(const std::string& filename) {', 'action__tagname': 'JsonPoseWriter'}, {'word': 'LAC_ALPHA', 'action__pattern': '\M^  LAC_ALPHA, /*use color type user requested, but if only opaque pixels and RGBA or grey+alpha, use RGB or grey*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'LAC_ALPHA                  @ext/lod../lodepng.h    LAC_ALPHA, \/*use color type user requested, but if only opaque pixels and RGBA or grey+alpha, use RGB or grey*\/', 'action__tagname': 'LAC_ALPHA'}, {'word': 'LAC_AUTO', 'action__pattern': '\M^  LAC_AUTO, /*use PNG color type that can losslessly represent the uncompressed image the smallest possible*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'LAC_AUTO                   @ext/lod../lodepng.h    LAC_AUTO, \/*use PNG color type that can losslessly represent the uncompressed image the smallest possible*\/', 'action__tagname': 'LAC_AUTO'}, {'word': 'LAC_AUTO_NO_NIBBLES', 'action__pattern': '\M^  LAC_AUTO_NO_NIBBLES,$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'LAC_AUTO_NO_NIBBLES        @ext/lod../lodepng.h    LAC_AUTO_NO_NIBBLES,', 'action__tagname': 'LAC_AUTO_NO_NIBBLES'}, {'word': 'LAC_AUTO_NO_NIBBLES_NO_PALETTE', 'action__pattern': '\M^  LAC_AUTO_NO_NIBBLES_NO_PALETTE$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'LAC_AUTO..BLES_NO_PALETTE  @ext/lod../lodepng.h    LAC_AUTO_NO_NIBBLES_NO_PALETTE', 'action__tagname': 'LAC_AUTO_NO_NIBBLES_NO_PALETTE'}, {'word': 'LAC_AUTO_NO_PALETTE', 'action__pattern': '\M^  LAC_AUTO_NO_PALETTE,$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'LAC_AUTO_NO_PALETTE        @ext/lod../lodepng.h    LAC_AUTO_NO_PALETTE,', 'action__tagname': 'LAC_AUTO_NO_PALETTE'}, {'word': 'LAC_NO', 'action__pattern': '\M^  LAC_NO, /*use color type user requested*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'LAC_NO                     @ext/lod../lodepng.h    LAC_NO, \/*use color type user requested*\/', 'action__tagname': 'LAC_NO'}, {'word': 'LAST_LENGTH_CODE_INDEX', 'action__path': 'ext/lodepng/lodepng.cpp', 'action__line': 448, 'kind': 'jump_list', 'abbr': 'LAST_LENGTH_CODE_INDEX     @ext/lod..odepng.cpp  line:448', 'action__tagname': 'LAST_LENGTH_CODE_INDEX'}, {'word': 'LCT_GREY', 'action__pattern': '\M^  LCT_GREY = 0, /*greyscale: 1,2,4,8,16 bit*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'LCT_GREY                   @ext/lod../lodepng.h    LCT_GREY = 0, \/*greyscale: 1,2,4,8,16 bit*\/', 'action__tagname': 'LCT_GREY'}, {'word': 'LCT_GREY_ALPHA', 'action__pattern': '\M^  LCT_GREY_ALPHA = 4, /*greyscale with alpha: 8,16 bit*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'LCT_GREY_ALPHA             @ext/lod../lodepng.h    LCT_GREY_ALPHA = 4, \/*greyscale with alpha: 8,16 bit*\/', 'action__tagname': 'LCT_GREY_ALPHA'}, {'word': 'LCT_PALETTE', 'action__pattern': '\M^  LCT_PALETTE = 3, /*palette: 1,2,4,8 bit*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'LCT_PALETTE                @ext/lod../lodepng.h    LCT_PALETTE = 3, \/*palette: 1,2,4,8 bit*\/', 'action__tagname': 'LCT_PALETTE'}, {'word': 'LCT_RGB', 'action__pattern': '\M^  LCT_RGB = 2, /*RGB: 8,16 bit*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'LCT_RGB                    @ext/lod../lodepng.h    LCT_RGB = 2, \/*RGB: 8,16 bit*\/', 'action__tagname': 'LCT_RGB'}, {'word': 'LCT_RGBA', 'action__pattern': '\M^  LCT_RGBA = 6 /*RGB with alpha: 8,16 bit*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'LCT_RGBA                   @ext/lod../lodepng.h    LCT_RGBA = 6 \/*RGB with alpha: 8,16 bit*\/', 'action__tagname': 'LCT_RGBA'}, {'word': 'LEAF', 'action__pattern': '\M^    enum class OffsetType {LEAF, DIVISION};$', 'action__path': 'modules/ml/include/offset_leaf.h', 'kind': 'jump_list', 'abbr': 'LEAF                       @modules..set_leaf.h      enum class OffsetType {LEAF, DIVISION};', 'action__tagname': 'LEAF'}, {'word': 'LENGTHBASE', 'action__pattern': '\M^static const unsigned LENGTHBASE[29]$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'LENGTHBASE                 @ext/lod..odepng.cpp  static const unsigned LENGTHBASE[29]', 'action__tagname': 'LENGTHBASE'}, {'word': 'LENGTHEXTRA', 'action__pattern': '\M^static const unsigned LENGTHEXTRA[29]$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'LENGTHEXTRA                @ext/lod..odepng.cpp  static const unsigned LENGTHEXTRA[29]', 'action__tagname': 'LENGTHEXTRA'}, {'word': 'LFS_BRUTE_FORCE', 'action__pattern': '\M^  LFS_BRUTE_FORCE,$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'LFS_BRUTE_FORCE            @ext/lod../lodepng.h    LFS_BRUTE_FORCE,', 'action__tagname': 'LFS_BRUTE_FORCE'}, {'word': 'LFS_ENTROPY', 'action__pattern': '\M^  LFS_ENTROPY,$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'LFS_ENTROPY                @ext/lod../lodepng.h    LFS_ENTROPY,', 'action__tagname': 'LFS_ENTROPY'}, {'word': 'LFS_MINSUM', 'action__pattern': '\M^  LFS_MINSUM,$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'LFS_MINSUM                 @ext/lod../lodepng.h    LFS_MINSUM,', 'action__tagname': 'LFS_MINSUM'}, {'word': 'LFS_PREDEFINED', 'action__pattern': '\M^  LFS_PREDEFINED$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'LFS_PREDEFINED             @ext/lod../lodepng.h    LFS_PREDEFINED', 'action__tagname': 'LFS_PREDEFINED'}, {'word': 'LFS_ZERO', 'action__pattern': '\M^  LFS_ZERO,$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'LFS_ZERO                   @ext/lod../lodepng.h    LFS_ZERO,', 'action__tagname': 'LFS_ZERO'}, {'word': 'LITTLE', 'action__pattern': '\M^      LITTLE = 3$', 'action__path': 'modules/gl/include/quadric_hand.h', 'kind': 'jump_list', 'abbr': 'LITTLE                     @modules..ric_hand.h        LITTLE = 3', 'action__tagname': 'LITTLE'}, {'word': 'LODEPNG_COMPILE_ALLOCATORS', 'action__path': 'ext/lodepng/lodepng.h', 'action__line': 76, 'kind': 'jump_list', 'abbr': 'LODEPNG_..PILE_ALLOCATORS  @ext/lod../lodepng.h  line:76', 'action__tagname': 'LODEPNG_COMPILE_ALLOCATORS'}, {'word': 'LODEPNG_COMPILE_ANCILLARY_CHUNKS', 'action__path': 'ext/lodepng/lodepng.h', 'action__line': 66, 'kind': 'jump_list', 'abbr': 'LODEPNG_..NCILLARY_CHUNKS  @ext/lod../lodepng.h  line:66', 'action__tagname': 'LODEPNG_COMPILE_ANCILLARY_CHUNKS'}, {'word': 'LODEPNG_COMPILE_CPP', 'action__path': 'ext/lodepng/lodepng.h', 'action__line': 81, 'kind': 'jump_list', 'abbr': 'LODEPNG_COMPILE_CPP        @ext/lod../lodepng.h  line:81', 'action__tagname': 'LODEPNG_COMPILE_CPP'}, {'word': 'LODEPNG_COMPILE_DECODER', 'action__path': 'ext/lodepng/lodepng.h', 'action__line': 54, 'kind': 'jump_list', 'abbr': 'LODEPNG_COMPILE_DECODER    @ext/lod../lodepng.h  line:54', 'action__tagname': 'LODEPNG_COMPILE_DECODER'}, {'word': 'LODEPNG_COMPILE_DISK', 'action__path': 'ext/lodepng/lodepng.h', 'action__line': 62, 'kind': 'jump_list', 'abbr': 'LODEPNG_COMPILE_DISK       @ext/lod../lodepng.h  line:62', 'action__tagname': 'LODEPNG_COMPILE_DISK'}, {'word': 'LODEPNG_COMPILE_ENCODER', 'action__path': 'ext/lodepng/lodepng.h', 'action__line': 58, 'kind': 'jump_list', 'abbr': 'LODEPNG_COMPILE_ENCODER    @ext/lod../lodepng.h  line:58', 'action__tagname': 'LODEPNG_COMPILE_ENCODER'}, {'word': 'LODEPNG_COMPILE_ERROR_TEXT', 'action__path': 'ext/lodepng/lodepng.h', 'action__line': 70, 'kind': 'jump_list', 'abbr': 'LODEPNG_..PILE_ERROR_TEXT  @ext/lod../lodepng.h  line:70', 'action__tagname': 'LODEPNG_COMPILE_ERROR_TEXT'}, {'word': 'LODEPNG_COMPILE_PNG', 'action__path': 'ext/lodepng/lodepng.h', 'action__line': 50, 'kind': 'jump_list', 'abbr': 'LODEPNG_COMPILE_PNG        @ext/lod../lodepng.h  line:50', 'action__tagname': 'LODEPNG_COMPILE_PNG'}, {'word': 'LODEPNG_COMPILE_ZLIB', 'action__path': 'ext/lodepng/lodepng.h', 'action__line': 46, 'kind': 'jump_list', 'abbr': 'LODEPNG_COMPILE_ZLIB       @ext/lod../lodepng.h  line:46', 'action__tagname': 'LODEPNG_COMPILE_ZLIB'}, {'word': 'LODEPNG_H', 'action__path': 'ext/lodepng/lodepng.h', 'action__line': 27, 'kind': 'jump_list', 'abbr': 'LODEPNG_H                  @ext/lod../lodepng.h  line:27', 'action__tagname': 'LODEPNG_H'}, {'word': 'LTInformationGain', 'action__pattern': '\M^double LTInformationGain (const std::vector<std::tuple<cv::Mat, core::Pose>>& data,$', 'action__path': 'modules/ml/include/latent_tree_information_gain.h', 'kind': 'jump_list', 'abbr': 'LTInformationGain          @modules..ion_gain.h  double LTInformationGain (const std::vector<std::tuple<cv::Mat, core::Pose>>& data,', 'action__tagname': 'LTInformationGain'}, {'word': 'LatentRegressionForest', 'action__pattern': '\M^class LatentRegressionForest {$', 'action__path': 'modules/ml/include/latent_regression_forest.h', 'kind': 'jump_list', 'abbr': 'LatentRegressionForest     @modules..n_forest.h  class LatentRegressionForest {', 'action__tagname': 'LatentRegressionForest'}, {'word': 'LatentTreeLeaf', 'action__pattern': '\M^class LatentTreeLeaf {$', 'action__path': 'modules/ml/include/latent_tree_leaf.h', 'kind': 'jump_list', 'abbr': 'LatentTreeLeaf             @modules..ree_leaf.h  class LatentTreeLeaf {', 'action__tagname': 'LatentTreeLeaf'}, {'word': 'LatentTreeModel', 'action__pattern': '\M^class LatentTreeModel {$', 'action__path': 'modules/ml/include/latent_tree_model.h', 'kind': 'jump_list', 'abbr': 'LatentTreeModel            @modules..ee_model.h  class LatentTreeModel {', 'action__tagname': 'LatentTreeModel'}, {'word': 'LatentTreeModel', 'action__pattern': '\M^LatentTreeModel::LatentTreeModel($', 'action__path': 'modules/ml/src/latent_tree_model.cc', 'kind': 'jump_list', 'abbr': 'LatentTreeModel            @modules..e_model.cc  LatentTreeModel::LatentTreeModel(', 'action__tagname': 'LatentTreeModel'}, {'word': 'LatentTreeModel', 'action__pattern': '\M^LatentTreeModel::LatentTreeModel(const std::vector<core::Pose<glm::vec3>>& data) {$', 'action__path': 'modules/ml/src/latent_tree_model.cc', 'kind': 'jump_list', 'abbr': 'LatentTreeModel            @modules..e_model.cc  LatentTreeModel::LatentTreeModel(const std::vector<core::Pose<glm::vec3>>& data) {', 'action__tagname': 'LatentTreeModel'}, {'word': 'LatentTreeNode', 'action__pattern': '\M^class LatentTreeNode {$', 'action__path': 'modules/ml/include/latent_tree_node.h', 'kind': 'jump_list', 'abbr': 'LatentTreeNode             @modules..ree_node.h  class LatentTreeNode {', 'action__tagname': 'LatentTreeNode'}, {'word': 'LatentTreeNode', 'action__pattern': '\M^LatentTreeNode::LatentTreeNode() :$', 'action__path': 'modules/ml/src/latent_tree_node.cc', 'kind': 'jump_list', 'abbr': 'LatentTreeNode             @modules..ee_node.cc  LatentTreeNode::LatentTreeNode() :', 'action__tagname': 'LatentTreeNode'}, {'word': 'LatentTreeNode', 'action__pattern': '\M^LatentTreeNode::LatentTreeNode(const std::string& s) :$', 'action__path': 'modules/ml/src/latent_tree_node.cc', 'kind': 'jump_list', 'abbr': 'LatentTreeNode             @modules..ee_node.cc  LatentTreeNode::LatentTreeNode(const std::string& s) :', 'action__tagname': 'LatentTreeNode'}, {'word': 'LatentTreeNode', 'action__pattern': '\M^LatentTreeNode::LatentTreeNode(const std::vector<std::string>& v) :$', 'action__path': 'modules/ml/src/latent_tree_node.cc', 'kind': 'jump_list', 'abbr': 'LatentTreeNode             @modules..ee_node.cc  LatentTreeNode::LatentTreeNode(const std::vector<std::string>& v) :', 'action__tagname': 'LatentTreeNode'}, {'word': 'LeafFactory', 'action__pattern': '\M^    LeafFactory() {}$', 'action__path': 'modules/ml/include/leaf_factory.h', 'kind': 'jump_list', 'abbr': 'LeafFactory                @modules.._factory.h      LeafFactory() {}', 'action__tagname': 'LeafFactory'}, {'word': 'LeafFactory', 'action__pattern': '\M^class LeafFactory {$', 'action__path': 'modules/ml/include/leaf_factory.h', 'kind': 'jump_list', 'abbr': 'LeafFactory                @modules.._factory.h  class LeafFactory {', 'action__tagname': 'LeafFactory'}, {'word': 'LodePNGAutoConvert', 'action__pattern': '\M^typedef enum LodePNGAutoConvert$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'LodePNGAutoConvert         @ext/lod../lodepng.h  typedef enum LodePNGAutoConvert', 'action__tagname': 'LodePNGAutoConvert'}, {'word': 'LodePNGAutoConvert', 'action__pattern': '\M^} LodePNGAutoConvert;$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'LodePNGAutoConvert         @ext/lod../lodepng.h  } LodePNGAutoConvert;', 'action__tagname': 'LodePNGAutoConvert'}, {'word': 'LodePNGColorMode', 'action__pattern': '\M^typedef struct LodePNGColorMode$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'LodePNGColorMode           @ext/lod../lodepng.h  typedef struct LodePNGColorMode', 'action__tagname': 'LodePNGColorMode'}, {'word': 'LodePNGColorMode', 'action__pattern': '\M^} LodePNGColorMode;$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'LodePNGColorMode           @ext/lod../lodepng.h  } LodePNGColorMode;', 'action__tagname': 'LodePNGColorMode'}, {'word': 'LodePNGColorType', 'action__pattern': '\M^typedef enum LodePNGColorType$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'LodePNGColorType           @ext/lod../lodepng.h  typedef enum LodePNGColorType', 'action__tagname': 'LodePNGColorType'}, {'word': 'LodePNGColorType', 'action__pattern': '\M^} LodePNGColorType;$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'LodePNGColorType           @ext/lod../lodepng.h  } LodePNGColorType;', 'action__tagname': 'LodePNGColorType'}, {'word': 'LodePNGCompressSettings', 'action__pattern': '\M^struct LodePNGCompressSettings /*deflate = compress*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'LodePNGCompressSettings    @ext/lod../lodepng.h  struct LodePNGCompressSettings \/*deflate = compress*\/', 'action__tagname': 'LodePNGCompressSettings'}, {'word': 'LodePNGCompressSettings', 'action__pattern': '\M^typedef struct LodePNGCompressSettings LodePNGCompressSettings;$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'LodePNGCompressSettings    @ext/lod../lodepng.h  typedef struct LodePNGCompressSettings LodePNGCompressSettings;', 'action__tagname': 'LodePNGCompressSettings'}, {'word': 'LodePNGDecoderSettings', 'action__pattern': '\M^typedef struct LodePNGDecoderSettings$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'LodePNGDecoderSettings     @ext/lod../lodepng.h  typedef struct LodePNGDecoderSettings', 'action__tagname': 'LodePNGDecoderSettings'}, {'word': 'LodePNGDecoderSettings', 'action__pattern': '\M^} LodePNGDecoderSettings;$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'LodePNGDecoderSettings     @ext/lod../lodepng.h  } LodePNGDecoderSettings;', 'action__tagname': 'LodePNGDecoderSettings'}, {'word': 'LodePNGDecompressSettings', 'action__pattern': '\M^struct LodePNGDecompressSettings$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'LodePNGDecompressSettings  @ext/lod../lodepng.h  struct LodePNGDecompressSettings', 'action__tagname': 'LodePNGDecompressSettings'}, {'word': 'LodePNGDecompressSettings', 'action__pattern': '\M^typedef struct LodePNGDecompressSettings LodePNGDecompressSettings;$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'LodePNGDecompressSettings  @ext/lod../lodepng.h  typedef struct LodePNGDecompressSettings LodePNGDecompressSettings;', 'action__tagname': 'LodePNGDecompressSettings'}, {'word': 'LodePNGEncoderSettings', 'action__pattern': '\M^typedef struct LodePNGEncoderSettings$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'LodePNGEncoderSettings     @ext/lod../lodepng.h  typedef struct LodePNGEncoderSettings', 'action__tagname': 'LodePNGEncoderSettings'}, {'word': 'LodePNGEncoderSettings', 'action__pattern': '\M^} LodePNGEncoderSettings;$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'LodePNGEncoderSettings     @ext/lod../lodepng.h  } LodePNGEncoderSettings;', 'action__tagname': 'LodePNGEncoderSettings'}, {'word': 'LodePNGFilterStrategy', 'action__pattern': '\M^typedef enum LodePNGFilterStrategy$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'LodePNGFilterStrategy      @ext/lod../lodepng.h  typedef enum LodePNGFilterStrategy', 'action__tagname': 'LodePNGFilterStrategy'}, {'word': 'LodePNGFilterStrategy', 'action__pattern': '\M^} LodePNGFilterStrategy;$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'LodePNGFilterStrategy      @ext/lod../lodepng.h  } LodePNGFilterStrategy;', 'action__tagname': 'LodePNGFilterStrategy'}, {'word': 'LodePNGIText_cleanup', 'action__pattern': '\M^static void LodePNGIText_cleanup(LodePNGInfo* info)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'LodePNGIText_cleanup       @ext/lod..odepng.cpp  static void LodePNGIText_cleanup(LodePNGInfo* info)', 'action__tagname': 'LodePNGIText_cleanup'}, {'word': 'LodePNGIText_copy', 'action__pattern': '\M^static unsigned LodePNGIText_copy(LodePNGInfo* dest, const LodePNGInfo* source)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'LodePNGIText_copy          @ext/lod..odepng.cpp  static unsigned LodePNGIText_copy(LodePNGInfo* dest, const LodePNGInfo* source)', 'action__tagname': 'LodePNGIText_copy'}, {'word': 'LodePNGIText_init', 'action__pattern': '\M^static void LodePNGIText_init(LodePNGInfo* info)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'LodePNGIText_init          @ext/lod..odepng.cpp  static void LodePNGIText_init(LodePNGInfo* info)', 'action__tagname': 'LodePNGIText_init'}, {'word': 'LodePNGInfo', 'action__pattern': '\M^typedef struct LodePNGInfo$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'LodePNGInfo                @ext/lod../lodepng.h  typedef struct LodePNGInfo', 'action__tagname': 'LodePNGInfo'}, {'word': 'LodePNGInfo', 'action__pattern': '\M^} LodePNGInfo;$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'LodePNGInfo                @ext/lod../lodepng.h  } LodePNGInfo;', 'action__tagname': 'LodePNGInfo'}, {'word': 'LodePNGState', 'action__pattern': '\M^typedef struct LodePNGState$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'LodePNGState               @ext/lod../lodepng.h  typedef struct LodePNGState', 'action__tagname': 'LodePNGState'}, {'word': 'LodePNGState', 'action__pattern': '\M^} LodePNGState;$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'LodePNGState               @ext/lod../lodepng.h  } LodePNGState;', 'action__tagname': 'LodePNGState'}, {'word': 'LodePNGText_cleanup', 'action__pattern': '\M^static void LodePNGText_cleanup(LodePNGInfo* info)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'LodePNGText_cleanup        @ext/lod..odepng.cpp  static void LodePNGText_cleanup(LodePNGInfo* info)', 'action__tagname': 'LodePNGText_cleanup'}, {'word': 'LodePNGText_copy', 'action__pattern': '\M^static unsigned LodePNGText_copy(LodePNGInfo* dest, const LodePNGInfo* source)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'LodePNGText_copy           @ext/lod..odepng.cpp  static unsigned LodePNGText_copy(LodePNGInfo* dest, const LodePNGInfo* source)', 'action__tagname': 'LodePNGText_copy'}, {'word': 'LodePNGText_init', 'action__pattern': '\M^static void LodePNGText_init(LodePNGInfo* info)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'LodePNGText_init           @ext/lod..odepng.cpp  static void LodePNGText_init(LodePNGInfo* info)', 'action__tagname': 'LodePNGText_init'}, {'word': 'LodePNGTime', 'action__pattern': '\M^typedef struct LodePNGTime$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'LodePNGTime                @ext/lod../lodepng.h  typedef struct LodePNGTime', 'action__tagname': 'LodePNGTime'}, {'word': 'LodePNGTime', 'action__pattern': '\M^} LodePNGTime;$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'LodePNGTime                @ext/lod../lodepng.h  } LodePNGTime;', 'action__tagname': 'LodePNGTime'}, {'word': 'LodePNGUnknownChunks_cleanup', 'action__pattern': '\M^static void LodePNGUnknownChunks_cleanup(LodePNGInfo* info)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'LodePNGU..nChunks_cleanup  @ext/lod..odepng.cpp  static void LodePNGUnknownChunks_cleanup(LodePNGInfo* info)', 'action__tagname': 'LodePNGUnknownChunks_cleanup'}, {'word': 'LodePNGUnknownChunks_copy', 'action__pattern': '\M^static unsigned LodePNGUnknownChunks_copy(LodePNGInfo* dest, const LodePNGInfo* src)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'LodePNGUnknownChunks_copy  @ext/lod..odepng.cpp  static unsigned LodePNGUnknownChunks_copy(LodePNGInfo* dest, const LodePNGInfo* src)', 'action__tagname': 'LodePNGUnknownChunks_copy'}, {'word': 'LodePNGUnknownChunks_init', 'action__pattern': '\M^static void LodePNGUnknownChunks_init(LodePNGInfo* info)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'LodePNGUnknownChunks_init  @ext/lod..odepng.cpp  static void LodePNGUnknownChunks_init(LodePNGInfo* info)', 'action__tagname': 'LodePNGUnknownChunks_init'}, {'word': 'MAX_EDGE_DISTANCE', 'action__pattern': '\M^const double MAX_EDGE_DISTANCE = std::sqrt(640*640.+480*480.) + 1.;$', 'action__path': 'ext/objective_functions/xing/aig/edge_distance_map.cc', 'kind': 'jump_list', 'abbr': 'MAX_EDGE_DISTANCE          @ext/obj..nce_map.cc  const double MAX_EDGE_DISTANCE = std::sqrt(640*640.+480*480.) + 1.;', 'action__tagname': 'MAX_EDGE_DISTANCE'}, {'word': 'MAX_SUPPORTED_DEFLATE_LENGTH', 'action__pattern': '\M^static const size_t MAX_SUPPORTED_DEFLATE_LENGTH = 258;$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'MAX_SUPP.._DEFLATE_LENGTH  @ext/lod..odepng.cpp  static const size_t MAX_SUPPORTED_DEFLATE_LENGTH = 258;', 'action__tagname': 'MAX_SUPPORTED_DEFLATE_LENGTH'}, {'word': 'MCMeshViewer', 'action__pattern': '\M^    MCMeshViewer(GLFWwindow* w, const MCMeshViewerOptions& o) try :$', 'action__path': 'apps/multicam_mesh_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'MCMeshViewer               @apps/mu..rc/main.cc      MCMeshViewer(GLFWwindow* w, const MCMeshViewerOptions& o) try :', 'action__tagname': 'MCMeshViewer'}, {'word': 'MCMeshViewer', 'action__pattern': '\M^class MCMeshViewer {$', 'action__path': 'apps/multicam_mesh_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'MCMeshViewer               @apps/mu..rc/main.cc  class MCMeshViewer {', 'action__tagname': 'MCMeshViewer'}, {'word': 'MCMeshViewerOptions', 'action__pattern': '\M^      MCMeshViewerOptions() :$', 'action__path': 'apps/multicam_mesh_viewer/include/mc_mesh_viewer_options.h', 'kind': 'jump_list', 'abbr': 'MCMeshViewerOptions        @apps/mu.._options.h        MCMeshViewerOptions() :', 'action__tagname': 'MCMeshViewerOptions'}, {'word': 'MCMeshViewerOptions', 'action__pattern': '\M^  class MCMeshViewerOptions$', 'action__path': 'apps/multicam_mesh_viewer/include/mc_mesh_viewer_options.h', 'kind': 'jump_list', 'abbr': 'MCMeshViewerOptions        @apps/mu.._options.h    class MCMeshViewerOptions', 'action__tagname': 'MCMeshViewerOptions'}, {'word': 'MIDDLE', 'action__pattern': '\M^      MIDDLE = 1,$', 'action__path': 'modules/gl/include/quadric_hand.h', 'kind': 'jump_list', 'abbr': 'MIDDLE                     @modules..ric_hand.h        MIDDLE = 1,', 'action__tagname': 'MIDDLE'}, {'word': 'MakeRelativePathsInFlagsAbsolute', 'action__pattern': '\M^def MakeRelativePathsInFlagsAbsolute( flags, working_directory ):$', 'action__path': '.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'MakeRela..InFlagsAbsolute  @.ycm_extra_conf.py   def MakeRelativePathsInFlagsAbsolute( flags, working_directory ):', 'action__tagname': 'MakeRelativePathsInFlagsAbsolute'}, {'word': 'MakeRelativePathsInFlagsAbsolute', 'action__pattern': '\M^def MakeRelativePathsInFlagsAbsolute( flags, working_directory ):$', 'action__path': 'apps/34dof_to_json/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'MakeRela..InFlagsAbsolute  @apps/34..ra_conf.py  def MakeRelativePathsInFlagsAbsolute( flags, working_directory ):', 'action__tagname': 'MakeRelativePathsInFlagsAbsolute'}, {'word': 'MakeRelativePathsInFlagsAbsolute', 'action__pattern': '\M^def MakeRelativePathsInFlagsAbsolute( flags, working_directory ):$', 'action__path': 'apps/bmvc_project/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'MakeRela..InFlagsAbsolute  @apps/bm..ra_conf.py  def MakeRelativePathsInFlagsAbsolute( flags, working_directory ):', 'action__tagname': 'MakeRelativePathsInFlagsAbsolute'}, {'word': 'MakeRelativePathsInFlagsAbsolute', 'action__pattern': '\M^def MakeRelativePathsInFlagsAbsolute( flags, working_directory ):$', 'action__path': 'apps/depth_shader_viewer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'MakeRela..InFlagsAbsolute  @apps/de..ra_conf.py  def MakeRelativePathsInFlagsAbsolute( flags, working_directory ):', 'action__tagname': 'MakeRelativePathsInFlagsAbsolute'}, {'word': 'MakeRelativePathsInFlagsAbsolute', 'action__pattern': '\M^def MakeRelativePathsInFlagsAbsolute( flags, working_directory ):$', 'action__path': 'apps/edge_shader_viewer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'MakeRela..InFlagsAbsolute  @apps/ed..ra_conf.py  def MakeRelativePathsInFlagsAbsolute( flags, working_directory ):', 'action__tagname': 'MakeRelativePathsInFlagsAbsolute'}, {'word': 'MakeRelativePathsInFlagsAbsolute', 'action__pattern': '\M^def MakeRelativePathsInFlagsAbsolute( flags, working_directory ):$', 'action__path': 'apps/gbuffer_viewer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'MakeRela..InFlagsAbsolute  @apps/gb..ra_conf.py  def MakeRelativePathsInFlagsAbsolute( flags, working_directory ):', 'action__tagname': 'MakeRelativePathsInFlagsAbsolute'}, {'word': 'MakeRelativePathsInFlagsAbsolute', 'action__pattern': '\M^def MakeRelativePathsInFlagsAbsolute( flags, working_directory ):$', 'action__path': 'apps/multicam_mesh_viewer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'MakeRela..InFlagsAbsolute  @apps/mu..ra_conf.py  def MakeRelativePathsInFlagsAbsolute( flags, working_directory ):', 'action__tagname': 'MakeRelativePathsInFlagsAbsolute'}, {'word': 'MakeRelativePathsInFlagsAbsolute', 'action__pattern': '\M^def MakeRelativePathsInFlagsAbsolute( flags, working_directory ):$', 'action__path': 'apps/pose_creator/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'MakeRela..InFlagsAbsolute  @apps/po..ra_conf.py  def MakeRelativePathsInFlagsAbsolute( flags, working_directory ):', 'action__tagname': 'MakeRelativePathsInFlagsAbsolute'}, {'word': 'MakeRelativePathsInFlagsAbsolute', 'action__pattern': '\M^def MakeRelativePathsInFlagsAbsolute( flags, working_directory ):$', 'action__path': 'apps/pose_interpolator/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'MakeRela..InFlagsAbsolute  @apps/po..ra_conf.py  def MakeRelativePathsInFlagsAbsolute( flags, working_directory ):', 'action__tagname': 'MakeRelativePathsInFlagsAbsolute'}, {'word': 'MakeRelativePathsInFlagsAbsolute', 'action__pattern': '\M^def MakeRelativePathsInFlagsAbsolute( flags, working_directory ):$', 'action__path': 'apps/pose_renderer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'MakeRela..InFlagsAbsolute  @apps/po..ra_conf.py  def MakeRelativePathsInFlagsAbsolute( flags, working_directory ):', 'action__tagname': 'MakeRelativePathsInFlagsAbsolute'}, {'word': 'MakeRelativePathsInFlagsAbsolute', 'action__pattern': '\M^def MakeRelativePathsInFlagsAbsolute( flags, working_directory ):$', 'action__path': 'apps/pose_viewer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'MakeRela..InFlagsAbsolute  @apps/po..ra_conf.py  def MakeRelativePathsInFlagsAbsolute( flags, working_directory ):', 'action__tagname': 'MakeRelativePathsInFlagsAbsolute'}, {'word': 'MaxSphereDist', 'action__pattern': '\M^  MaxSphereDist(unsigned int s) : num_spheres(s){}$', 'action__path': 'apps/sphere_model_optim/src/main.cc', 'kind': 'jump_list', 'abbr': 'MaxSphereDist              @apps/sp..rc/main.cc    MaxSphereDist(unsigned int s) : num_spheres(s){}', 'action__tagname': 'MaxSphereDist'}, {'word': 'MaxSphereDist', 'action__pattern': '\M^struct MaxSphereDist {$', 'action__path': 'apps/sphere_model_optim/src/main.cc', 'kind': 'jump_list', 'abbr': 'MaxSphereDist              @apps/sp..rc/main.cc  struct MaxSphereDist {', 'action__tagname': 'MaxSphereDist'}, {'word': 'MaxSphereDistGen', 'action__pattern': '\M^  MaxSphereDistGen(unsigned int s, unsigned int sp,$', 'action__path': 'apps/sphere_model_optim/src/main.cc', 'kind': 'jump_list', 'abbr': 'MaxSphereDistGen           @apps/sp..rc/main.cc    MaxSphereDistGen(unsigned int s, unsigned int sp,', 'action__tagname': 'MaxSphereDistGen'}, {'word': 'MaxSphereDistGen', 'action__pattern': '\M^class MaxSphereDistGen : public ceres::FirstOrderFunction {$', 'action__path': 'apps/sphere_model_optim/src/main.cc', 'kind': 'jump_list', 'abbr': 'MaxSphereDistGen           @apps/sp..rc/main.cc  class MaxSphereDistGen : public ceres::FirstOrderFunction {', 'action__tagname': 'MaxSphereDistGen'}, {'word': 'MaxSphereDistSingle', 'action__pattern': '\M^  MaxSphereDistSingle(unsigned int s, double* ss) : num_spheres(s), spheres(ss) {}$', 'action__path': 'apps/sphere_model_optim/src/main.cc', 'kind': 'jump_list', 'abbr': 'MaxSphereDistSingle        @apps/sp..rc/main.cc    MaxSphereDistSingle(unsigned int s, double* ss) : num_spheres(s), spheres(ss) {}', 'action__tagname': 'MaxSphereDistSingle'}, {'word': 'MaxSphereDistSingle', 'action__pattern': '\M^struct MaxSphereDistSingle {$', 'action__path': 'apps/sphere_model_optim/src/main.cc', 'kind': 'jump_list', 'abbr': 'MaxSphereDistSingle        @apps/sp..rc/main.cc  struct MaxSphereDistSingle {', 'action__tagname': 'MaxSphereDistSingle'}, {'word': 'Mesh', 'action__pattern': '\M^class Mesh {$', 'action__path': 'modules/gl/include/mesh.h', 'kind': 'jump_list', 'abbr': 'Mesh                       @modules..ude/mesh.h  class Mesh {', 'action__tagname': 'Mesh'}, {'word': 'Mesh', 'action__pattern': '\M^Mesh::Mesh(const std::string& filename) {$', 'action__path': 'modules/gl/src/mesh.cc', 'kind': 'jump_list', 'abbr': 'Mesh                       @modules..rc/mesh.cc  Mesh::Mesh(const std::string& filename) {', 'action__tagname': 'Mesh'}, {'word': 'MeshEntry', 'action__pattern': '\M^      MeshEntry() {$', 'action__path': 'modules/gl/include/mesh.h', 'kind': 'jump_list', 'abbr': 'MeshEntry                  @modules..ude/mesh.h        MeshEntry() {', 'action__tagname': 'MeshEntry'}, {'word': 'MeshEntry', 'action__pattern': '\M^    struct MeshEntry {$', 'action__path': 'modules/gl/include/mesh.h', 'kind': 'jump_list', 'abbr': 'MeshEntry                  @modules..ude/mesh.h      struct MeshEntry {', 'action__tagname': 'MeshEntry'}, {'word': 'MeshReader', 'action__pattern': '\M^class MeshReader {$', 'action__path': 'modules/io/include/mesh_reader.h', 'kind': 'jump_list', 'abbr': 'MeshReader                 @modules..h_reader.h  class MeshReader {', 'action__tagname': 'MeshReader'}, {'word': 'MeshRenderer', 'action__pattern': '\M^class MeshRenderer$', 'action__path': 'modules/gl/include/mesh_renderer.h', 'kind': 'jump_list', 'abbr': 'MeshRenderer               @modules..renderer.h  class MeshRenderer', 'action__tagname': 'MeshRenderer'}, {'word': 'MeshRenderer', 'action__pattern': '\M^MeshRenderer::MeshRenderer(const Mesh& m) : VAO(0),$', 'action__path': 'modules/gl/src/mesh_renderer.cc', 'kind': 'jump_list', 'abbr': 'MeshRenderer               @modules..enderer.cc  MeshRenderer::MeshRenderer(const Mesh& m) : VAO(0),', 'action__tagname': 'MeshRenderer'}, {'word': 'MinMeshDist', 'action__pattern': '\M^  MinMeshDist(const std::vector<glm::vec3>& v,$', 'action__path': 'apps/sphere_model_optim/src/main.cc', 'kind': 'jump_list', 'abbr': 'MinMeshDist                @apps/sp..rc/main.cc    MinMeshDist(const std::vector<glm::vec3>& v,', 'action__tagname': 'MinMeshDist'}, {'word': 'MinMeshDist', 'action__pattern': '\M^struct MinMeshDist {$', 'action__path': 'apps/sphere_model_optim/src/main.cc', 'kind': 'jump_list', 'abbr': 'MinMeshDist                @apps/sp..rc/main.cc  struct MinMeshDist {', 'action__tagname': 'MinMeshDist'}, {'word': 'NUM_BONES_PER_VERTEX', 'action__pattern': '\M^    static const int NUM_BONES_PER_VERTEX = 16;$', 'action__path': 'modules/gl/include/mesh.h', 'kind': 'jump_list', 'abbr': 'NUM_BONES_PER_VERTEX       @modules..ude/mesh.h      static const int NUM_BONES_PER_VERTEX = 16;', 'action__tagname': 'NUM_BONES_PER_VERTEX'}, {'word': 'NUM_CODE_LENGTH_CODES', 'action__path': 'ext/lodepng/lodepng.cpp', 'action__line': 454, 'kind': 'jump_list', 'abbr': 'NUM_CODE_LENGTH_CODES      @ext/lod..odepng.cpp  line:454', 'action__tagname': 'NUM_CODE_LENGTH_CODES'}, {'word': 'NUM_CYLINDERS', 'action__pattern': '\M^    static const unsigned int NUM_CYLINDERS = 15;$', 'action__path': 'modules/gl/include/quadric_hand.h', 'kind': 'jump_list', 'abbr': 'NUM_CYLINDERS              @modules..ric_hand.h      static const unsigned int NUM_CYLINDERS = 15;', 'action__tagname': 'NUM_CYLINDERS'}, {'word': 'NUM_DEFLATE_CODE_SYMBOLS', 'action__path': 'ext/lodepng/lodepng.cpp', 'action__line': 450, 'kind': 'jump_list', 'abbr': 'NUM_DEFLATE_CODE_SYMBOLS   @ext/lod..odepng.cpp  line:450', 'action__tagname': 'NUM_DEFLATE_CODE_SYMBOLS'}, {'word': 'NUM_DISTANCE_SYMBOLS', 'action__path': 'ext/lodepng/lodepng.cpp', 'action__line': 452, 'kind': 'jump_list', 'abbr': 'NUM_DISTANCE_SYMBOLS       @ext/lod..odepng.cpp  line:452', 'action__tagname': 'NUM_DISTANCE_SYMBOLS'}, {'word': 'NUM_PARAMETERS', 'action__pattern': '\M^    static const unsigned int NUM_PARAMETERS = 27;$', 'action__path': 'modules/gl/include/quadric_hand.h', 'kind': 'jump_list', 'abbr': 'NUM_PARAMETERS             @modules..ric_hand.h      static const unsigned int NUM_PARAMETERS = 27;', 'action__tagname': 'NUM_PARAMETERS'}, {'word': 'NUM_SPHERES', 'action__pattern': '\M^    static const unsigned int NUM_SPHERES = 21;$', 'action__path': 'modules/gl/include/quadric_hand.h', 'kind': 'jump_list', 'abbr': 'NUM_SPHERES                @modules..ric_hand.h      static const unsigned int NUM_SPHERES = 21;', 'action__tagname': 'NUM_SPHERES'}, {'word': 'NonParamBayesClassifier', 'action__pattern': '\M^class NonParamBayesClassifier$', 'action__path': 'modules/ml/include/bayes_classifier.h', 'kind': 'jump_list', 'abbr': 'NonParamBayesClassifier    @modules..assifier.h  class NonParamBayesClassifier', 'action__tagname': 'NonParamBayesClassifier'}, {'word': 'NonParamBayesClassifier', 'action__pattern': '\M^NonParamBayesClassifier::NonParamBayesClassifier(const core::Histogram2D& pos,$', 'action__path': 'modules/ml/src/bayes_classifier.cc', 'kind': 'jump_list', 'abbr': 'NonParamBayesClassifier    @modules..ssifier.cc  NonParamBayesClassifier::NonParamBayesClassifier(const core::Histogram2D& pos,', 'action__tagname': 'NonParamBayesClassifier'}, {'word': 'NumParameters', 'action__pattern': '\M^  virtual int NumParameters() const { return num_spheres * sphere_params; }$', 'action__path': 'apps/sphere_model_optim/src/main.cc', 'kind': 'jump_list', 'abbr': 'NumParameters              @apps/sp..rc/main.cc    virtual int NumParameters() const { return num_spheres * sphere_params; }', 'action__tagname': 'NumParameters'}, {'word': 'OffscreenBuffer', 'action__pattern': '\M^class OffscreenBuffer {$', 'action__path': 'modules/gl/include/offscreen_buffer.h', 'kind': 'jump_list', 'abbr': 'OffscreenBuffer            @modules..n_buffer.h  class OffscreenBuffer {', 'action__tagname': 'OffscreenBuffer'}, {'word': 'OffscreenBuffer', 'action__pattern': '\M^OffscreenBuffer::OffscreenBuffer(core::ImageType t,$', 'action__path': 'modules/gl/src/offscreen_buffer.cc', 'kind': 'jump_list', 'abbr': 'OffscreenBuffer            @modules.._buffer.cc  OffscreenBuffer::OffscreenBuffer(core::ImageType t,', 'action__tagname': 'OffscreenBuffer'}, {'word': 'OffsetLeaf', 'action__pattern': '\M^    OffsetLeaf() {}$', 'action__path': 'modules/ml/include/offset_leaf.h', 'kind': 'jump_list', 'abbr': 'OffsetLeaf                 @modules..set_leaf.h      OffsetLeaf() {}', 'action__tagname': 'OffsetLeaf'}, {'word': 'OffsetLeaf', 'action__pattern': '\M^OffsetLeaf<Data, Labels...>::OffsetLeaf($', 'action__path': 'modules/ml/include/offset_leaf.h', 'kind': 'jump_list', 'abbr': 'OffsetLeaf                 @modules..set_leaf.h  OffsetLeaf<Data, Labels...>::OffsetLeaf(', 'action__tagname': 'OffsetLeaf'}, {'word': 'OffsetLeaf', 'action__pattern': '\M^class OffsetLeaf {$', 'action__path': 'modules/ml/include/offset_leaf.h', 'kind': 'jump_list', 'abbr': 'OffsetLeaf                 @modules..set_leaf.h  class OffsetLeaf {', 'action__tagname': 'OffsetLeaf'}, {'word': 'OffsetType', 'action__pattern': '\M^    enum class OffsetType {LEAF, DIVISION};$', 'action__path': 'modules/ml/include/offset_leaf.h', 'kind': 'jump_list', 'abbr': 'OffsetType                 @modules..set_leaf.h      enum class OffsetType {LEAF, DIVISION};', 'action__tagname': 'OffsetType'}, {'word': 'OptionsParsingException', 'action__pattern': '\M^    OptionsParsingException(const std::string& msg) $', 'action__path': 'modules/core/include/options_exceptions.h', 'kind': 'jump_list', 'abbr': 'OptionsParsingException    @modules..ceptions.h      OptionsParsingException(const std::string& msg) ', 'action__tagname': 'OptionsParsingException'}, {'word': 'OptionsParsingException', 'action__pattern': '\M^class OptionsParsingException : public std::runtime_error$', 'action__path': 'modules/core/include/options_exceptions.h', 'kind': 'jump_list', 'abbr': 'OptionsParsingException    @modules..ceptions.h  class OptionsParsingException : public std::runtime_error', 'action__tagname': 'OptionsParsingException'}, {'word': 'OptionsRequiredArgException', 'action__pattern': '\M^    OptionsRequiredArgException(const std::string& msg) $', 'action__path': 'modules/core/include/options_exceptions.h', 'kind': 'jump_list', 'abbr': 'OptionsR..redArgException  @modules..ceptions.h      OptionsRequiredArgException(const std::string& msg) ', 'action__tagname': 'OptionsRequiredArgException'}, {'word': 'OptionsRequiredArgException', 'action__pattern': '\M^class OptionsRequiredArgException : $', 'action__path': 'modules/core/include/options_exceptions.h', 'kind': 'jump_list', 'abbr': 'OptionsR..redArgException  @modules..ceptions.h  class OptionsRequiredArgException : ', 'action__tagname': 'OptionsRequiredArgException'}, {'word': 'OrthView', 'action__pattern': '\M^enum OrthView {X, Y, Z};$', 'action__path': 'apps/sphere_model_renderer/src/main.cc', 'kind': 'jump_list', 'abbr': 'OrthView                   @apps/sp..rc/main.cc  enum OrthView {X, Y, Z};', 'action__tagname': 'OrthView'}, {'word': 'PLATFORM_ID', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 212, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @build/C..mpilerId.c  line:212', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 215, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @build/C..mpilerId.c  line:215', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 218, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @build/C..mpilerId.c  line:218', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 221, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @build/C..mpilerId.c  line:221', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 224, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @build/C..mpilerId.c  line:224', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 227, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @build/C..mpilerId.c  line:227', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 230, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @build/C..mpilerId.c  line:230', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 233, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @build/C..mpilerId.c  line:233', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 236, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @build/C..mpilerId.c  line:236', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 239, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @build/C..mpilerId.c  line:239', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 242, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @build/C..mpilerId.c  line:242', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 245, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @build/C..mpilerId.c  line:245', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 248, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @build/C..mpilerId.c  line:248', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 251, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @build/C..mpilerId.c  line:251', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 254, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @build/C..mpilerId.c  line:254', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 257, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @build/C..mpilerId.c  line:257', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 260, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @build/C..mpilerId.c  line:260', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 263, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @build/C..mpilerId.c  line:263', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 266, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @build/C..mpilerId.c  line:266', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 269, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @build/C..mpilerId.c  line:269', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 272, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @build/C..mpilerId.c  line:272', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 275, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @build/C..mpilerId.c  line:275', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 278, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @build/C..mpilerId.c  line:278', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 281, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @build/C..mpilerId.c  line:281', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 284, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @build/C..mpilerId.c  line:284', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 287, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @build/C..mpilerId.c  line:287', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 205, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @build/C..ilerId.cpp  line:205', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 208, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @build/C..ilerId.cpp  line:208', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 211, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @build/C..ilerId.cpp  line:211', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 214, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @build/C..ilerId.cpp  line:214', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 217, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @build/C..ilerId.cpp  line:217', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 220, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @build/C..ilerId.cpp  line:220', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 223, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @build/C..ilerId.cpp  line:223', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 226, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @build/C..ilerId.cpp  line:226', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 229, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @build/C..ilerId.cpp  line:229', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 232, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @build/C..ilerId.cpp  line:232', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 235, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @build/C..ilerId.cpp  line:235', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 238, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @build/C..ilerId.cpp  line:238', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 241, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @build/C..ilerId.cpp  line:241', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 244, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @build/C..ilerId.cpp  line:244', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 247, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @build/C..ilerId.cpp  line:247', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 250, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @build/C..ilerId.cpp  line:250', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 253, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @build/C..ilerId.cpp  line:253', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 256, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @build/C..ilerId.cpp  line:256', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 259, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @build/C..ilerId.cpp  line:259', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 262, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @build/C..ilerId.cpp  line:262', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 265, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @build/C..ilerId.cpp  line:265', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 268, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @build/C..ilerId.cpp  line:268', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 271, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @build/C..ilerId.cpp  line:271', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 274, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @build/C..ilerId.cpp  line:274', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 277, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @build/C..ilerId.cpp  line:277', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 280, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @build/C..ilerId.cpp  line:280', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 212, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @ext/obj..mpilerId.c  line:212', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 215, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @ext/obj..mpilerId.c  line:215', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 218, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @ext/obj..mpilerId.c  line:218', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 221, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @ext/obj..mpilerId.c  line:221', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 224, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @ext/obj..mpilerId.c  line:224', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 227, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @ext/obj..mpilerId.c  line:227', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 230, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @ext/obj..mpilerId.c  line:230', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 233, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @ext/obj..mpilerId.c  line:233', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 236, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @ext/obj..mpilerId.c  line:236', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 239, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @ext/obj..mpilerId.c  line:239', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 242, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @ext/obj..mpilerId.c  line:242', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 245, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @ext/obj..mpilerId.c  line:245', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 248, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @ext/obj..mpilerId.c  line:248', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 251, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @ext/obj..mpilerId.c  line:251', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 254, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @ext/obj..mpilerId.c  line:254', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 257, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @ext/obj..mpilerId.c  line:257', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 260, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @ext/obj..mpilerId.c  line:260', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 263, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @ext/obj..mpilerId.c  line:263', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 266, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @ext/obj..mpilerId.c  line:266', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 269, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @ext/obj..mpilerId.c  line:269', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 272, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @ext/obj..mpilerId.c  line:272', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 275, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @ext/obj..mpilerId.c  line:275', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 278, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @ext/obj..mpilerId.c  line:278', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 281, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @ext/obj..mpilerId.c  line:281', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 284, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @ext/obj..mpilerId.c  line:284', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'action__line': 287, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @ext/obj..mpilerId.c  line:287', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 205, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @ext/obj..ilerId.cpp  line:205', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 208, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @ext/obj..ilerId.cpp  line:208', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 211, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @ext/obj..ilerId.cpp  line:211', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 214, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @ext/obj..ilerId.cpp  line:214', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 217, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @ext/obj..ilerId.cpp  line:217', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 220, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @ext/obj..ilerId.cpp  line:220', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 223, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @ext/obj..ilerId.cpp  line:223', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 226, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @ext/obj..ilerId.cpp  line:226', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 229, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @ext/obj..ilerId.cpp  line:229', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 232, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @ext/obj..ilerId.cpp  line:232', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 235, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @ext/obj..ilerId.cpp  line:235', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 238, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @ext/obj..ilerId.cpp  line:238', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 241, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @ext/obj..ilerId.cpp  line:241', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 244, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @ext/obj..ilerId.cpp  line:244', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 247, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @ext/obj..ilerId.cpp  line:247', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 250, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @ext/obj..ilerId.cpp  line:250', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 253, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @ext/obj..ilerId.cpp  line:253', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 256, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @ext/obj..ilerId.cpp  line:256', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 259, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @ext/obj..ilerId.cpp  line:259', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 262, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @ext/obj..ilerId.cpp  line:262', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 265, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @ext/obj..ilerId.cpp  line:265', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 268, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @ext/obj..ilerId.cpp  line:268', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 271, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @ext/obj..ilerId.cpp  line:271', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 274, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @ext/obj..ilerId.cpp  line:274', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 277, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @ext/obj..ilerId.cpp  line:277', 'action__tagname': 'PLATFORM_ID'}, {'word': 'PLATFORM_ID', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'action__line': 280, 'kind': 'jump_list', 'abbr': 'PLATFORM_ID                @ext/obj..ilerId.cpp  line:280', 'action__tagname': 'PLATFORM_ID'}, {'word': 'Particle', 'action__pattern': '\M^    class Particle {$', 'action__path': 'modules/optim/include/particle_swarm.h', 'kind': 'jump_list', 'abbr': 'Particle                   @modules..le_swarm.h      class Particle {', 'action__tagname': 'Particle'}, {'word': 'Particle', 'action__pattern': '\M^  ParticleSwarm::Particle::Particle($', 'action__path': 'modules/optim/src/particle.cc', 'kind': 'jump_list', 'abbr': 'Particle                   @modules..article.cc    ParticleSwarm::Particle::Particle(', 'action__tagname': 'Particle'}, {'word': 'Particle', 'action__pattern': '\M^  ParticleSwarm::Particle::Particle(const unsigned int id,$', 'action__path': 'modules/optim/src/particle.cc', 'kind': 'jump_list', 'abbr': 'Particle                   @modules..article.cc    ParticleSwarm::Particle::Particle(const unsigned int id,', 'action__tagname': 'Particle'}, {'word': 'ParticleSwarm', 'action__pattern': '\M^class ParticleSwarm {$', 'action__path': 'modules/optim/include/particle_swarm.h', 'kind': 'jump_list', 'abbr': 'ParticleSwarm              @modules..le_swarm.h  class ParticleSwarm {', 'action__tagname': 'ParticleSwarm'}, {'word': 'ParticleSwarm', 'action__pattern': '\M^  ParticleSwarm::ParticleSwarm($', 'action__path': 'modules/optim/src/particle_swarm.cc', 'kind': 'jump_list', 'abbr': 'ParticleSwarm              @modules..e_swarm.cc    ParticleSwarm::ParticleSwarm(', 'action__tagname': 'ParticleSwarm'}, {'word': 'ParticleSwarmDemo', 'action__pattern': '\M^      ParticleSwarmDemo($', 'action__path': 'apps/particle_swarm_demo/src/main.cc', 'kind': 'jump_list', 'abbr': 'ParticleSwarmDemo          @apps/pa..rc/main.cc        ParticleSwarmDemo(', 'action__tagname': 'ParticleSwarmDemo'}, {'word': 'ParticleSwarmDemo', 'action__pattern': '\M^  class ParticleSwarmDemo {$', 'action__path': 'apps/particle_swarm_demo/src/main.cc', 'kind': 'jump_list', 'abbr': 'ParticleSwarmDemo          @apps/pa..rc/main.cc    class ParticleSwarmDemo {', 'action__tagname': 'ParticleSwarmDemo'}, {'word': 'Pipeline', 'action__pattern': '\M^class Pipeline$', 'action__path': 'modules/gl/include/pipeline.h', 'kind': 'jump_list', 'abbr': 'Pipeline                   @modules..pipeline.h  class Pipeline', 'action__tagname': 'Pipeline'}, {'word': 'Pipeline', 'action__pattern': '\M^Pipeline::Pipeline()$', 'action__path': 'modules/gl/src/pipeline.cc', 'kind': 'jump_list', 'abbr': 'Pipeline                   @modules..ipeline.cc  Pipeline::Pipeline()', 'action__tagname': 'Pipeline'}, {'word': 'Pose', 'action__pattern': '\M^class Pose {$', 'action__path': 'modules/core/include/old_pose.h', 'kind': 'jump_list', 'abbr': 'Pose                       @modules..old_pose.h  class Pose {', 'action__tagname': 'Pose'}, {'word': 'Pose', 'action__pattern': '\M^Pose<T>::Pose() {}$', 'action__path': 'modules/core/include/pose.h', 'kind': 'jump_list', 'abbr': 'Pose                       @modules..ude/pose.h  Pose<T>::Pose() {}', 'action__tagname': 'Pose'}, {'word': 'Pose', 'action__pattern': '\M^Pose<T>::Pose(const std::string& n) : name(n) {}$', 'action__path': 'modules/core/include/pose.h', 'kind': 'jump_list', 'abbr': 'Pose                       @modules..ude/pose.h  Pose<T>::Pose(const std::string& n) : name(n) {}', 'action__tagname': 'Pose'}, {'word': 'Pose', 'action__pattern': '\M^class Pose {$', 'action__path': 'modules/core/include/pose.h', 'kind': 'jump_list', 'abbr': 'Pose                       @modules..ude/pose.h  class Pose {', 'action__tagname': 'Pose'}, {'word': 'Pose', 'action__pattern': '\M^Pose::Pose() {$', 'action__path': 'modules/core/src/old_pose.cc', 'kind': 'jump_list', 'abbr': 'Pose                       @modules..ld_pose.cc  Pose::Pose() {', 'action__tagname': 'Pose'}, {'word': 'PoseCreator', 'action__pattern': '\M^    PoseCreator(GLFWwindow* w, const PoseCreatorOptions& o) try :$', 'action__path': 'apps/pose_creator/src/main.cc', 'kind': 'jump_list', 'abbr': 'PoseCreator                @apps/po..rc/main.cc      PoseCreator(GLFWwindow* w, const PoseCreatorOptions& o) try :', 'action__tagname': 'PoseCreator'}, {'word': 'PoseCreator', 'action__pattern': '\M^class PoseCreator {$', 'action__path': 'apps/pose_creator/src/main.cc', 'kind': 'jump_list', 'abbr': 'PoseCreator                @apps/po..rc/main.cc  class PoseCreator {', 'action__tagname': 'PoseCreator'}, {'word': 'PoseCreatorOptions', 'action__pattern': '\M^      PoseCreatorOptions() :$', 'action__path': 'apps/pose_creator/include/pose_creator_options.h', 'kind': 'jump_list', 'abbr': 'PoseCreatorOptions         @apps/po.._options.h        PoseCreatorOptions() :', 'action__tagname': 'PoseCreatorOptions'}, {'word': 'PoseCreatorOptions', 'action__pattern': '\M^  class PoseCreatorOptions$', 'action__path': 'apps/pose_creator/include/pose_creator_options.h', 'kind': 'jump_list', 'abbr': 'PoseCreatorOptions         @apps/po.._options.h    class PoseCreatorOptions', 'action__tagname': 'PoseCreatorOptions'}, {'word': 'PoseInterpolator', 'action__pattern': '\M^PoseInterpolator::PoseInterpolator(const PoseInterpolatorOptions& o) :$', 'action__path': 'apps/pose_interpolator/src/main.cc', 'kind': 'jump_list', 'abbr': 'PoseInterpolator           @apps/po..rc/main.cc  PoseInterpolator::PoseInterpolator(const PoseInterpolatorOptions& o) :', 'action__tagname': 'PoseInterpolator'}, {'word': 'PoseInterpolator', 'action__pattern': '\M^class PoseInterpolator {$', 'action__path': 'apps/pose_interpolator/src/main.cc', 'kind': 'jump_list', 'abbr': 'PoseInterpolator           @apps/po..rc/main.cc  class PoseInterpolator {', 'action__tagname': 'PoseInterpolator'}, {'word': 'PoseInterpolatorOptions', 'action__pattern': '\M^class PoseInterpolatorOptions$', 'action__path': 'apps/pose_interpolator/include/pose_interpolator_options.h', 'kind': 'jump_list', 'abbr': 'PoseInterpolatorOptions    @apps/po.._options.h  class PoseInterpolatorOptions', 'action__tagname': 'PoseInterpolatorOptions'}, {'word': 'PoseInterpolatorOptions', 'action__pattern': '\M^PoseInterpolatorOptions::PoseInterpolatorOptions() :$', 'action__path': 'apps/pose_interpolator/src/pose_interpolator_options.cc', 'kind': 'jump_list', 'abbr': 'PoseInterpolatorOptions    @apps/po..options.cc  PoseInterpolatorOptions::PoseInterpolatorOptions() :', 'action__tagname': 'PoseInterpolatorOptions'}, {'word': 'PoseReader', 'action__pattern': '\M^class PoseReader {$', 'action__path': 'modules/io/include/pose_reader.h', 'kind': 'jump_list', 'abbr': 'PoseReader                 @modules..e_reader.h  class PoseReader {', 'action__tagname': 'PoseReader'}, {'word': 'PoseRenderer', 'action__pattern': '\M^class PoseRenderer$', 'action__path': 'apps/pose_renderer/include/pose_renderer.h', 'kind': 'jump_list', 'abbr': 'PoseRenderer               @apps/po..renderer.h  class PoseRenderer', 'action__tagname': 'PoseRenderer'}, {'word': 'PoseRenderer', 'action__pattern': '\M^PoseRenderer::PoseRenderer(GLFWwindow* w, const PoseRendererOptions& o) try$', 'action__path': 'apps/pose_renderer/src/pose_renderer.cc', 'kind': 'jump_list', 'abbr': 'PoseRenderer               @apps/po..enderer.cc  PoseRenderer::PoseRenderer(GLFWwindow* w, const PoseRendererOptions& o) try', 'action__tagname': 'PoseRenderer'}, {'word': 'PoseRendererOptions', 'action__pattern': '\M^    PoseRendererOptions() :$', 'action__path': 'apps/pose_renderer/include/pose_renderer_options.h', 'kind': 'jump_list', 'abbr': 'PoseRendererOptions        @apps/po.._options.h      PoseRendererOptions() :', 'action__tagname': 'PoseRendererOptions'}, {'word': 'PoseRendererOptions', 'action__pattern': '\M^class PoseRendererOptions$', 'action__path': 'apps/pose_renderer/include/pose_renderer_options.h', 'kind': 'jump_list', 'abbr': 'PoseRendererOptions        @apps/po.._options.h  class PoseRendererOptions', 'action__tagname': 'PoseRendererOptions'}, {'word': 'PoseShader', 'action__pattern': '\M^class PoseShader {$', 'action__path': 'modules/gl/include/pose_shader.h', 'kind': 'jump_list', 'abbr': 'PoseShader                 @modules..e_shader.h  class PoseShader {', 'action__tagname': 'PoseShader'}, {'word': 'PoseShader', 'action__pattern': '\M^PoseShader::PoseShader(Type type) {$', 'action__path': 'modules/gl/src/pose_shader.cc', 'kind': 'jump_list', 'abbr': 'PoseShader                 @modules.._shader.cc  PoseShader::PoseShader(Type type) {', 'action__tagname': 'PoseShader'}, {'word': 'PoseShader', 'action__pattern': '\M^PoseShader::PoseShader(const std::string& vertFile,$', 'action__path': 'modules/gl/src/pose_shader.cc', 'kind': 'jump_list', 'abbr': 'PoseShader                 @modules.._shader.cc  PoseShader::PoseShader(const std::string& vertFile,', 'action__tagname': 'PoseShader'}, {'word': 'PoseViewer', 'action__pattern': '\M^    PoseViewer(GLFWwindow* w, const PoseViewerOptions& o) try :$', 'action__path': 'apps/pose_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'PoseViewer                 @apps/po..rc/main.cc      PoseViewer(GLFWwindow* w, const PoseViewerOptions& o) try :', 'action__tagname': 'PoseViewer'}, {'word': 'PoseViewer', 'action__pattern': '\M^class PoseViewer {$', 'action__path': 'apps/pose_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'PoseViewer                 @apps/po..rc/main.cc  class PoseViewer {', 'action__tagname': 'PoseViewer'}, {'word': 'PoseViewerOptions', 'action__pattern': '\M^      PoseViewerOptions() :$', 'action__path': 'apps/pose_viewer/include/pose_viewer_options.h', 'kind': 'jump_list', 'abbr': 'PoseViewerOptions          @apps/po.._options.h        PoseViewerOptions() :', 'action__tagname': 'PoseViewerOptions'}, {'word': 'PoseViewerOptions', 'action__pattern': '\M^  class PoseViewerOptions$', 'action__path': 'apps/pose_viewer/include/pose_viewer_options.h', 'kind': 'jump_list', 'abbr': 'PoseViewerOptions          @apps/po.._options.h    class PoseViewerOptions', 'action__tagname': 'PoseViewerOptions'}, {'word': 'Prism', 'action__pattern': '\M^class Prism$', 'action__path': 'modules/gl/include/prism.h', 'kind': 'jump_list', 'abbr': 'Prism                      @modules..de/prism.h  class Prism', 'action__tagname': 'Prism'}, {'word': 'Prism', 'action__pattern': '\M^Prism::Prism(double radius, double height, unsigned int sides) {$', 'action__path': 'modules/gl/src/prism.cc', 'kind': 'jump_list', 'abbr': 'Prism                      @modules..c/prism.cc  Prism::Prism(double radius, double height, unsigned int sides) {', 'action__tagname': 'Prism'}, {'word': 'QuadricHand', 'action__pattern': '\M^class QuadricHand$', 'action__path': 'modules/gl/include/quadric_hand.h', 'kind': 'jump_list', 'abbr': 'QuadricHand                @modules..ric_hand.h  class QuadricHand', 'action__tagname': 'QuadricHand'}, {'word': 'QuadricHand', 'action__pattern': '\M^QuadricHand::QuadricHand(const std::vector<double>& params) :$', 'action__path': 'modules/gl/src/quadric_hand.cc', 'kind': 'jump_list', 'abbr': 'QuadricHand                @modules..ic_hand.cc  QuadricHand::QuadricHand(const std::vector<double>& params) :', 'action__tagname': 'QuadricHand'}, {'word': 'READBIT', 'action__path': 'ext/lodepng/lodepng.cpp', 'action__line': 422, 'kind': 'jump_list', 'abbr': 'READBIT                    @ext/lod..odepng.cpp  line:422', 'action__tagname': 'READBIT'}, {'word': 'RGB_CAMERA_IMAGE', 'action__pattern': '\M^    UNKNOWN = -1, DEPTH_CAMERA_IMAGE = 0, RGB_CAMERA_IMAGE$', 'action__path': 'ext/objective_functions/xing/aig/camera_image.hpp', 'kind': 'jump_list', 'abbr': 'RGB_CAMERA_IMAGE           @ext/obj.._image.hpp      UNKNOWN = -1, DEPTH_CAMERA_IMAGE = 0, RGB_CAMERA_IMAGE', 'action__tagname': 'RGB_CAMERA_IMAGE'}, {'word': 'RING', 'action__pattern': '\M^      RING = 2,$', 'action__path': 'modules/gl/include/quadric_hand.h', 'kind': 'jump_list', 'abbr': 'RING                       @modules..ric_hand.h        RING = 2,', 'action__tagname': 'RING'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/Makefile       RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/apps/34dof_to_json/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/a..n/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/apps/34dof_to_json/src/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/a..c/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/apps/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/apps/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/apps/abalone_forest/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/a..t/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/apps/abalone_forest/src/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/a..c/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/apps/bmvc_project/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/a..t/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/apps/bmvc_project/include/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/a..e/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/apps/bmvc_project/src/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/a..c/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/apps/compare_poses/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/a..s/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/apps/compare_poses/src/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/a..c/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/apps/depth_shader_viewer/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/a..r/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/apps/depth_shader_viewer/include/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/a..e/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/apps/depth_shader_viewer/src/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/a..c/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/apps/edge_shader_viewer/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/a..r/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/apps/edge_shader_viewer/include/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/a..e/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/apps/edge_shader_viewer/src/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/a..c/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/apps/gbuffer_viewer/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/a..r/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/apps/gbuffer_viewer/include/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/a..e/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/apps/gbuffer_viewer/src/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/a..c/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/apps/lrt_tester/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/a..r/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/apps/lrt_tester/src/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/a..c/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/apps/multicam_mesh_viewer/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/a..r/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/apps/multicam_mesh_viewer/include/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/a..e/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/apps/multicam_mesh_viewer/src/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/a..c/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/apps/particle_swarm_demo/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/a..o/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/apps/particle_swarm_demo/src/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/a..c/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/apps/pose_creator/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/a..r/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/apps/pose_creator/include/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/a..e/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/apps/pose_creator/src/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/a..c/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/apps/pose_interpolator/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/a..r/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/apps/pose_interpolator/include/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/a..e/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/apps/pose_interpolator/src/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/a..c/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/apps/pose_renderer/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/a..r/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/apps/pose_renderer/include/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/a..e/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/apps/pose_renderer/src/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/a..c/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/apps/pose_viewer/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/a..r/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/apps/pose_viewer/include/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/a..e/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/apps/pose_viewer/src/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/a..c/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/apps/skel_viewer/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/a..r/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/apps/skel_viewer/src/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/a..c/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/apps/sph_renderer/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/a..r/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/apps/sph_renderer/src/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/a..c/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/apps/sphere_model_maker/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/a..r/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/apps/sphere_model_maker/src/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/a..c/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/apps/sphere_model_optim/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/a..m/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/apps/sphere_model_optim/src/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/a..c/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/apps/sphere_model_renderer/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/a..r/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/apps/sphere_model_renderer/src/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/a..c/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/apps/tang_lrf/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/a..f/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/apps/tang_lrf/src/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/a..c/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/modules/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/m..s/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/modules/core/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/m..e/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/modules/core/include/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/m..e/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/modules/core/src/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/m..c/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/modules/geom/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/m..m/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/modules/geom/include/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/m..e/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/modules/geom/src/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/m..c/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/modules/gl/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/m..l/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/modules/gl/include/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/m..e/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/modules/gl/src/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/m..c/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/modules/img/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/m..g/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/modules/img/include/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/m..e/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/modules/img/src/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/m..c/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/modules/io/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/m..o/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/modules/io/include/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/m..e/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/modules/io/src/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/m..c/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/modules/ml/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/m..l/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/modules/ml/include/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/m..e/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/modules/ml/src/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/m..c/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/modules/optim/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/m..m/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/modules/optim/include/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/m..e/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'build/modules/optim/src/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @build/m..c/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'ext/objective_functions/build/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @ext/obj..d/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'ext/objective_functions/build/prog/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @ext/obj..g/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'RM', 'action__pattern': '\M^RM = /usr/bin/cmake -E remove -f$', 'action__path': 'ext/objective_functions/build/xing/Makefile', 'kind': 'jump_list', 'abbr': 'RM                         @ext/obj..g/Makefile  RM = \/usr\/bin\/cmake -E remove -f', 'action__tagname': 'RM'}, {'word': 'ROT_1X', 'action__pattern': '\M^    const static unsigned int ROT_1X = 0;$', 'action__path': 'modules/gl/include/quadric_hand.h', 'kind': 'jump_list', 'abbr': 'ROT_1X                     @modules..ric_hand.h      const static unsigned int ROT_1X = 0;', 'action__tagname': 'ROT_1X'}, {'word': 'ROT_1Z', 'action__pattern': '\M^    const static unsigned int ROT_1Z = 1;$', 'action__path': 'modules/gl/include/quadric_hand.h', 'kind': 'jump_list', 'abbr': 'ROT_1Z                     @modules..ric_hand.h      const static unsigned int ROT_1Z = 1;', 'action__tagname': 'ROT_1Z'}, {'word': 'ROT_2Z', 'action__pattern': '\M^    const static unsigned int ROT_2Z = 2;$', 'action__path': 'modules/gl/include/quadric_hand.h', 'kind': 'jump_list', 'abbr': 'ROT_2Z                     @modules..ric_hand.h      const static unsigned int ROT_2Z = 2;', 'action__tagname': 'ROT_2Z'}, {'word': 'ROT_3Z', 'action__pattern': '\M^    const static unsigned int ROT_3Z = 3;$', 'action__path': 'modules/gl/include/quadric_hand.h', 'kind': 'jump_list', 'abbr': 'ROT_3Z                     @modules..ric_hand.h      const static unsigned int ROT_3Z = 3;', 'action__tagname': 'ROT_3Z'}, {'word': 'RandomChooserAlgorithm', 'action__pattern': '\M^    RandomChooserAlgorithm(const RandomChooserAlgorithm& a) :$', 'action__path': 'modules/ml/include/energy_function_chooser.h', 'kind': 'jump_list', 'abbr': 'RandomChooserAlgorithm     @modules.._chooser.h      RandomChooserAlgorithm(const RandomChooserAlgorithm& a) :', 'action__tagname': 'RandomChooserAlgorithm'}, {'word': 'RandomChooserAlgorithm', 'action__pattern': '\M^    RandomChooserAlgorithm(unsigned int l) :$', 'action__path': 'modules/ml/include/energy_function_chooser.h', 'kind': 'jump_list', 'abbr': 'RandomChooserAlgorithm     @modules.._chooser.h      RandomChooserAlgorithm(unsigned int l) :', 'action__tagname': 'RandomChooserAlgorithm'}, {'word': 'RandomChooserAlgorithm', 'action__pattern': '\M^class RandomChooserAlgorithm {$', 'action__path': 'modules/ml/include/energy_function_chooser.h', 'kind': 'jump_list', 'abbr': 'RandomChooserAlgorithm     @modules.._chooser.h  class RandomChooserAlgorithm {', 'action__tagname': 'RandomChooserAlgorithm'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/Makefile       SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/apps/34dof_to_json/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/a..n/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/apps/34dof_to_json/src/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/a..c/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/apps/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/apps/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/apps/abalone_forest/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/a..t/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/apps/abalone_forest/src/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/a..c/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/apps/bmvc_project/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/a..t/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/apps/bmvc_project/include/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/a..e/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/apps/bmvc_project/src/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/a..c/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/apps/compare_poses/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/a..s/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/apps/compare_poses/src/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/a..c/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/apps/depth_shader_viewer/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/a..r/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/apps/depth_shader_viewer/include/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/a..e/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/apps/depth_shader_viewer/src/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/a..c/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/apps/edge_shader_viewer/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/a..r/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/apps/edge_shader_viewer/include/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/a..e/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/apps/edge_shader_viewer/src/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/a..c/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/apps/gbuffer_viewer/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/a..r/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/apps/gbuffer_viewer/include/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/a..e/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/apps/gbuffer_viewer/src/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/a..c/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/apps/lrt_tester/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/a..r/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/apps/lrt_tester/src/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/a..c/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/apps/multicam_mesh_viewer/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/a..r/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/apps/multicam_mesh_viewer/include/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/a..e/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/apps/multicam_mesh_viewer/src/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/a..c/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/apps/particle_swarm_demo/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/a..o/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/apps/particle_swarm_demo/src/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/a..c/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/apps/pose_creator/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/a..r/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/apps/pose_creator/include/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/a..e/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/apps/pose_creator/src/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/a..c/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/apps/pose_interpolator/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/a..r/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/apps/pose_interpolator/include/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/a..e/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/apps/pose_interpolator/src/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/a..c/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/apps/pose_renderer/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/a..r/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/apps/pose_renderer/include/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/a..e/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/apps/pose_renderer/src/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/a..c/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/apps/pose_viewer/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/a..r/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/apps/pose_viewer/include/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/a..e/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/apps/pose_viewer/src/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/a..c/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/apps/skel_viewer/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/a..r/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/apps/skel_viewer/src/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/a..c/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/apps/sph_renderer/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/a..r/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/apps/sph_renderer/src/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/a..c/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/apps/sphere_model_maker/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/a..r/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/apps/sphere_model_maker/src/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/a..c/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/apps/sphere_model_optim/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/a..m/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/apps/sphere_model_optim/src/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/a..c/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/apps/sphere_model_renderer/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/a..r/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/apps/sphere_model_renderer/src/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/a..c/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/apps/tang_lrf/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/a..f/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/apps/tang_lrf/src/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/a..c/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/modules/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/m..s/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/modules/core/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/m..e/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/modules/core/include/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/m..e/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/modules/core/src/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/m..c/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/modules/geom/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/m..m/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/modules/geom/include/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/m..e/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/modules/geom/src/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/m..c/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/modules/gl/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/m..l/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/modules/gl/include/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/m..e/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/modules/gl/src/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/m..c/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/modules/img/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/m..g/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/modules/img/include/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/m..e/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/modules/img/src/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/m..c/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/modules/io/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/m..o/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/modules/io/include/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/m..e/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/modules/io/src/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/m..c/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/modules/ml/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/m..l/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/modules/ml/include/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/m..e/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/modules/ml/src/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/m..c/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/modules/optim/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/m..m/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/modules/optim/include/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/m..e/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'build/modules/optim/src/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @build/m..c/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'ext/objective_functions/build/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @ext/obj..d/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'ext/objective_functions/build/prog/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @ext/obj..g/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SHELL', 'action__pattern': '\M^SHELL = /bin/sh$', 'action__path': 'ext/objective_functions/build/xing/Makefile', 'kind': 'jump_list', 'abbr': 'SHELL                      @ext/obj..g/Makefile  SHELL = \/bin\/sh', 'action__tagname': 'SHELL'}, {'word': 'SOURCE_EXTENSIONS', 'action__pattern': '\M^SOURCE_EXTENSIONS = [ ''.cpp'', ''.cxx'', ''.cc'', ''.c'', ''.m'', ''.mm'' ]$', 'action__path': '.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'SOURCE_EXTENSIONS          @.ycm_extra_conf.py   SOURCE_EXTENSIONS = [ ''.cpp'', ''.cxx'', ''.cc'', ''.c'', ''.m'', ''.mm'' ]', 'action__tagname': 'SOURCE_EXTENSIONS'}, {'word': 'SOURCE_EXTENSIONS', 'action__pattern': '\M^SOURCE_EXTENSIONS = [ ''.cpp'', ''.cxx'', ''.cc'', ''.c'', ''.m'', ''.mm'' ]$', 'action__path': 'apps/34dof_to_json/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'SOURCE_EXTENSIONS          @apps/34..ra_conf.py  SOURCE_EXTENSIONS = [ ''.cpp'', ''.cxx'', ''.cc'', ''.c'', ''.m'', ''.mm'' ]', 'action__tagname': 'SOURCE_EXTENSIONS'}, {'word': 'SOURCE_EXTENSIONS', 'action__pattern': '\M^SOURCE_EXTENSIONS = [ ''.cpp'', ''.cxx'', ''.cc'', ''.c'', ''.m'', ''.mm'' ]$', 'action__path': 'apps/bmvc_project/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'SOURCE_EXTENSIONS          @apps/bm..ra_conf.py  SOURCE_EXTENSIONS = [ ''.cpp'', ''.cxx'', ''.cc'', ''.c'', ''.m'', ''.mm'' ]', 'action__tagname': 'SOURCE_EXTENSIONS'}, {'word': 'SOURCE_EXTENSIONS', 'action__pattern': '\M^SOURCE_EXTENSIONS = [ ''.cpp'', ''.cxx'', ''.cc'', ''.c'', ''.m'', ''.mm'' ]$', 'action__path': 'apps/depth_shader_viewer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'SOURCE_EXTENSIONS          @apps/de..ra_conf.py  SOURCE_EXTENSIONS = [ ''.cpp'', ''.cxx'', ''.cc'', ''.c'', ''.m'', ''.mm'' ]', 'action__tagname': 'SOURCE_EXTENSIONS'}, {'word': 'SOURCE_EXTENSIONS', 'action__pattern': '\M^SOURCE_EXTENSIONS = [ ''.cpp'', ''.cxx'', ''.cc'', ''.c'', ''.m'', ''.mm'' ]$', 'action__path': 'apps/edge_shader_viewer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'SOURCE_EXTENSIONS          @apps/ed..ra_conf.py  SOURCE_EXTENSIONS = [ ''.cpp'', ''.cxx'', ''.cc'', ''.c'', ''.m'', ''.mm'' ]', 'action__tagname': 'SOURCE_EXTENSIONS'}, {'word': 'SOURCE_EXTENSIONS', 'action__pattern': '\M^SOURCE_EXTENSIONS = [ ''.cpp'', ''.cxx'', ''.cc'', ''.c'', ''.m'', ''.mm'' ]$', 'action__path': 'apps/gbuffer_viewer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'SOURCE_EXTENSIONS          @apps/gb..ra_conf.py  SOURCE_EXTENSIONS = [ ''.cpp'', ''.cxx'', ''.cc'', ''.c'', ''.m'', ''.mm'' ]', 'action__tagname': 'SOURCE_EXTENSIONS'}, {'word': 'SOURCE_EXTENSIONS', 'action__pattern': '\M^SOURCE_EXTENSIONS = [ ''.cpp'', ''.cxx'', ''.cc'', ''.c'', ''.m'', ''.mm'' ]$', 'action__path': 'apps/multicam_mesh_viewer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'SOURCE_EXTENSIONS          @apps/mu..ra_conf.py  SOURCE_EXTENSIONS = [ ''.cpp'', ''.cxx'', ''.cc'', ''.c'', ''.m'', ''.mm'' ]', 'action__tagname': 'SOURCE_EXTENSIONS'}, {'word': 'SOURCE_EXTENSIONS', 'action__pattern': '\M^SOURCE_EXTENSIONS = [ ''.cpp'', ''.cxx'', ''.cc'', ''.c'', ''.m'', ''.mm'' ]$', 'action__path': 'apps/pose_creator/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'SOURCE_EXTENSIONS          @apps/po..ra_conf.py  SOURCE_EXTENSIONS = [ ''.cpp'', ''.cxx'', ''.cc'', ''.c'', ''.m'', ''.mm'' ]', 'action__tagname': 'SOURCE_EXTENSIONS'}, {'word': 'SOURCE_EXTENSIONS', 'action__pattern': '\M^SOURCE_EXTENSIONS = [ ''.cpp'', ''.cxx'', ''.cc'', ''.c'', ''.m'', ''.mm'' ]$', 'action__path': 'apps/pose_interpolator/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'SOURCE_EXTENSIONS          @apps/po..ra_conf.py  SOURCE_EXTENSIONS = [ ''.cpp'', ''.cxx'', ''.cc'', ''.c'', ''.m'', ''.mm'' ]', 'action__tagname': 'SOURCE_EXTENSIONS'}, {'word': 'SOURCE_EXTENSIONS', 'action__pattern': '\M^SOURCE_EXTENSIONS = [ ''.cpp'', ''.cxx'', ''.cc'', ''.c'', ''.m'', ''.mm'' ]$', 'action__path': 'apps/pose_renderer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'SOURCE_EXTENSIONS          @apps/po..ra_conf.py  SOURCE_EXTENSIONS = [ ''.cpp'', ''.cxx'', ''.cc'', ''.c'', ''.m'', ''.mm'' ]', 'action__tagname': 'SOURCE_EXTENSIONS'}, {'word': 'SOURCE_EXTENSIONS', 'action__pattern': '\M^SOURCE_EXTENSIONS = [ ''.cpp'', ''.cxx'', ''.cc'', ''.c'', ''.m'', ''.mm'' ]$', 'action__path': 'apps/pose_viewer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'SOURCE_EXTENSIONS          @apps/po..ra_conf.py  SOURCE_EXTENSIONS = [ ''.cpp'', ''.cxx'', ''.cc'', ''.c'', ''.m'', ''.mm'' ]', 'action__tagname': 'SOURCE_EXTENSIONS'}, {'word': 'SPHERE_PARAMS', 'action__pattern': '\M^const unsigned int SPHERE_PARAMS = 4;$', 'action__path': 'apps/sphere_model_optim/src/main.cc', 'kind': 'jump_list', 'abbr': 'SPHERE_PARAMS              @apps/sp..rc/main.cc  const unsigned int SPHERE_PARAMS = 4;', 'action__tagname': 'SPHERE_PARAMS'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/Makefile       SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/apps/34dof_to_json/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/a..n/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/apps/34dof_to_json/src/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/a..c/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/apps/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/apps/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/apps/abalone_forest/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/a..t/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/apps/abalone_forest/src/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/a..c/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/apps/bmvc_project/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/a..t/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/apps/bmvc_project/include/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/a..e/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/apps/bmvc_project/src/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/a..c/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/apps/compare_poses/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/a..s/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/apps/compare_poses/src/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/a..c/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/apps/depth_shader_viewer/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/a..r/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/apps/depth_shader_viewer/include/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/a..e/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/apps/depth_shader_viewer/src/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/a..c/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/apps/edge_shader_viewer/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/a..r/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/apps/edge_shader_viewer/include/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/a..e/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/apps/edge_shader_viewer/src/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/a..c/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/apps/gbuffer_viewer/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/a..r/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/apps/gbuffer_viewer/include/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/a..e/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/apps/gbuffer_viewer/src/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/a..c/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/apps/lrt_tester/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/a..r/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/apps/lrt_tester/src/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/a..c/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/apps/multicam_mesh_viewer/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/a..r/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/apps/multicam_mesh_viewer/include/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/a..e/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/apps/multicam_mesh_viewer/src/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/a..c/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/apps/particle_swarm_demo/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/a..o/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/apps/particle_swarm_demo/src/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/a..c/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/apps/pose_creator/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/a..r/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/apps/pose_creator/include/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/a..e/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/apps/pose_creator/src/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/a..c/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/apps/pose_interpolator/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/a..r/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/apps/pose_interpolator/include/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/a..e/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/apps/pose_interpolator/src/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/a..c/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/apps/pose_renderer/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/a..r/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/apps/pose_renderer/include/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/a..e/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/apps/pose_renderer/src/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/a..c/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/apps/pose_viewer/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/a..r/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/apps/pose_viewer/include/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/a..e/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/apps/pose_viewer/src/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/a..c/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/apps/skel_viewer/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/a..r/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/apps/skel_viewer/src/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/a..c/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/apps/sph_renderer/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/a..r/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/apps/sph_renderer/src/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/a..c/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/apps/sphere_model_maker/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/a..r/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/apps/sphere_model_maker/src/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/a..c/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/apps/sphere_model_optim/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/a..m/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/apps/sphere_model_optim/src/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/a..c/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/apps/sphere_model_renderer/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/a..r/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/apps/sphere_model_renderer/src/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/a..c/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/apps/tang_lrf/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/a..f/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/apps/tang_lrf/src/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/a..c/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/modules/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/m..s/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/modules/core/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/m..e/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/modules/core/include/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/m..e/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/modules/core/src/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/m..c/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/modules/geom/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/m..m/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/modules/geom/include/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/m..e/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/modules/geom/src/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/m..c/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/modules/gl/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/m..l/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/modules/gl/include/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/m..e/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/modules/gl/src/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/m..c/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/modules/img/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/m..g/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/modules/img/include/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/m..e/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/modules/img/src/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/m..c/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/modules/io/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/m..o/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/modules/io/include/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/m..e/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/modules/io/src/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/m..c/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/modules/ml/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/m..l/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/modules/ml/include/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/m..e/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/modules/ml/src/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/m..c/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/modules/optim/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/m..m/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/modules/optim/include/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/m..e/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'build/modules/optim/src/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @build/m..c/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'ext/objective_functions/build/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @ext/obj..d/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'ext/objective_functions/build/prog/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @ext/obj..g/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'SUFFIXES', 'action__pattern': '\M^SUFFIXES =$', 'action__path': 'ext/objective_functions/build/xing/Makefile', 'kind': 'jump_list', 'abbr': 'SUFFIXES                   @ext/obj..g/Makefile  SUFFIXES =', 'action__tagname': 'SUFFIXES'}, {'word': 'ScalarSplitFunction', 'action__pattern': '\M^    ScalarSplitFunction() : x(0), y(0), t(0) { }$', 'action__path': 'modules/ml/include/scalar_split_function.h', 'kind': 'jump_list', 'abbr': 'ScalarSplitFunction        @modules..function.h      ScalarSplitFunction() : x(0), y(0), t(0) { }', 'action__tagname': 'ScalarSplitFunction'}, {'word': 'ScalarSplitFunction', 'action__pattern': '\M^    ScalarSplitFunction(int x, int y, double t) : x(x),$', 'action__path': 'modules/ml/include/scalar_split_function.h', 'kind': 'jump_list', 'abbr': 'ScalarSplitFunction        @modules..function.h      ScalarSplitFunction(int x, int y, double t) : x(x),', 'action__tagname': 'ScalarSplitFunction'}, {'word': 'ScalarSplitFunction', 'action__pattern': '\M^class ScalarSplitFunction {$', 'action__path': 'modules/ml/include/scalar_split_function.h', 'kind': 'jump_list', 'abbr': 'ScalarSplitFunction        @modules..function.h  class ScalarSplitFunction {', 'action__tagname': 'ScalarSplitFunction'}, {'word': 'ScalarSplitFunctionFactory', 'action__pattern': '\M^    ScalarSplitFunctionFactory(int maxI, double maxR) :$', 'action__path': 'modules/ml/include/scalar_split_function_factory.h', 'kind': 'jump_list', 'abbr': 'ScalarSp..FunctionFactory  @modules.._factory.h      ScalarSplitFunctionFactory(int maxI, double maxR) :', 'action__tagname': 'ScalarSplitFunctionFactory'}, {'word': 'ScalarSplitFunctionFactory', 'action__pattern': '\M^class ScalarSplitFunctionFactory {$', 'action__path': 'modules/ml/include/scalar_split_function_factory.h', 'kind': 'jump_list', 'abbr': 'ScalarSp..FunctionFactory  @modules.._factory.h  class ScalarSplitFunctionFactory {', 'action__tagname': 'ScalarSplitFunctionFactory'}, {'word': 'SetUp', 'action__pattern': '\M^    virtual void SetUp() {$', 'action__path': 'modules/ml/test/discrete_entropy_test.cc', 'kind': 'jump_list', 'abbr': 'SetUp                      @modules..py_test.cc      virtual void SetUp() {', 'action__tagname': 'SetUp'}, {'word': 'SetUp', 'action__pattern': '\M^    virtual void SetUp() {$', 'action__path': 'modules/ml/test/discrete_information_gain_test.cc', 'kind': 'jump_list', 'abbr': 'SetUp                      @modules..in_test.cc      virtual void SetUp() {', 'action__tagname': 'SetUp'}, {'word': 'Shader', 'action__pattern': '\M^class Shader {$', 'action__path': 'modules/gl/include/shader.h', 'kind': 'jump_list', 'abbr': 'Shader                     @modules..e/shader.h  class Shader {', 'action__tagname': 'Shader'}, {'word': 'Shader', 'action__pattern': '\M^Shader::Shader(GLenum type) : shaderSource(0), compiled(false) {$', 'action__path': 'modules/gl/src/shader.cc', 'kind': 'jump_list', 'abbr': 'Shader                     @modules../shader.cc  Shader::Shader(GLenum type) : shaderSource(0), compiled(false) {', 'action__tagname': 'Shader'}, {'word': 'ShaderProgram', 'action__pattern': '\M^class ShaderProgram$', 'action__path': 'modules/gl/include/shader_program.h', 'kind': 'jump_list', 'abbr': 'ShaderProgram              @modules.._program.h  class ShaderProgram', 'action__tagname': 'ShaderProgram'}, {'word': 'ShaderProgram', 'action__pattern': '\M^ShaderProgram::ShaderProgram(const std::string& vertFile,$', 'action__path': 'modules/gl/src/shader_program.cc', 'kind': 'jump_list', 'abbr': 'ShaderProgram              @modules..program.cc  ShaderProgram::ShaderProgram(const std::string& vertFile,', 'action__tagname': 'ShaderProgram'}, {'word': 'ShaderProgram', 'action__pattern': '\M^ShaderProgram::ShaderProgram(std::vector<Shader>& shaders) {$', 'action__path': 'modules/gl/src/shader_program.cc', 'kind': 'jump_list', 'abbr': 'ShaderProgram              @modules..program.cc  ShaderProgram::ShaderProgram(std::vector<Shader>& shaders) {', 'action__tagname': 'ShaderProgram'}, {'word': 'ShapeRenderer', 'action__pattern': '\M^class ShapeRenderer$', 'action__path': 'modules/gl/include/shape_renderer.h', 'kind': 'jump_list', 'abbr': 'ShapeRenderer              @modules..renderer.h  class ShapeRenderer', 'action__tagname': 'ShapeRenderer'}, {'word': 'ShapeRenderer', 'action__pattern': '\M^ShapeRenderer<Shape>::ShapeRenderer(const Shape& s) : VAO(0),$', 'action__path': 'modules/gl/src/shape_renderer.cc', 'kind': 'jump_list', 'abbr': 'ShapeRenderer              @modules..enderer.cc  ShapeRenderer<Shape>::ShapeRenderer(const Shape& s) : VAO(0),', 'action__tagname': 'ShapeRenderer'}, {'word': 'SilhouetteEvaluator', 'action__pattern': '\M^struct SilhouetteEvaluator$', 'action__path': 'ext/objective_functions/xing/aig/silhouette_evaluator.hpp', 'kind': 'jump_list', 'abbr': 'SilhouetteEvaluator        @ext/obj..luator.hpp  struct SilhouetteEvaluator', 'action__tagname': 'SilhouetteEvaluator'}, {'word': 'SkelViewer', 'action__pattern': '\M^      SkelViewer(GLFWwindow* w) : window(w) {}$', 'action__path': 'apps/skel_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'SkelViewer                 @apps/sk..rc/main.cc        SkelViewer(GLFWwindow* w) : window(w) {}', 'action__tagname': 'SkelViewer'}, {'word': 'SkelViewer', 'action__pattern': '\M^  class SkelViewer {$', 'action__path': 'apps/skel_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'SkelViewer                 @apps/sk..rc/main.cc    class SkelViewer {', 'action__tagname': 'SkelViewer'}, {'word': 'Skeleton', 'action__pattern': '\M^class Skeleton {$', 'action__path': 'modules/core/include/skeleton.h', 'kind': 'jump_list', 'abbr': 'Skeleton                   @modules..skeleton.h  class Skeleton {', 'action__tagname': 'Skeleton'}, {'word': 'Skeleton', 'action__pattern': '\M^Skeleton::Skeleton() {$', 'action__path': 'modules/core/src/skeleton.cc', 'kind': 'jump_list', 'abbr': 'Skeleton                   @modules..keleton.cc  Skeleton::Skeleton() {', 'action__tagname': 'Skeleton'}, {'word': 'SphReader', 'action__pattern': '\M^class SphReader {$', 'action__path': 'modules/io/include/sph_reader.h', 'kind': 'jump_list', 'abbr': 'SphReader                  @modules..h_reader.h  class SphReader {', 'action__tagname': 'SphReader'}, {'word': 'SphReader', 'action__pattern': '\M^SphReader::SphReader(const std::string& filename) {$', 'action__path': 'modules/io/src/sph_reader.cc', 'kind': 'jump_list', 'abbr': 'SphReader                  @modules.._reader.cc  SphReader::SphReader(const std::string& filename) {', 'action__tagname': 'SphReader'}, {'word': 'Sphere', 'action__pattern': '\M^Sphere<T>::Sphere() : radius(1.0), pos(0.0f) {}$', 'action__path': 'modules/geom/include/sphere.h', 'kind': 'jump_list', 'abbr': 'Sphere                     @modules..e/sphere.h  Sphere<T>::Sphere() : radius(1.0), pos(0.0f) {}', 'action__tagname': 'Sphere'}, {'word': 'Sphere', 'action__pattern': '\M^Sphere<T>::Sphere(T x, T y, T z, T r) : radius(r), pos(x, y, z) {}$', 'action__path': 'modules/geom/include/sphere.h', 'kind': 'jump_list', 'abbr': 'Sphere                     @modules..e/sphere.h  Sphere<T>::Sphere(T x, T y, T z, T r) : radius(r), pos(x, y, z) {}', 'action__tagname': 'Sphere'}, {'word': 'Sphere', 'action__pattern': '\M^Sphere<T>::Sphere(const glm::vec3& p, T r) : radius(r), pos(p) {}$', 'action__path': 'modules/geom/include/sphere.h', 'kind': 'jump_list', 'abbr': 'Sphere                     @modules..e/sphere.h  Sphere<T>::Sphere(const glm::vec3& p, T r) : radius(r), pos(p) {}', 'action__tagname': 'Sphere'}, {'word': 'Sphere', 'action__pattern': '\M^class Sphere {$', 'action__path': 'modules/geom/include/sphere.h', 'kind': 'jump_list', 'abbr': 'Sphere                     @modules..e/sphere.h  class Sphere {', 'action__tagname': 'Sphere'}, {'word': 'SphereModel', 'action__pattern': '\M^class SphereModel {$', 'action__path': 'modules/core/include/sphere_model.h', 'kind': 'jump_list', 'abbr': 'SphereModel                @modules..re_model.h  class SphereModel {', 'action__tagname': 'SphereModel'}, {'word': 'SphereModel', 'action__pattern': '\M^SphereModel::SphereModel($', 'action__path': 'modules/core/src/sphere_model.cc', 'kind': 'jump_list', 'abbr': 'SphereModel                @modules..e_model.cc  SphereModel::SphereModel(', 'action__tagname': 'SphereModel'}, {'word': 'SphereModelReader', 'action__pattern': '\M^class SphereModelReader {$', 'action__path': 'modules/io/include/sphere_model_reader.h', 'kind': 'jump_list', 'abbr': 'SphereModelReader          @modules..l_reader.h  class SphereModelReader {', 'action__tagname': 'SphereModelReader'}, {'word': 'SphereModelReader', 'action__pattern': '\M^SphereModelReader::SphereModelReader(const std::string& filename) {$', 'action__path': 'modules/io/src/sphere_model_reader.cc', 'kind': 'jump_list', 'abbr': 'SphereModelReader          @modules.._reader.cc  SphereModelReader::SphereModelReader(const std::string& filename) {', 'action__tagname': 'SphereModelReader'}, {'word': 'SphereModelWriter', 'action__pattern': '\M^class SphereModelWriter {$', 'action__path': 'modules/io/include/sphere_model_writer.h', 'kind': 'jump_list', 'abbr': 'SphereModelWriter          @modules..l_writer.h  class SphereModelWriter {', 'action__tagname': 'SphereModelWriter'}, {'word': 'SphereModelWriter', 'action__pattern': '\M^SphereModelWriter::SphereModelWriter(const std::string& filename) {$', 'action__path': 'modules/io/src/sphere_model_writer.cc', 'kind': 'jump_list', 'abbr': 'SphereModelWriter          @modules.._writer.cc  SphereModelWriter::SphereModelWriter(const std::string& filename) {', 'action__tagname': 'SphereModelWriter'}, {'word': 'SplitFunctionFactory', 'action__pattern': '\M^    SplitFunctionFactory(int maxI, double maxR) :$', 'action__path': 'modules/ml/include/split_function_factory.h', 'kind': 'jump_list', 'abbr': 'SplitFunctionFactory       @modules.._factory.h      SplitFunctionFactory(int maxI, double maxR) :', 'action__tagname': 'SplitFunctionFactory'}, {'word': 'SplitFunctionFactory', 'action__pattern': '\M^class SplitFunctionFactory {$', 'action__path': 'modules/ml/include/split_function_factory.h', 'kind': 'jump_list', 'abbr': 'SplitFunctionFactory       @modules.._factory.h  class SplitFunctionFactory {', 'action__tagname': 'SplitFunctionFactory'}, {'word': 'State', 'action__pattern': '\M^State::State()$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'State                      @ext/lod..odepng.cpp  State::State()', 'action__tagname': 'State'}, {'word': 'State', 'action__pattern': '\M^State::State(const State& other)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'State                      @ext/lod..odepng.cpp  State::State(const State& other)', 'action__tagname': 'State'}, {'word': 'State', 'action__pattern': '\M^class State : public LodePNGState$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'State                      @ext/lod../lodepng.h  class State : public LodePNGState', 'action__tagname': 'State'}, {'word': 'Surface', 'action__pattern': '\M^class Surface$', 'action__path': 'modules/gl/include/surface.h', 'kind': 'jump_list', 'abbr': 'Surface                    @modules../surface.h  class Surface', 'action__tagname': 'Surface'}, {'word': 'Surface', 'action__pattern': '\M^Surface::Surface(unsigned int rows, unsigned int cols,$', 'action__path': 'modules/gl/src/surface.cc', 'kind': 'jump_list', 'abbr': 'Surface                    @modules..surface.cc  Surface::Surface(unsigned int rows, unsigned int cols,', 'action__tagname': 'Surface'}, {'word': 'TEST', 'action__pattern': '\M^TEST(Constructor, Copy)$', 'action__path': 'ext/objective_functions/test/aig/test_camera_image.cc', 'kind': 'jump_list', 'abbr': 'TEST                       @ext/obj..a_image.cc  TEST(Constructor, Copy)', 'action__tagname': 'TEST'}, {'word': 'TEST', 'action__pattern': '\M^TEST(Constructor, Default)$', 'action__path': 'ext/objective_functions/test/aig/test_camera_image.cc', 'kind': 'jump_list', 'abbr': 'TEST                       @ext/obj..a_image.cc  TEST(Constructor, Default)', 'action__tagname': 'TEST'}, {'word': 'TEST', 'action__pattern': '\M^TEST(Constructor, DepthImage)$', 'action__path': 'ext/objective_functions/test/aig/test_camera_image.cc', 'kind': 'jump_list', 'abbr': 'TEST                       @ext/obj..a_image.cc  TEST(Constructor, DepthImage)', 'action__tagname': 'TEST'}, {'word': 'TEST', 'action__pattern': '\M^TEST(Constructor, DepthImageWithEdge)$', 'action__path': 'ext/objective_functions/test/aig/test_camera_image.cc', 'kind': 'jump_list', 'abbr': 'TEST                       @ext/obj..a_image.cc  TEST(Constructor, DepthImageWithEdge)', 'action__tagname': 'TEST'}, {'word': 'TEST', 'action__pattern': '\M^TEST(Constructor, RGBImage)$', 'action__path': 'ext/objective_functions/test/aig/test_camera_image.cc', 'kind': 'jump_list', 'abbr': 'TEST                       @ext/obj..a_image.cc  TEST(Constructor, RGBImage)', 'action__tagname': 'TEST'}, {'word': 'TEST', 'action__pattern': '\M^TEST(Constructor, RGBImageWithEdge)$', 'action__path': 'ext/objective_functions/test/aig/test_camera_image.cc', 'kind': 'jump_list', 'abbr': 'TEST                       @ext/obj..a_image.cc  TEST(Constructor, RGBImageWithEdge)', 'action__tagname': 'TEST'}, {'word': 'TEST', 'action__pattern': '\M^TEST(Performance, NearReal)$', 'action__path': 'ext/objective_functions/test/aig/test_camera_image_evaluator.cc', 'kind': 'jump_list', 'abbr': 'TEST                       @ext/obj..aluator.cc  TEST(Performance, NearReal)', 'action__tagname': 'TEST'}, {'word': 'TEST', 'action__pattern': '\M^TEST(Simulation, Minimum)$', 'action__path': 'ext/objective_functions/test/aig/test_camera_image_evaluator.cc', 'kind': 'jump_list', 'abbr': 'TEST                       @ext/obj..aluator.cc  TEST(Simulation, Minimum)', 'action__tagname': 'TEST'}, {'word': 'TEST', 'action__pattern': '\M^TEST(Constructor, Initialisation)$', 'action__path': 'ext/objective_functions/test/aig/test_colour_detector.cc', 'kind': 'jump_list', 'abbr': 'TEST                       @ext/obj..etector.cc  TEST(Constructor, Initialisation)', 'action__tagname': 'TEST'}, {'word': 'TEST', 'action__pattern': '\M^TEST(TrainColour, All)$', 'action__path': 'ext/objective_functions/test/aig/test_colour_detector.cc', 'kind': 'jump_list', 'abbr': 'TEST                       @ext/obj..etector.cc  TEST(TrainColour, All)', 'action__tagname': 'TEST'}, {'word': 'TEST', 'action__pattern': '\M^TEST(DpethEvaluator, AllMatchedDepth)$', 'action__path': 'ext/objective_functions/test/aig/test_depth_evaluator.cc', 'kind': 'jump_list', 'abbr': 'TEST                       @ext/obj..aluator.cc  TEST(DpethEvaluator, AllMatchedDepth)', 'action__tagname': 'TEST'}, {'word': 'TEST', 'action__pattern': '\M^TEST(DpethEvaluator, AllMatchedRGB)$', 'action__path': 'ext/objective_functions/test/aig/test_depth_evaluator.cc', 'kind': 'jump_list', 'abbr': 'TEST                       @ext/obj..aluator.cc  TEST(DpethEvaluator, AllMatchedRGB)', 'action__tagname': 'TEST'}, {'word': 'TEST', 'action__pattern': '\M^TEST(DpethEvaluator, AllMismatchedDepth)$', 'action__path': 'ext/objective_functions/test/aig/test_depth_evaluator.cc', 'kind': 'jump_list', 'abbr': 'TEST                       @ext/obj..aluator.cc  TEST(DpethEvaluator, AllMismatchedDepth)', 'action__tagname': 'TEST'}, {'word': 'TEST', 'action__pattern': '\M^TEST(DpethEvaluator, AllMismatchedRGB)$', 'action__path': 'ext/objective_functions/test/aig/test_depth_evaluator.cc', 'kind': 'jump_list', 'abbr': 'TEST                       @ext/obj..aluator.cc  TEST(DpethEvaluator, AllMismatchedRGB)', 'action__tagname': 'TEST'}, {'word': 'TEST', 'action__pattern': '\M^TEST(DpethEvaluator, EmptyImageAndZeroDivision)$', 'action__path': 'ext/objective_functions/test/aig/test_depth_evaluator.cc', 'kind': 'jump_list', 'abbr': 'TEST                       @ext/obj..aluator.cc  TEST(DpethEvaluator, EmptyImageAndZeroDivision)', 'action__tagname': 'TEST'}, {'word': 'TEST', 'action__pattern': '\M^TEST(DepthOverlapEvaluator, AllMatched)$', 'action__path': 'ext/objective_functions/test/aig/test_depth_overlap_evaluator.cc', 'kind': 'jump_list', 'abbr': 'TEST                       @ext/obj..aluator.cc  TEST(DepthOverlapEvaluator, AllMatched)', 'action__tagname': 'TEST'}, {'word': 'TEST', 'action__pattern': '\M^TEST(DepthOverlapEvaluator, AllMismatched)$', 'action__path': 'ext/objective_functions/test/aig/test_depth_overlap_evaluator.cc', 'kind': 'jump_list', 'abbr': 'TEST                       @ext/obj..aluator.cc  TEST(DepthOverlapEvaluator, AllMismatched)', 'action__tagname': 'TEST'}, {'word': 'TEST', 'action__pattern': '\M^TEST(DepthOverlapEvaluator, DivideByZero)$', 'action__path': 'ext/objective_functions/test/aig/test_depth_overlap_evaluator.cc', 'kind': 'jump_list', 'abbr': 'TEST                       @ext/obj..aluator.cc  TEST(DepthOverlapEvaluator, DivideByZero)', 'action__tagname': 'TEST'}, {'word': 'TEST', 'action__pattern': '\M^TEST(DepthOverlapEvaluator, TypeCheck)$', 'action__path': 'ext/objective_functions/test/aig/test_depth_overlap_evaluator.cc', 'kind': 'jump_list', 'abbr': 'TEST                       @ext/obj..aluator.cc  TEST(DepthOverlapEvaluator, TypeCheck)', 'action__tagname': 'TEST'}, {'word': 'TEST', 'action__pattern': '\M^TEST(EdgeDistanceMap, EdgeDistance)$', 'action__path': 'ext/objective_functions/test/aig/test_edge_distance_map.cc', 'kind': 'jump_list', 'abbr': 'TEST                       @ext/obj..nce_map.cc  TEST(EdgeDistanceMap, EdgeDistance)', 'action__tagname': 'TEST'}, {'word': 'TEST', 'action__pattern': '\M^TEST(EdgeDistanceMap, EdgePointList)$', 'action__path': 'ext/objective_functions/test/aig/test_edge_distance_map.cc', 'kind': 'jump_list', 'abbr': 'TEST                       @ext/obj..nce_map.cc  TEST(EdgeDistanceMap, EdgePointList)', 'action__tagname': 'TEST'}, {'word': 'TEST', 'action__pattern': '\M^TEST(EdgeDistanceMap, SetNewEdge)$', 'action__path': 'ext/objective_functions/test/aig/test_edge_distance_map.cc', 'kind': 'jump_list', 'abbr': 'TEST                       @ext/obj..nce_map.cc  TEST(EdgeDistanceMap, SetNewEdge)', 'action__tagname': 'TEST'}, {'word': 'TEST', 'action__pattern': '\M^TEST(EdgeEvaluator, AllMatched)$', 'action__path': 'ext/objective_functions/test/aig/test_edge_evaluator.cc', 'kind': 'jump_list', 'abbr': 'TEST                       @ext/obj..aluator.cc  TEST(EdgeEvaluator, AllMatched)', 'action__tagname': 'TEST'}, {'word': 'TEST', 'action__pattern': '\M^TEST(EdgeEvaluator, AllMisatched)$', 'action__path': 'ext/objective_functions/test/aig/test_edge_evaluator.cc', 'kind': 'jump_list', 'abbr': 'TEST                       @ext/obj..aluator.cc  TEST(EdgeEvaluator, AllMisatched)', 'action__tagname': 'TEST'}, {'word': 'TEST', 'action__pattern': '\M^TEST(SilhouetteEvaluator, AllMatched)$', 'action__path': 'ext/objective_functions/test/aig/test_silhouette_evaluator.cc', 'kind': 'jump_list', 'abbr': 'TEST                       @ext/obj..aluator.cc  TEST(SilhouetteEvaluator, AllMatched)', 'action__tagname': 'TEST'}, {'word': 'TEST', 'action__pattern': '\M^TEST(SilhouetteEvaluator, AllMatchedDepth)$', 'action__path': 'ext/objective_functions/test/aig/test_silhouette_evaluator.cc', 'kind': 'jump_list', 'abbr': 'TEST                       @ext/obj..aluator.cc  TEST(SilhouetteEvaluator, AllMatchedDepth)', 'action__tagname': 'TEST'}, {'word': 'TEST', 'action__pattern': '\M^TEST(SilhouetteEvaluator, AllMismatched)$', 'action__path': 'ext/objective_functions/test/aig/test_silhouette_evaluator.cc', 'kind': 'jump_list', 'abbr': 'TEST                       @ext/obj..aluator.cc  TEST(SilhouetteEvaluator, AllMismatched)', 'action__tagname': 'TEST'}, {'word': 'TEST', 'action__pattern': '\M^TEST(SilhouetteEvaluator, AllMismatchedDepth)$', 'action__path': 'ext/objective_functions/test/aig/test_silhouette_evaluator.cc', 'kind': 'jump_list', 'abbr': 'TEST                       @ext/obj..aluator.cc  TEST(SilhouetteEvaluator, AllMismatchedDepth)', 'action__tagname': 'TEST'}, {'word': 'TEST', 'action__pattern': '\M^TEST(SilhouetteEvaluator, DivisionByZeroSafe)$', 'action__path': 'ext/objective_functions/test/aig/test_silhouette_evaluator.cc', 'kind': 'jump_list', 'abbr': 'TEST                       @ext/obj..aluator.cc  TEST(SilhouetteEvaluator, DivisionByZeroSafe)', 'action__tagname': 'TEST'}, {'word': 'TEST_F', 'action__pattern': '\M^TEST_F(DiscreteEntropyTest, AllVsHalf) {$', 'action__path': 'modules/ml/test/discrete_entropy_test.cc', 'kind': 'jump_list', 'abbr': 'TEST_F                     @modules..py_test.cc  TEST_F(DiscreteEntropyTest, AllVsHalf) {', 'action__tagname': 'TEST_F'}, {'word': 'TEST_F', 'action__pattern': '\M^TEST_F(DiscreteEntropyTest, HalfVsQuarter) {$', 'action__path': 'modules/ml/test/discrete_entropy_test.cc', 'kind': 'jump_list', 'abbr': 'TEST_F                     @modules..py_test.cc  TEST_F(DiscreteEntropyTest, HalfVsQuarter) {', 'action__tagname': 'TEST_F'}, {'word': 'TEST_F', 'action__pattern': '\M^TEST_F(DiscreteEntropyTest, QuarterVsEighth) {$', 'action__path': 'modules/ml/test/discrete_entropy_test.cc', 'kind': 'jump_list', 'abbr': 'TEST_F                     @modules..py_test.cc  TEST_F(DiscreteEntropyTest, QuarterVsEighth) {', 'action__tagname': 'TEST_F'}, {'word': 'TEST_F', 'action__pattern': '\M^TEST_F(DIGTest, NoSplitVsPerfectSplit) {$', 'action__path': 'modules/ml/test/discrete_information_gain_test.cc', 'kind': 'jump_list', 'abbr': 'TEST_F                     @modules..in_test.cc  TEST_F(DIGTest, NoSplitVsPerfectSplit) {', 'action__tagname': 'TEST_F'}, {'word': 'TEST_F', 'action__pattern': '\M^TEST_F(DIGTest, PerfectSplitVsUnhelpful) {$', 'action__path': 'modules/ml/test/discrete_information_gain_test.cc', 'kind': 'jump_list', 'abbr': 'TEST_F                     @modules..in_test.cc  TEST_F(DIGTest, PerfectSplitVsUnhelpful) {', 'action__tagname': 'TEST_F'}, {'word': 'TEST_F', 'action__pattern': '\M^TEST_F(DIGTest, UnhelpfulVsMoreHelpful) {$', 'action__path': 'modules/ml/test/discrete_information_gain_test.cc', 'kind': 'jump_list', 'abbr': 'TEST_F                     @modules..in_test.cc  TEST_F(DIGTest, UnhelpfulVsMoreHelpful) {', 'action__tagname': 'TEST_F'}, {'word': 'TRAIN', 'action__pattern': '\M^enum {TRAIN, DETECT, UNKNOWN} programMode = UNKNOWN;$', 'action__path': 'ext/objective_functions/prog/colour-detect/main.cc', 'kind': 'jump_list', 'abbr': 'TRAIN                      @ext/obj..ct/main.cc  enum {TRAIN, DETECT, UNKNOWN} programMode = UNKNOWN;', 'action__tagname': 'TRAIN'}, {'word': 'TangPoseReader', 'action__pattern': '\M^class TangPoseReader : public PoseReader<glm::vec3> {$', 'action__path': 'modules/io/include/tang_pose_reader.h', 'kind': 'jump_list', 'abbr': 'TangPoseReader             @modules..e_reader.h  class TangPoseReader : public PoseReader<glm::vec3> {', 'action__tagname': 'TangPoseReader'}, {'word': 'TangPoseReader', 'action__pattern': '\M^TangPoseReader::TangPoseReader(const std::string& filename) {$', 'action__path': 'modules/io/src/tang_pose_reader.cc', 'kind': 'jump_list', 'abbr': 'TangPoseReader             @modules.._reader.cc  TangPoseReader::TangPoseReader(const std::string& filename) {', 'action__tagname': 'TangPoseReader'}, {'word': 'Texture', 'action__pattern': '\M^class Texture$', 'action__path': 'modules/gl/include/texture.h', 'kind': 'jump_list', 'abbr': 'Texture                    @modules../texture.h  class Texture', 'action__tagname': 'Texture'}, {'word': 'Texture', 'action__pattern': '\M^Texture::Texture() : textureObject(0), empty(true) {$', 'action__path': 'modules/gl/src/texture.cc', 'kind': 'jump_list', 'abbr': 'Texture                    @modules..texture.cc  Texture::Texture() : textureObject(0), empty(true) {', 'action__tagname': 'Texture'}, {'word': 'Texture', 'action__pattern': '\M^Texture::Texture(Texture&& rhs) : textureObject(rhs.textureObject),$', 'action__path': 'modules/gl/src/texture.cc', 'kind': 'jump_list', 'abbr': 'Texture                    @modules..texture.cc  Texture::Texture(Texture&& rhs) : textureObject(rhs.textureObject),', 'action__tagname': 'Texture'}, {'word': 'Tiler', 'action__pattern': '\M^class Tiler {$', 'action__path': 'modules/gl/include/tiler.h', 'kind': 'jump_list', 'abbr': 'Tiler                      @modules..de/tiler.h  class Tiler {', 'action__tagname': 'Tiler'}, {'word': 'Tiler', 'action__pattern': '\M^Tiler::Tiler(unsigned int size) {$', 'action__path': 'modules/gl/src/tiler.cc', 'kind': 'jump_list', 'abbr': 'Tiler                      @modules..c/tiler.cc  Tiler::Tiler(unsigned int size) {', 'action__tagname': 'Tiler'}, {'word': 'TrainingData', 'action__pattern': '\M^    TrainingData(DataType d, LabelTypes... l) : data(d), labels(l...) { }$', 'action__path': 'modules/ml/include/training_data.h', 'kind': 'jump_list', 'abbr': 'TrainingData               @modules..ing_data.h      TrainingData(DataType d, LabelTypes... l) : data(d), labels(l...) { }', 'action__tagname': 'TrainingData'}, {'word': 'TrainingData', 'action__pattern': '\M^class TrainingData {$', 'action__path': 'modules/ml/include/training_data.h', 'kind': 'jump_list', 'abbr': 'TrainingData               @modules..ing_data.h  class TrainingData {', 'action__tagname': 'TrainingData'}, {'word': 'TreeNode', 'action__pattern': '\M^struct TreeNode {$', 'action__path': 'modules/ml/include/tree_node.h', 'kind': 'jump_list', 'abbr': 'TreeNode                   @modules..ree_node.h  struct TreeNode {', 'action__tagname': 'TreeNode'}, {'word': 'Type', 'action__pattern': '\M^    enum class Type { depth, textured, colours, normal };$', 'action__path': 'modules/gl/include/pose_shader.h', 'kind': 'jump_list', 'abbr': 'Type                       @modules..e_shader.h      enum class Type { depth, textured, colours, normal };', 'action__tagname': 'Type'}, {'word': 'UNKNOWN', 'action__pattern': '\M^enum {TRAIN, DETECT, UNKNOWN} programMode = UNKNOWN;$', 'action__path': 'ext/objective_functions/prog/colour-detect/main.cc', 'kind': 'jump_list', 'abbr': 'UNKNOWN                    @ext/obj..ct/main.cc  enum {TRAIN, DETECT, UNKNOWN} programMode = UNKNOWN;', 'action__tagname': 'UNKNOWN'}, {'word': 'UNKNOWN', 'action__pattern': '\M^    UNKNOWN = -1, DEPTH_CAMERA_IMAGE = 0, RGB_CAMERA_IMAGE$', 'action__path': 'ext/objective_functions/xing/aig/camera_image.hpp', 'kind': 'jump_list', 'abbr': 'UNKNOWN                    @ext/obj.._image.hpp      UNKNOWN = -1, DEPTH_CAMERA_IMAGE = 0, RGB_CAMERA_IMAGE', 'action__tagname': 'UNKNOWN'}, {'word': 'Utility', 'action__pattern': '\M^class Utility {$', 'action__path': 'modules/core/include/utility.h', 'kind': 'jump_list', 'abbr': 'Utility                    @modules../utility.h  class Utility {', 'action__tagname': 'Utility'}, {'word': 'VAO', 'action__pattern': '\M^    GLuint VAO;$', 'action__path': 'modules/gl/include/instanced_mesh_renderer.h', 'kind': 'jump_list', 'abbr': 'VAO                        @modules..renderer.h      GLuint VAO;', 'action__tagname': 'VAO'}, {'word': 'VAO', 'action__pattern': '\M^    GLuint VAO;$', 'action__path': 'modules/gl/include/instanced_shape_renderer.h', 'kind': 'jump_list', 'abbr': 'VAO                        @modules..renderer.h      GLuint VAO;', 'action__tagname': 'VAO'}, {'word': 'VAO', 'action__pattern': '\M^    GLuint VAO;$', 'action__path': 'modules/gl/include/mesh_renderer.h', 'kind': 'jump_list', 'abbr': 'VAO                        @modules..renderer.h      GLuint VAO;', 'action__tagname': 'VAO'}, {'word': 'VAO', 'action__pattern': '\M^    GLuint VAO;$', 'action__path': 'modules/gl/include/shape_renderer.h', 'kind': 'jump_list', 'abbr': 'VAO                        @modules..renderer.h      GLuint VAO;', 'action__tagname': 'VAO'}, {'word': 'VERSION_STRING', 'action__path': 'ext/lodepng/lodepng.cpp', 'action__line': 40, 'kind': 'jump_list', 'abbr': 'VERSION_STRING             @ext/lod..odepng.cpp  line:40', 'action__tagname': 'VERSION_STRING'}, {'word': 'VPTransformation', 'action__pattern': '\M^    glm::mat4 VPTransformation;$', 'action__path': 'modules/gl/include/pipeline.h', 'kind': 'jump_list', 'abbr': 'VPTransformation           @modules..pipeline.h      glm::mat4 VPTransformation;', 'action__tagname': 'VPTransformation'}, {'word': 'VTransformation', 'action__pattern': '\M^    glm::mat4 VTransformation;$', 'action__path': 'modules/gl/include/pipeline.h', 'kind': 'jump_list', 'abbr': 'VTransformation            @modules..pipeline.h      glm::mat4 VTransformation;', 'action__tagname': 'VTransformation'}, {'word': 'VertexBoneData', 'action__pattern': '\M^      VertexBoneData() {$', 'action__path': 'modules/gl/include/mesh.h', 'kind': 'jump_list', 'abbr': 'VertexBoneData             @modules..ude/mesh.h        VertexBoneData() {', 'action__tagname': 'VertexBoneData'}, {'word': 'VertexBoneData', 'action__pattern': '\M^    struct VertexBoneData {$', 'action__path': 'modules/gl/include/mesh.h', 'kind': 'jump_list', 'abbr': 'VertexBoneData             @modules..ude/mesh.h      struct VertexBoneData {', 'action__tagname': 'VertexBoneData'}, {'word': 'WenpingPoseReader', 'action__pattern': '\M^class WenpingPoseReader : public PoseReader<glm::quat> {$', 'action__path': 'modules/io/include/wenping_pose_reader.h', 'kind': 'jump_list', 'abbr': 'WenpingPoseReader          @modules..e_reader.h  class WenpingPoseReader : public PoseReader<glm::quat> {', 'action__tagname': 'WenpingPoseReader'}, {'word': 'WenpingPoseReader', 'action__pattern': '\M^WenpingPoseReader::WenpingPoseReader(const std::string& filename) {$', 'action__path': 'modules/io/src/wenping_pose_reader.cc', 'kind': 'jump_list', 'abbr': 'WenpingPoseReader          @modules.._reader.cc  WenpingPoseReader::WenpingPoseReader(const std::string& filename) {', 'action__tagname': 'WenpingPoseReader'}, {'word': 'WrappedEnergyTerm', 'action__pattern': '\M^        inline WrappedEnergyTerm(const E& s) : func(s) {}$', 'action__path': 'ext/objective_functions/xing/aig/camera_image_evaluator.hpp', 'kind': 'jump_list', 'abbr': 'WrappedEnergyTerm          @ext/obj..luator.hpp          inline WrappedEnergyTerm(const E& s) : func(s) {}', 'action__tagname': 'WrappedEnergyTerm'}, {'word': 'WrappedEnergyTerm', 'action__pattern': '\M^    struct WrappedEnergyTerm : public EnergyTerm$', 'action__path': 'ext/objective_functions/xing/aig/camera_image_evaluator.hpp', 'kind': 'jump_list', 'abbr': 'WrappedEnergyTerm          @ext/obj..luator.hpp      struct WrappedEnergyTerm : public EnergyTerm', 'action__tagname': 'WrappedEnergyTerm'}, {'word': 'X', 'action__pattern': '\M^enum OrthView {X, Y, Z};$', 'action__path': 'apps/sphere_model_renderer/src/main.cc', 'kind': 'jump_list', 'abbr': 'X                          @apps/sp..rc/main.cc  enum OrthView {X, Y, Z};', 'action__tagname': 'X'}, {'word': 'XING_AIG_CAMERA_IMAGE_EVALUATOR_HPP_', 'action__path': 'ext/objective_functions/xing/aig/camera_image_evaluator.hpp', 'action__line': 8, 'kind': 'jump_list', 'abbr': 'XING_AIG.._EVALUATOR_HPP_  @ext/obj..luator.hpp  line:8', 'action__tagname': 'XING_AIG_CAMERA_IMAGE_EVALUATOR_HPP_'}, {'word': 'XING_AIG_CAMERA_IMAGE_HPP_', 'action__path': 'ext/objective_functions/xing/aig/camera_image.hpp', 'action__line': 8, 'kind': 'jump_list', 'abbr': 'XING_AIG..MERA_IMAGE_HPP_  @ext/obj.._image.hpp  line:8', 'action__tagname': 'XING_AIG_CAMERA_IMAGE_HPP_'}, {'word': 'XING_AIG_COLOUR_DETECTOR_HPP_', 'action__path': 'ext/objective_functions/xing/aig/colour_detector.hpp', 'action__line': 8, 'kind': 'jump_list', 'abbr': 'XING_AIG..R_DETECTOR_HPP_  @ext/obj..tector.hpp  line:8', 'action__tagname': 'XING_AIG_COLOUR_DETECTOR_HPP_'}, {'word': 'XING_AIG_DEPTH_EVALUATOR_HPP_', 'action__path': 'ext/objective_functions/xing/aig/depth_evaluator.hpp', 'action__line': 8, 'kind': 'jump_list', 'abbr': 'XING_AIG.._EVALUATOR_HPP_  @ext/obj..luator.hpp  line:8', 'action__tagname': 'XING_AIG_DEPTH_EVALUATOR_HPP_'}, {'word': 'XING_AIG_DEPTH_OVERLAP_EVALUATOR_HPP_', 'action__path': 'ext/objective_functions/xing/aig/depth_overlap_evaluator.hpp', 'action__line': 8, 'kind': 'jump_list', 'abbr': 'XING_AIG.._EVALUATOR_HPP_  @ext/obj..luator.hpp  line:8', 'action__tagname': 'XING_AIG_DEPTH_OVERLAP_EVALUATOR_HPP_'}, {'word': 'XING_AIG_EDGE_DISTANCE_MAP_HPP_', 'action__path': 'ext/objective_functions/xing/aig/edge_distance_map.hpp', 'action__line': 8, 'kind': 'jump_list', 'abbr': 'XING_AIG..STANCE_MAP_HPP_  @ext/obj..ce_map.hpp  line:8', 'action__tagname': 'XING_AIG_EDGE_DISTANCE_MAP_HPP_'}, {'word': 'XING_AIG_EDGE_EVALUATOR_HPP_', 'action__path': 'ext/objective_functions/xing/aig/edge_evaluator.hpp', 'action__line': 8, 'kind': 'jump_list', 'abbr': 'XING_AIG.._EVALUATOR_HPP_  @ext/obj..luator.hpp  line:8', 'action__tagname': 'XING_AIG_EDGE_EVALUATOR_HPP_'}, {'word': 'XING_AIG_SILHOUETTE_EVALUATOR_HPP_', 'action__path': 'ext/objective_functions/xing/aig/silhouette_evaluator.hpp', 'action__line': 8, 'kind': 'jump_list', 'abbr': 'XING_AIG.._EVALUATOR_HPP_  @ext/obj..luator.hpp  line:8', 'action__tagname': 'XING_AIG_SILHOUETTE_EVALUATOR_HPP_'}, {'word': 'XING_PROG_SHOW_EDGE_HPP_', 'action__path': 'ext/objective_functions/prog/showedge/showedge.hpp', 'action__line': 2, 'kind': 'jump_list', 'abbr': 'XING_PROG_SHOW_EDGE_HPP_   @ext/obj..owedge.hpp  line:2', 'action__tagname': 'XING_PROG_SHOW_EDGE_HPP_'}, {'word': 'Y', 'action__pattern': '\M^enum OrthView {X, Y, Z};$', 'action__path': 'apps/sphere_model_renderer/src/main.cc', 'kind': 'jump_list', 'abbr': 'Y                          @apps/sp..rc/main.cc  enum OrthView {X, Y, Z};', 'action__tagname': 'Y'}, {'word': 'Z', 'action__pattern': '\M^enum OrthView {X, Y, Z};$', 'action__path': 'apps/sphere_model_renderer/src/main.cc', 'kind': 'jump_list', 'abbr': 'Z                          @apps/sp..rc/main.cc  enum OrthView {X, Y, Z};', 'action__tagname': 'Z'}, {'word': 'add1DOFJointToVector', 'action__pattern': '\M^inline void add1DOFJointToVector(std::vector<double>& vec,$', 'action__path': 'modules/core/include/pose_vector.h', 'kind': 'jump_list', 'abbr': 'add1DOFJointToVector       @modules..e_vector.h  inline void add1DOFJointToVector(std::vector<double>& vec,', 'action__tagname': 'add1DOFJointToVector'}, {'word': 'add2DOFJointToVector', 'action__pattern': '\M^inline void add2DOFJointToVector(std::vector<double>& vec,$', 'action__path': 'modules/core/include/pose_vector.h', 'kind': 'jump_list', 'abbr': 'add2DOFJointToVector       @modules..e_vector.h  inline void add2DOFJointToVector(std::vector<double>& vec,', 'action__tagname': 'add2DOFJointToVector'}, {'word': 'add3DOFJointToVector', 'action__pattern': '\M^inline void add3DOFJointToVector(std::vector<double>& vec,$', 'action__path': 'modules/core/include/pose_vector.h', 'kind': 'jump_list', 'abbr': 'add3DOFJointToVector       @modules..e_vector.h  inline void add3DOFJointToVector(std::vector<double>& vec,', 'action__tagname': 'add3DOFJointToVector'}, {'word': 'addBitToStream', 'action__path': 'ext/lodepng/lodepng.cpp', 'action__line': 398, 'kind': 'jump_list', 'abbr': 'addBitToStream             @ext/lod..odepng.cpp  line:398', 'action__tagname': 'addBitToStream'}, {'word': 'addBitsToStream', 'action__pattern': '\M^static void addBitsToStream(size_t* bitpointer, ucvector* bitstream, unsigned value, size_t nbits)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'addBitsToStream            @ext/lod..odepng.cpp  static void addBitsToStream(size_t* bitpointer, ucvector* bitstream, unsigned value, size_t nbits)', 'action__tagname': 'addBitsToStream'}, {'word': 'addBitsToStreamReversed', 'action__pattern': '\M^static void addBitsToStreamReversed(size_t* bitpointer, ucvector* bitstream, unsigned value, size_t nbits)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'addBitsToStreamReversed    @ext/lod..odepng.cpp  static void addBitsToStreamReversed(size_t* bitpointer, ucvector* bitstream, unsigned value, size_t nbits)', 'action__tagname': 'addBitsToStreamReversed'}, {'word': 'addBone', 'action__pattern': '\M^void Skeleton::addBone(const std::string& name,$', 'action__path': 'modules/core/src/skeleton.cc', 'kind': 'jump_list', 'abbr': 'addBone                    @modules..keleton.cc  void Skeleton::addBone(const std::string& name,', 'action__tagname': 'addBone'}, {'word': 'addBoneData', 'action__pattern': '\M^void Mesh::VertexBoneData::addBoneData(unsigned int boneID, float weight) {$', 'action__path': 'modules/gl/src/mesh.cc', 'kind': 'jump_list', 'abbr': 'addBoneData                @modules..rc/mesh.cc  void Mesh::VertexBoneData::addBoneData(unsigned int boneID, float weight) {', 'action__tagname': 'addBoneData'}, {'word': 'addChild', 'action__pattern': '\M^inline void Joint::addChild(const std::shared_ptr<Joint>& j) {$', 'action__path': 'modules/core/include/old_joint.h', 'kind': 'jump_list', 'abbr': 'addChild                   @modules..ld_joint.h  inline void Joint::addChild(const std::shared_ptr<Joint>& j) {', 'action__tagname': 'addChild'}, {'word': 'addChild', 'action__pattern': '\M^void Bone::addChild(const std::shared_ptr<Bone>& child) {$', 'action__path': 'modules/core/src/bone.cc', 'kind': 'jump_list', 'abbr': 'addChild                   @modules..rc/bone.cc  void Bone::addChild(const std::shared_ptr<Bone>& child) {', 'action__tagname': 'addChild'}, {'word': 'addChunk', 'action__pattern': '\M^static unsigned addChunk(ucvector* out, const char* chunkName, const unsigned char* data, size_t length)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'addChunk                   @ext/lod..odepng.cpp  static unsigned addChunk(ucvector* out, const char* chunkName, const unsigned char* data, size_t length)', 'action__tagname': 'addChunk'}, {'word': 'addChunk_IDAT', 'action__pattern': '\M^static unsigned addChunk_IDAT(ucvector* out, const unsigned char* data, size_t datasize,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'addChunk_IDAT              @ext/lod..odepng.cpp  static unsigned addChunk_IDAT(ucvector* out, const unsigned char* data, size_t datasize,', 'action__tagname': 'addChunk_IDAT'}, {'word': 'addChunk_IEND', 'action__pattern': '\M^static unsigned addChunk_IEND(ucvector* out)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'addChunk_IEND              @ext/lod..odepng.cpp  static unsigned addChunk_IEND(ucvector* out)', 'action__tagname': 'addChunk_IEND'}, {'word': 'addChunk_IHDR', 'action__pattern': '\M^static unsigned addChunk_IHDR(ucvector* out, unsigned w, unsigned h,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'addChunk_IHDR              @ext/lod..odepng.cpp  static unsigned addChunk_IHDR(ucvector* out, unsigned w, unsigned h,', 'action__tagname': 'addChunk_IHDR'}, {'word': 'addChunk_PLTE', 'action__pattern': '\M^static unsigned addChunk_PLTE(ucvector* out, const LodePNGColorMode* info)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'addChunk_PLTE              @ext/lod..odepng.cpp  static unsigned addChunk_PLTE(ucvector* out, const LodePNGColorMode* info)', 'action__tagname': 'addChunk_PLTE'}, {'word': 'addChunk_bKGD', 'action__pattern': '\M^static unsigned addChunk_bKGD(ucvector* out, const LodePNGInfo* info)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'addChunk_bKGD              @ext/lod..odepng.cpp  static unsigned addChunk_bKGD(ucvector* out, const LodePNGInfo* info)', 'action__tagname': 'addChunk_bKGD'}, {'word': 'addChunk_iTXt', 'action__pattern': '\M^static unsigned addChunk_iTXt(ucvector* out, unsigned compressed, const char* keyword, const char* langtag,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'addChunk_iTXt              @ext/lod..odepng.cpp  static unsigned addChunk_iTXt(ucvector* out, unsigned compressed, const char* keyword, const char* langtag,', 'action__tagname': 'addChunk_iTXt'}, {'word': 'addChunk_pHYs', 'action__pattern': '\M^static unsigned addChunk_pHYs(ucvector* out, const LodePNGInfo* info)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'addChunk_pHYs              @ext/lod..odepng.cpp  static unsigned addChunk_pHYs(ucvector* out, const LodePNGInfo* info)', 'action__tagname': 'addChunk_pHYs'}, {'word': 'addChunk_tEXt', 'action__pattern': '\M^static unsigned addChunk_tEXt(ucvector* out, const char* keyword, const char* textstring)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'addChunk_tEXt              @ext/lod..odepng.cpp  static unsigned addChunk_tEXt(ucvector* out, const char* keyword, const char* textstring)', 'action__tagname': 'addChunk_tEXt'}, {'word': 'addChunk_tIME', 'action__pattern': '\M^static unsigned addChunk_tIME(ucvector* out, const LodePNGTime* time)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'addChunk_tIME              @ext/lod..odepng.cpp  static unsigned addChunk_tIME(ucvector* out, const LodePNGTime* time)', 'action__tagname': 'addChunk_tIME'}, {'word': 'addChunk_tRNS', 'action__pattern': '\M^static unsigned addChunk_tRNS(ucvector* out, const LodePNGColorMode* info)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'addChunk_tRNS              @ext/lod..odepng.cpp  static unsigned addChunk_tRNS(ucvector* out, const LodePNGColorMode* info)', 'action__tagname': 'addChunk_tRNS'}, {'word': 'addChunk_zTXt', 'action__pattern': '\M^static unsigned addChunk_zTXt(ucvector* out, const char* keyword, const char* textstring,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'addChunk_zTXt              @ext/lod..odepng.cpp  static unsigned addChunk_zTXt(ucvector* out, const char* keyword, const char* textstring,', 'action__tagname': 'addChunk_zTXt'}, {'word': 'addColorBits', 'action__pattern': '\M^static void addColorBits(unsigned char* out, size_t index, unsigned bits, unsigned in)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'addColorBits               @ext/lod..odepng.cpp  static void addColorBits(unsigned char* out, size_t index, unsigned bits, unsigned in)', 'action__tagname': 'addColorBits'}, {'word': 'addEnergyTerm', 'action__pattern': '\M^    void addEnergyTerm(double weight, const E& energy, Args&& ...args)$', 'action__path': 'ext/objective_functions/xing/aig/camera_image_evaluator.hpp', 'kind': 'jump_list', 'abbr': 'addEnergyTerm              @ext/obj..luator.hpp      void addEnergyTerm(double weight, const E& energy, Args&& ...args)', 'action__tagname': 'addEnergyTerm'}, {'word': 'addEnergyTerm', 'action__pattern': '\M^void CameraImageEvaluator::addEnergyTerm(double w, const E& energy)$', 'action__path': 'ext/objective_functions/xing/aig/camera_image_evaluator.hpp', 'kind': 'jump_list', 'abbr': 'addEnergyTerm              @ext/obj..luator.hpp  void CameraImageEvaluator::addEnergyTerm(double w, const E& energy)', 'action__tagname': 'addEnergyTerm'}, {'word': 'addHuffmanSymbol', 'action__pattern': '\M^static void addHuffmanSymbol(size_t* bp, ucvector* compressed, unsigned code, unsigned bitlen)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'addHuffmanSymbol           @ext/lod..odepng.cpp  static void addHuffmanSymbol(size_t* bp, ucvector* compressed, unsigned code, unsigned bitlen)', 'action__tagname': 'addHuffmanSymbol'}, {'word': 'addJoint', 'action__pattern': '\M^void Pose::addJoint(const std::string& name, const std::string& parent) {$', 'action__path': 'modules/core/src/old_pose.cc', 'kind': 'jump_list', 'abbr': 'addJoint                   @modules..ld_pose.cc  void Pose::addJoint(const std::string& name, const std::string& parent) {', 'action__tagname': 'addJoint'}, {'word': 'addJoint', 'action__pattern': '\M^void Pose::addJoint(const std::string& name,$', 'action__path': 'modules/core/src/old_pose.cc', 'kind': 'jump_list', 'abbr': 'addJoint                   @modules..ld_pose.cc  void Pose::addJoint(const std::string& name,', 'action__tagname': 'addJoint'}, {'word': 'addLengthDistance', 'action__pattern': '\M^static void addLengthDistance(uivector* values, size_t length, size_t distance)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'addLengthDistance          @ext/lod..odepng.cpp  static void addLengthDistance(uivector* values, size_t length, size_t distance)', 'action__tagname': 'addLengthDistance'}, {'word': 'addMat4Attribute', 'action__pattern': '\M^    static void addMat4Attribute(unsigned int buffer,$', 'action__path': 'modules/gl/include/gl_utility.h', 'kind': 'jump_list', 'abbr': 'addMat4Attribute           @modules.._utility.h      static void addMat4Attribute(unsigned int buffer,', 'action__tagname': 'addMat4Attribute'}, {'word': 'addModuleBuildOption', 'action__pattern': '\M^addModuleBuildOption()$', 'action__path': 'ext/objective_functions/make-module', 'kind': 'jump_list', 'abbr': 'addModuleBuildOption       @ext/obj..ake-module  addModuleBuildOption()', 'action__tagname': 'addModuleBuildOption'}, {'word': 'addModuleDirectory', 'action__pattern': '\M^addModuleDirectory()$', 'action__path': 'ext/objective_functions/make-module', 'kind': 'jump_list', 'abbr': 'addModuleDirectory         @ext/obj..ake-module  addModuleDirectory()', 'action__tagname': 'addModuleDirectory'}, {'word': 'addModuleSwitch', 'action__pattern': '\M^addModuleSwitch()$', 'action__path': 'ext/objective_functions/make-module', 'kind': 'jump_list', 'abbr': 'addModuleSwitch            @ext/obj..ake-module  addModuleSwitch()', 'action__tagname': 'addModuleSwitch'}, {'word': 'addModuleTestOption', 'action__pattern': '\M^addModuleTestOption()$', 'action__path': 'ext/objective_functions/make-module', 'kind': 'jump_list', 'abbr': 'addModuleTestOption        @ext/obj..ake-module  addModuleTestOption()', 'action__tagname': 'addModuleTestOption'}, {'word': 'addPaddingBits', 'action__pattern': '\M^static void addPaddingBits(unsigned char* out, const unsigned char* in,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'addPaddingBits             @ext/lod..odepng.cpp  static void addPaddingBits(unsigned char* out, const unsigned char* in,', 'action__tagname': 'addPaddingBits'}, {'word': 'addSource', 'action__pattern': '\M^void Shader::addSource(const std::string& source) {$', 'action__path': 'modules/gl/src/shader.cc', 'kind': 'jump_list', 'abbr': 'addSource                  @modules../shader.cc  void Shader::addSource(const std::string& source) {', 'action__tagname': 'addSource'}, {'word': 'addToFrameBuffer', 'action__pattern': '\M^void Texture::addToFrameBuffer(GLuint framebuffer, GLenum attachment) const {$', 'action__path': 'modules/gl/src/texture.cc', 'kind': 'jump_list', 'abbr': 'addToFrameBuffer           @modules..texture.cc  void Texture::addToFrameBuffer(GLuint framebuffer, GLenum attachment) const {', 'action__tagname': 'addToFrameBuffer'}, {'word': 'addToTileArrays', 'action__pattern': '\M^    inline void addToTileArrays($', 'action__path': 'modules/gl/include/quadric_hand.h', 'kind': 'jump_list', 'abbr': 'addToTileArrays            @modules..ric_hand.h      inline void addToTileArrays(', 'action__tagname': 'addToTileArrays'}, {'word': 'addToWVArrays', 'action__pattern': '\M^    inline void addToWVArrays($', 'action__path': 'modules/gl/include/quadric_hand.h', 'kind': 'jump_list', 'abbr': 'addToWVArrays              @modules..ric_hand.h      inline void addToWVArrays(', 'action__tagname': 'addToWVArrays'}, {'word': 'addToWVPArrays', 'action__pattern': '\M^    inline void addToWVPArrays($', 'action__path': 'modules/gl/include/quadric_hand.h', 'kind': 'jump_list', 'abbr': 'addToWVPArrays             @modules..ric_hand.h      inline void addToWVPArrays(', 'action__tagname': 'addToWVPArrays'}, {'word': 'addUniform', 'action__pattern': '\M^void ShaderProgram::addUniform(const std::string& name,$', 'action__path': 'modules/gl/src/shader_program.cc', 'kind': 'jump_list', 'abbr': 'addUniform                 @modules..program.cc  void ShaderProgram::addUniform(const std::string& name,', 'action__tagname': 'addUniform'}, {'word': 'addUniformArray', 'action__pattern': '\M^void ShaderProgram::addUniformArray(const std::string& name,$', 'action__path': 'modules/gl/src/shader_program.cc', 'kind': 'jump_list', 'abbr': 'addUniformArray            @modules..program.cc  void ShaderProgram::addUniformArray(const std::string& name,', 'action__tagname': 'addUniformArray'}, {'word': 'addUnknownChunks', 'action__pattern': '\M^static unsigned addUnknownChunks(ucvector* out, unsigned char* data, size_t datasize)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'addUnknownChunks           @ext/lod..odepng.cpp  static unsigned addUnknownChunks(ucvector* out, unsigned char* data, size_t datasize)', 'action__tagname': 'addUnknownChunks'}, {'word': 'addVec2Attribute', 'action__pattern': '\M^    static void addVec2Attribute(unsigned int buffer,$', 'action__path': 'modules/gl/include/gl_utility.h', 'kind': 'jump_list', 'abbr': 'addVec2Attribute           @modules.._utility.h      static void addVec2Attribute(unsigned int buffer,', 'action__tagname': 'addVec2Attribute'}, {'word': 'addVec3Attribute', 'action__pattern': '\M^    static void addVec3Attribute(unsigned int buffer,$', 'action__path': 'modules/gl/include/gl_utility.h', 'kind': 'jump_list', 'abbr': 'addVec3Attribute           @modules.._utility.h      static void addVec3Attribute(unsigned int buffer,', 'action__tagname': 'addVec3Attribute'}, {'word': 'add_coins', 'action__pattern': '\M^static void add_coins(Coin* c1, const Coin* c2)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'add_coins                  @ext/lod..odepng.cpp  static void add_coins(Coin* c1, const Coin* c2)', 'action__tagname': 'add_coins'}, {'word': 'add_id', 'action__pattern': '\M^  unsigned add_id;$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'add_id                     @ext/lod../lodepng.h    unsigned add_id;', 'action__tagname': 'add_id'}, {'word': 'adjustForRestPose', 'action__pattern': '\M^void Pose::adjustForRestPose(const Pose& restPose) {$', 'action__path': 'modules/core/src/old_pose.cc', 'kind': 'jump_list', 'abbr': 'adjustForRestPose          @modules..ld_pose.cc  void Pose::adjustForRestPose(const Pose& restPose) {', 'action__tagname': 'adjustForRestPose'}, {'word': 'adler32', 'action__pattern': '\M^static unsigned adler32(const unsigned char* data, unsigned len)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'adler32                    @ext/lod..odepng.cpp  static unsigned adler32(const unsigned char* data, unsigned len)', 'action__tagname': 'adler32'}, {'word': 'aiToGlmMat4', 'action__pattern': '\M^glm::mat4 Mesh::aiToGlmMat4(const aiMatrix4x4& aiMat) const {$', 'action__path': 'modules/gl/src/mesh.cc', 'kind': 'jump_list', 'abbr': 'aiToGlmMat4                @modules..rc/mesh.cc  glm::mat4 Mesh::aiToGlmMat4(const aiMatrix4x4& aiMat) const {', 'action__tagname': 'aiToGlmMat4'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'apps/bmvc_project/include/bmvc_options.h', 'kind': 'jump_list', 'abbr': 'aig                        @apps/bm.._options.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'apps/bmvc_project/src/bmvc_options.cc', 'kind': 'jump_list', 'abbr': 'aig                        @apps/bm..options.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'apps/bmvc_project/src/main.cc', 'kind': 'jump_list', 'abbr': 'aig                        @apps/bm..rc/main.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'apps/depth_shader_viewer/include/depth_shader_viewer_options.h', 'kind': 'jump_list', 'abbr': 'aig                        @apps/de.._options.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'apps/depth_shader_viewer/src/depth_shader_viewer_options.cc', 'kind': 'jump_list', 'abbr': 'aig                        @apps/de..options.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'apps/depth_shader_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'aig                        @apps/de..rc/main.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'apps/edge_shader_viewer/include/edge_shader_viewer_options.h', 'kind': 'jump_list', 'abbr': 'aig                        @apps/ed.._options.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'apps/edge_shader_viewer/src/edge_shader_viewer_options.cc', 'kind': 'jump_list', 'abbr': 'aig                        @apps/ed..options.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'apps/edge_shader_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'aig                        @apps/ed..rc/main.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'apps/gbuffer_viewer/include/gbuffer_viewer_options.h', 'kind': 'jump_list', 'abbr': 'aig                        @apps/gb.._options.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'apps/gbuffer_viewer/src/gbuffer_viewer_options.cc', 'kind': 'jump_list', 'abbr': 'aig                        @apps/gb..options.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'apps/gbuffer_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'aig                        @apps/gb..rc/main.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'apps/multicam_mesh_viewer/include/mc_mesh_viewer_options.h', 'kind': 'jump_list', 'abbr': 'aig                        @apps/mu.._options.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'apps/multicam_mesh_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'aig                        @apps/mu..rc/main.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'apps/multicam_mesh_viewer/src/mc_mesh_viewer_options.cc', 'kind': 'jump_list', 'abbr': 'aig                        @apps/mu..options.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'apps/particle_swarm_demo/src/main.cc', 'kind': 'jump_list', 'abbr': 'aig                        @apps/pa..rc/main.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'apps/pose_creator/include/pose_creator_options.h', 'kind': 'jump_list', 'abbr': 'aig                        @apps/po.._options.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'apps/pose_creator/src/main.cc', 'kind': 'jump_list', 'abbr': 'aig                        @apps/po..rc/main.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'apps/pose_creator/src/pose_creator_options.cc', 'kind': 'jump_list', 'abbr': 'aig                        @apps/po..options.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'apps/pose_interpolator/include/pose_interpolator_options.h', 'kind': 'jump_list', 'abbr': 'aig                        @apps/po.._options.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'apps/pose_interpolator/src/main.cc', 'kind': 'jump_list', 'abbr': 'aig                        @apps/po..rc/main.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'apps/pose_interpolator/src/pose_interpolator_options.cc', 'kind': 'jump_list', 'abbr': 'aig                        @apps/po..options.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'apps/pose_renderer/include/pose_renderer.h', 'kind': 'jump_list', 'abbr': 'aig                        @apps/po..renderer.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'apps/pose_renderer/include/pose_renderer_options.h', 'kind': 'jump_list', 'abbr': 'aig                        @apps/po.._options.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'apps/pose_renderer/src/pose_renderer.cc', 'kind': 'jump_list', 'abbr': 'aig                        @apps/po..enderer.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'apps/pose_renderer/src/pose_renderer_options.cc', 'kind': 'jump_list', 'abbr': 'aig                        @apps/po..options.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'apps/pose_viewer/include/pose_viewer_options.h', 'kind': 'jump_list', 'abbr': 'aig                        @apps/po.._options.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'apps/pose_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'aig                        @apps/po..rc/main.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'apps/pose_viewer/src/pose_viewer_options.cc', 'kind': 'jump_list', 'abbr': 'aig                        @apps/po..options.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'apps/skel_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'aig                        @apps/sk..rc/main.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig$', 'action__path': 'ext/objective_functions/xing/aig/depth_overlap_evaluator.cc', 'kind': 'jump_list', 'abbr': 'aig                        @ext/obj..aluator.cc  namespace aig', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig$', 'action__path': 'ext/objective_functions/xing/aig/depth_overlap_evaluator.hpp', 'kind': 'jump_list', 'abbr': 'aig                        @ext/obj..luator.hpp  namespace aig', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'include/pose_estimation.h', 'kind': 'jump_list', 'abbr': 'aig                        @include..timation.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/core/include/bone.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..ude/bone.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/core/include/camera_calibration.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..ibration.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/core/include/core.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..ude/core.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/core/include/hand_pose_27_dof.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..e_27_dof.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/core/include/hand_pose_34_dof.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..e_34_dof.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/core/include/histogram2d.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..togram2d.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/core/include/image.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..de/image.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/core/include/mymath.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..e/mymath.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/core/include/old_joint.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..ld_joint.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/core/include/old_pose.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..old_pose.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/core/include/options_exceptions.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..ceptions.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/core/include/pose.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..ude/pose.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/core/include/pose_vector.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..e_vector.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/core/include/skeleton.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..skeleton.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/core/include/sphere_model.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..re_model.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/core/include/utility.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules../utility.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/core/src/bone.cc', 'kind': 'jump_list', 'abbr': 'aig                        @modules..rc/bone.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/core/src/camera_calibration.cc', 'kind': 'jump_list', 'abbr': 'aig                        @modules..bration.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/core/src/hand_pose_27_dof.cc', 'kind': 'jump_list', 'abbr': 'aig                        @modules.._27_dof.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/core/src/hand_pose_34_dof.cc', 'kind': 'jump_list', 'abbr': 'aig                        @modules.._34_dof.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/core/src/histogram2d.cc', 'kind': 'jump_list', 'abbr': 'aig                        @modules..ogram2d.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/core/src/old_joint.cc', 'kind': 'jump_list', 'abbr': 'aig                        @modules..d_joint.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/core/src/old_pose.cc', 'kind': 'jump_list', 'abbr': 'aig                        @modules..ld_pose.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/core/src/pose.cc', 'kind': 'jump_list', 'abbr': 'aig                        @modules..rc/pose.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/core/src/skeleton.cc', 'kind': 'jump_list', 'abbr': 'aig                        @modules..keleton.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/core/src/sphere_model.cc', 'kind': 'jump_list', 'abbr': 'aig                        @modules..e_model.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/core/src/utility.cc', 'kind': 'jump_list', 'abbr': 'aig                        @modules..utility.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/geom/include/sphere.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..e/sphere.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/gl/include/background_drawer.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..d_drawer.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/gl/include/background_shader.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..d_shader.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/gl/include/camera.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..e/camera.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/gl/include/chessboard_drawer.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..d_drawer.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/gl/include/cone.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..ude/cone.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/gl/include/cuboid.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..e/cuboid.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/gl/include/gbuffer.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules../gbuffer.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/gl/include/gl.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..clude/gl.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/gl/include/gl_sphere.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..l_sphere.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/gl/include/gl_utility.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules.._utility.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/gl/include/instanced_mesh_renderer.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..renderer.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/gl/include/instanced_shape_renderer.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..renderer.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/gl/include/mesh.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..ude/mesh.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/gl/include/mesh_renderer.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..renderer.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/gl/include/offscreen_buffer.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..n_buffer.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/gl/include/pipeline.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..pipeline.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/gl/include/pose_shader.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..e_shader.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/gl/include/prism.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..de/prism.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/gl/include/quadric_hand.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..ric_hand.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/gl/include/shader.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..e/shader.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/gl/include/shader_program.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules.._program.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/gl/include/shape_renderer.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..renderer.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/gl/include/sphere_model_maker.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..el_maker.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/gl/include/surface.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules../surface.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/gl/include/texture.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules../texture.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/gl/include/tiler.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..de/tiler.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/gl/src/background_drawer.cc', 'kind': 'jump_list', 'abbr': 'aig                        @modules.._drawer.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/gl/src/background_shader.cc', 'kind': 'jump_list', 'abbr': 'aig                        @modules.._shader.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/gl/src/camera.cc', 'kind': 'jump_list', 'abbr': 'aig                        @modules../camera.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/gl/src/chessboard_drawer.cc', 'kind': 'jump_list', 'abbr': 'aig                        @modules.._drawer.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/gl/src/gbuffer.cc', 'kind': 'jump_list', 'abbr': 'aig                        @modules..gbuffer.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/gl/src/gl_sphere.cc', 'kind': 'jump_list', 'abbr': 'aig                        @modules.._sphere.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/gl/src/instanced_mesh_renderer.cc', 'kind': 'jump_list', 'abbr': 'aig                        @modules..enderer.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/gl/src/instanced_shape_renderer.cc', 'kind': 'jump_list', 'abbr': 'aig                        @modules..enderer.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/gl/src/mesh.cc', 'kind': 'jump_list', 'abbr': 'aig                        @modules..rc/mesh.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/gl/src/mesh_renderer.cc', 'kind': 'jump_list', 'abbr': 'aig                        @modules..enderer.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/gl/src/offscreen_buffer.cc', 'kind': 'jump_list', 'abbr': 'aig                        @modules.._buffer.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/gl/src/pipeline.cc', 'kind': 'jump_list', 'abbr': 'aig                        @modules..ipeline.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/gl/src/pose_shader.cc', 'kind': 'jump_list', 'abbr': 'aig                        @modules.._shader.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/gl/src/prism.cc', 'kind': 'jump_list', 'abbr': 'aig                        @modules..c/prism.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/gl/src/quadric_hand.cc', 'kind': 'jump_list', 'abbr': 'aig                        @modules..ic_hand.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/gl/src/shader.cc', 'kind': 'jump_list', 'abbr': 'aig                        @modules../shader.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/gl/src/shader_program.cc', 'kind': 'jump_list', 'abbr': 'aig                        @modules..program.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/gl/src/shape_renderer.cc', 'kind': 'jump_list', 'abbr': 'aig                        @modules..enderer.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/gl/src/sphere_model_maker.cc', 'kind': 'jump_list', 'abbr': 'aig                        @modules..l_maker.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/gl/src/surface.cc', 'kind': 'jump_list', 'abbr': 'aig                        @modules..surface.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/gl/src/texture.cc', 'kind': 'jump_list', 'abbr': 'aig                        @modules..texture.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/gl/src/tiler.cc', 'kind': 'jump_list', 'abbr': 'aig                        @modules..c/tiler.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/img/include/hysteresis_thresholder.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..esholder.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/img/src/hysteresis_thresholder.cc', 'kind': 'jump_list', 'abbr': 'aig                        @modules..sholder.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/io/include/humaneva_pose_reader.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..e_reader.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/io/include/io.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..clude/io.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/io/include/json_pose_reader.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..e_reader.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/io/include/json_pose_writer.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..e_writer.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/io/include/json_reader_utils.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..er_utils.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/io/include/json_writer_utils.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..er_utils.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/io/include/mesh_reader.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..h_reader.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/io/include/pose_reader.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..e_reader.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/io/include/sph_reader.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..h_reader.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/io/include/sphere_model_reader.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..l_reader.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/io/include/sphere_model_writer.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..l_writer.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/io/include/tang_pose_reader.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..e_reader.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/io/include/wenping_pose_reader.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..e_reader.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/io/src/humaneva_pose_reader.cc', 'kind': 'jump_list', 'abbr': 'aig                        @modules.._reader.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/io/src/json_pose_reader.cc', 'kind': 'jump_list', 'abbr': 'aig                        @modules.._reader.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/io/src/json_pose_writer.cc', 'kind': 'jump_list', 'abbr': 'aig                        @modules.._writer.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/io/src/json_reader_utils.cc', 'kind': 'jump_list', 'abbr': 'aig                        @modules..r_utils.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/io/src/json_writer_utils.cc', 'kind': 'jump_list', 'abbr': 'aig                        @modules..r_utils.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/io/src/sph_reader.cc', 'kind': 'jump_list', 'abbr': 'aig                        @modules.._reader.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/io/src/sphere_model_reader.cc', 'kind': 'jump_list', 'abbr': 'aig                        @modules.._reader.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/io/src/sphere_model_writer.cc', 'kind': 'jump_list', 'abbr': 'aig                        @modules.._writer.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/io/src/tang_pose_reader.cc', 'kind': 'jump_list', 'abbr': 'aig                        @modules.._reader.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/io/src/wenping_pose_reader.cc', 'kind': 'jump_list', 'abbr': 'aig                        @modules.._reader.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/ml/include/bayes_classifier.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..assifier.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/ml/include/classifier_leaf.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..ier_leaf.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/ml/include/decision_tree.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..ion_tree.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/ml/include/depth_split_function.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..function.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/ml/include/depth_split_function_factory.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules.._factory.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/ml/include/discrete_information_gain.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..ion_gain.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/ml/include/energy_function_chooser.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules.._chooser.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/ml/include/latent_regression_forest.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..n_forest.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/ml/include/latent_regression_tree.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..ion_tree.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/ml/include/latent_tree_information_gain.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..ion_gain.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/ml/include/latent_tree_leaf.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..ree_leaf.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/ml/include/latent_tree_model.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..ee_model.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/ml/include/latent_tree_node.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..ree_node.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/ml/include/leaf_factory.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules.._factory.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/ml/include/offset_leaf.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..set_leaf.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/ml/include/pose_ml.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules../pose_ml.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/ml/include/scalar_split_function.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..function.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/ml/include/scalar_split_function_factory.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules.._factory.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/ml/include/split_function.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..function.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/ml/include/split_function_chooser.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules.._chooser.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/ml/include/split_function_factory.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules.._factory.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/ml/include/tang_energy_function.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..function.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/ml/include/training_data.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..ing_data.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/ml/include/tree_node.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..ree_node.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/ml/src/bayes_classifier.cc', 'kind': 'jump_list', 'abbr': 'aig                        @modules..ssifier.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/ml/src/depth_split_function.cc', 'kind': 'jump_list', 'abbr': 'aig                        @modules..unction.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/ml/src/latent_tree_model.cc', 'kind': 'jump_list', 'abbr': 'aig                        @modules..e_model.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/ml/src/latent_tree_node.cc', 'kind': 'jump_list', 'abbr': 'aig                        @modules..ee_node.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/optim/include/particle_swarm.h', 'kind': 'jump_list', 'abbr': 'aig                        @modules..le_swarm.h  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/optim/src/particle.cc', 'kind': 'jump_list', 'abbr': 'aig                        @modules..article.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'aig', 'action__pattern': '\M^namespace aig {$', 'action__path': 'modules/optim/src/particle_swarm.cc', 'kind': 'jump_list', 'abbr': 'aig                        @modules..e_swarm.cc  namespace aig {', 'action__tagname': 'aig'}, {'word': 'allocsize', 'action__pattern': '\M^  size_t allocsize; /*allocated size in bytes*/$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'allocsize                  @ext/lod..odepng.cpp    size_t allocsize; \/*allocated size in bytes*\/', 'action__tagname': 'allocsize'}, {'word': 'allocsize', 'action__pattern': '\M^  size_t allocsize; /*allocated size*/$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'allocsize                  @ext/lod..odepng.cpp    size_t allocsize; \/*allocated size*\/', 'action__tagname': 'allocsize'}, {'word': 'alpha', 'action__pattern': '\M^static float alpha = 0.8;$', 'action__path': 'apps/multicam_mesh_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'alpha                      @apps/mu..rc/main.cc  static float alpha = 0.8;', 'action__tagname': 'alpha'}, {'word': 'alpha', 'action__pattern': '\M^static float alpha = 1.0;$', 'action__path': 'apps/pose_creator/src/main.cc', 'kind': 'jump_list', 'abbr': 'alpha                      @apps/po..rc/main.cc  static float alpha = 1.0;', 'action__tagname': 'alpha'}, {'word': 'alpha', 'action__pattern': '\M^static float alpha = 1.0f;$', 'action__path': 'apps/pose_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'alpha                      @apps/po..rc/main.cc  static float alpha = 1.0f;', 'action__tagname': 'alpha'}, {'word': 'alpha', 'action__pattern': '\M^  unsigned char alpha; /*alpha channel, or alpha palette, required*/$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'alpha                      @ext/lod..odepng.cpp    unsigned char alpha; \/*alpha channel, or alpha palette, required*\/', 'action__tagname': 'alpha'}, {'word': 'alphaScale', 'action__pattern': '\M^double alphaScale = -1;$', 'action__path': 'ext/objective_functions/prog/showedge/main.cc', 'kind': 'jump_list', 'abbr': 'alphaScale                 @ext/obj..ge/main.cc  double alphaScale = -1;', 'action__tagname': 'alphaScale'}, {'word': 'alpha_done', 'action__pattern': '\M^  unsigned char alpha_done;$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'alpha_done                 @ext/lod..odepng.cpp    unsigned char alpha_done;', 'action__tagname': 'alpha_done'}, {'word': 'append_symbol_coins', 'action__pattern': '\M^static unsigned append_symbol_coins(Coin* coins, const unsigned* frequencies, unsigned numcodes, size_t sum)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'append_symbol_coins        @ext/lod..odepng.cpp  static unsigned append_symbol_coins(Coin* coins, const unsigned* frequencies, unsigned numcodes, size_t sum)', 'action__tagname': 'append_symbol_coins'}, {'word': 'apps', 'action__pattern': '\M^namespace apps {$', 'action__path': 'apps/bmvc_project/include/bmvc_options.h', 'kind': 'jump_list', 'abbr': 'apps                       @apps/bm.._options.h  namespace apps {', 'action__tagname': 'apps'}, {'word': 'apps', 'action__pattern': '\M^namespace apps {$', 'action__path': 'apps/bmvc_project/src/bmvc_options.cc', 'kind': 'jump_list', 'abbr': 'apps                       @apps/bm..options.cc  namespace apps {', 'action__tagname': 'apps'}, {'word': 'apps', 'action__pattern': '\M^namespace apps {$', 'action__path': 'apps/bmvc_project/src/main.cc', 'kind': 'jump_list', 'abbr': 'apps                       @apps/bm..rc/main.cc  namespace apps {', 'action__tagname': 'apps'}, {'word': 'apps', 'action__pattern': '\M^namespace apps {$', 'action__path': 'apps/depth_shader_viewer/include/depth_shader_viewer_options.h', 'kind': 'jump_list', 'abbr': 'apps                       @apps/de.._options.h  namespace apps {', 'action__tagname': 'apps'}, {'word': 'apps', 'action__pattern': '\M^namespace apps {$', 'action__path': 'apps/depth_shader_viewer/src/depth_shader_viewer_options.cc', 'kind': 'jump_list', 'abbr': 'apps                       @apps/de..options.cc  namespace apps {', 'action__tagname': 'apps'}, {'word': 'apps', 'action__pattern': '\M^namespace apps {$', 'action__path': 'apps/depth_shader_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'apps                       @apps/de..rc/main.cc  namespace apps {', 'action__tagname': 'apps'}, {'word': 'apps', 'action__pattern': '\M^namespace apps {$', 'action__path': 'apps/edge_shader_viewer/include/edge_shader_viewer_options.h', 'kind': 'jump_list', 'abbr': 'apps                       @apps/ed.._options.h  namespace apps {', 'action__tagname': 'apps'}, {'word': 'apps', 'action__pattern': '\M^namespace apps {$', 'action__path': 'apps/edge_shader_viewer/src/edge_shader_viewer_options.cc', 'kind': 'jump_list', 'abbr': 'apps                       @apps/ed..options.cc  namespace apps {', 'action__tagname': 'apps'}, {'word': 'apps', 'action__pattern': '\M^namespace apps {$', 'action__path': 'apps/edge_shader_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'apps                       @apps/ed..rc/main.cc  namespace apps {', 'action__tagname': 'apps'}, {'word': 'apps', 'action__pattern': '\M^namespace apps {$', 'action__path': 'apps/gbuffer_viewer/include/gbuffer_viewer_options.h', 'kind': 'jump_list', 'abbr': 'apps                       @apps/gb.._options.h  namespace apps {', 'action__tagname': 'apps'}, {'word': 'apps', 'action__pattern': '\M^namespace apps {$', 'action__path': 'apps/gbuffer_viewer/src/gbuffer_viewer_options.cc', 'kind': 'jump_list', 'abbr': 'apps                       @apps/gb..options.cc  namespace apps {', 'action__tagname': 'apps'}, {'word': 'apps', 'action__pattern': '\M^namespace apps {$', 'action__path': 'apps/gbuffer_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'apps                       @apps/gb..rc/main.cc  namespace apps {', 'action__tagname': 'apps'}, {'word': 'apps', 'action__pattern': '\M^namespace apps {$', 'action__path': 'apps/multicam_mesh_viewer/include/mc_mesh_viewer_options.h', 'kind': 'jump_list', 'abbr': 'apps                       @apps/mu.._options.h  namespace apps {', 'action__tagname': 'apps'}, {'word': 'apps', 'action__pattern': '\M^namespace apps {$', 'action__path': 'apps/multicam_mesh_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'apps                       @apps/mu..rc/main.cc  namespace apps {', 'action__tagname': 'apps'}, {'word': 'apps', 'action__pattern': '\M^namespace apps {$', 'action__path': 'apps/multicam_mesh_viewer/src/mc_mesh_viewer_options.cc', 'kind': 'jump_list', 'abbr': 'apps                       @apps/mu..options.cc  namespace apps {', 'action__tagname': 'apps'}, {'word': 'apps', 'action__pattern': '\M^namespace apps {$', 'action__path': 'apps/pose_creator/include/pose_creator_options.h', 'kind': 'jump_list', 'abbr': 'apps                       @apps/po.._options.h  namespace apps {', 'action__tagname': 'apps'}, {'word': 'apps', 'action__pattern': '\M^namespace apps {$', 'action__path': 'apps/pose_creator/src/main.cc', 'kind': 'jump_list', 'abbr': 'apps                       @apps/po..rc/main.cc  namespace apps {', 'action__tagname': 'apps'}, {'word': 'apps', 'action__pattern': '\M^namespace apps {$', 'action__path': 'apps/pose_creator/src/pose_creator_options.cc', 'kind': 'jump_list', 'abbr': 'apps                       @apps/po..options.cc  namespace apps {', 'action__tagname': 'apps'}, {'word': 'apps', 'action__pattern': '\M^namespace apps {$', 'action__path': 'apps/pose_interpolator/include/pose_interpolator_options.h', 'kind': 'jump_list', 'abbr': 'apps                       @apps/po.._options.h  namespace apps {', 'action__tagname': 'apps'}, {'word': 'apps', 'action__pattern': '\M^namespace apps {$', 'action__path': 'apps/pose_interpolator/src/main.cc', 'kind': 'jump_list', 'abbr': 'apps                       @apps/po..rc/main.cc  namespace apps {', 'action__tagname': 'apps'}, {'word': 'apps', 'action__pattern': '\M^namespace apps {$', 'action__path': 'apps/pose_interpolator/src/pose_interpolator_options.cc', 'kind': 'jump_list', 'abbr': 'apps                       @apps/po..options.cc  namespace apps {', 'action__tagname': 'apps'}, {'word': 'apps', 'action__pattern': '\M^namespace apps {$', 'action__path': 'apps/pose_renderer/include/pose_renderer.h', 'kind': 'jump_list', 'abbr': 'apps                       @apps/po..renderer.h  namespace apps {', 'action__tagname': 'apps'}, {'word': 'apps', 'action__pattern': '\M^namespace apps {$', 'action__path': 'apps/pose_renderer/include/pose_renderer_options.h', 'kind': 'jump_list', 'abbr': 'apps                       @apps/po.._options.h  namespace apps {', 'action__tagname': 'apps'}, {'word': 'apps', 'action__pattern': '\M^namespace apps {$', 'action__path': 'apps/pose_renderer/src/pose_renderer.cc', 'kind': 'jump_list', 'abbr': 'apps                       @apps/po..enderer.cc  namespace apps {', 'action__tagname': 'apps'}, {'word': 'apps', 'action__pattern': '\M^namespace apps {$', 'action__path': 'apps/pose_renderer/src/pose_renderer_options.cc', 'kind': 'jump_list', 'abbr': 'apps                       @apps/po..options.cc  namespace apps {', 'action__tagname': 'apps'}, {'word': 'apps', 'action__pattern': '\M^namespace apps {$', 'action__path': 'apps/pose_viewer/include/pose_viewer_options.h', 'kind': 'jump_list', 'abbr': 'apps                       @apps/po.._options.h  namespace apps {', 'action__tagname': 'apps'}, {'word': 'apps', 'action__pattern': '\M^namespace apps {$', 'action__path': 'apps/pose_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'apps                       @apps/po..rc/main.cc  namespace apps {', 'action__tagname': 'apps'}, {'word': 'apps', 'action__pattern': '\M^namespace apps {$', 'action__path': 'apps/pose_viewer/src/pose_viewer_options.cc', 'kind': 'jump_list', 'abbr': 'apps                       @apps/po..options.cc  namespace apps {', 'action__tagname': 'apps'}, {'word': 'aspect', 'action__pattern': '\M^      float aspect;$', 'action__path': 'modules/gl/include/pipeline.h', 'kind': 'jump_list', 'abbr': 'aspect                     @modules..pipeline.h        float aspect;', 'action__tagname': 'aspect'}, {'word': 'auto_convert', 'action__pattern': '\M^  LodePNGAutoConvert auto_convert; /*how to automatically choose output PNG color type, if at all*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'auto_convert               @ext/lod../lodepng.h    LodePNGAutoConvert auto_convert; \/*how to automatically choose output PNG color type, if at all*\/', 'action__tagname': 'auto_convert'}, {'word': 'backgroundShader', 'action__pattern': '\M^    BackgroundShader backgroundShader;$', 'action__path': 'modules/gl/include/background_drawer.h', 'kind': 'jump_list', 'abbr': 'backgroundShader           @modules..d_drawer.h      BackgroundShader backgroundShader;', 'action__tagname': 'backgroundShader'}, {'word': 'background_b', 'action__pattern': '\M^  unsigned background_b;       /*blue component of suggested background color*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'background_b               @ext/lod../lodepng.h    unsigned background_b;       \/*blue component of suggested background color*\/', 'action__tagname': 'background_b'}, {'word': 'background_defined', 'action__pattern': '\M^  unsigned background_defined; /*is a suggested background color given?*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'background_defined         @ext/lod../lodepng.h    unsigned background_defined; \/*is a suggested background color given?*\/', 'action__tagname': 'background_defined'}, {'word': 'background_g', 'action__pattern': '\M^  unsigned background_g;       /*green component of suggested background color*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'background_g               @ext/lod../lodepng.h    unsigned background_g;       \/*green component of suggested background color*\/', 'action__tagname': 'background_g'}, {'word': 'background_r', 'action__pattern': '\M^  unsigned background_r;       /*red component of suggested background color*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'background_r               @ext/lod../lodepng.h    unsigned background_r;       \/*red component of suggested background color*\/', 'action__tagname': 'background_r'}, {'word': 'backgrounds', 'action__pattern': '\M^    std::vector<BackgroundDrawer> backgrounds;$', 'action__path': 'apps/edge_shader_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'backgrounds                @apps/ed..rc/main.cc      std::vector<BackgroundDrawer> backgrounds;', 'action__tagname': 'backgrounds'}, {'word': 'backgrounds', 'action__pattern': '\M^    std::vector<BackgroundDrawer> backgrounds;$', 'action__path': 'apps/gbuffer_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'backgrounds                @apps/gb..rc/main.cc      std::vector<BackgroundDrawer> backgrounds;', 'action__tagname': 'backgrounds'}, {'word': 'backgrounds', 'action__pattern': '\M^    std::vector<BackgroundDrawer> backgrounds;$', 'action__path': 'apps/multicam_mesh_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'backgrounds                @apps/mu..rc/main.cc      std::vector<BackgroundDrawer> backgrounds;', 'action__tagname': 'backgrounds'}, {'word': 'backgrounds', 'action__pattern': '\M^    std::vector<BackgroundDrawer> backgrounds;$', 'action__path': 'apps/pose_creator/src/main.cc', 'kind': 'jump_list', 'abbr': 'backgrounds                @apps/po..rc/main.cc      std::vector<BackgroundDrawer> backgrounds;', 'action__tagname': 'backgrounds'}, {'word': 'backgrounds', 'action__pattern': '\M^    std::vector<BackgroundDrawer> backgrounds;$', 'action__path': 'apps/pose_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'backgrounds                @apps/po..rc/main.cc      std::vector<BackgroundDrawer> backgrounds;', 'action__tagname': 'backgrounds'}, {'word': 'baseIndex', 'action__pattern': '\M^      unsigned int baseIndex;$', 'action__path': 'modules/gl/include/mesh.h', 'kind': 'jump_list', 'abbr': 'baseIndex                  @modules..ude/mesh.h        unsigned int baseIndex;', 'action__tagname': 'baseIndex'}, {'word': 'baseVertex', 'action__pattern': '\M^      unsigned int baseVertex;$', 'action__path': 'modules/gl/include/mesh.h', 'kind': 'jump_list', 'abbr': 'baseVertex                 @modules..ude/mesh.h        unsigned int baseVertex;', 'action__tagname': 'baseVertex'}, {'word': 'bestParticle', 'action__pattern': '\M^    Particle* bestParticle;$', 'action__path': 'modules/optim/include/particle_swarm.h', 'kind': 'jump_list', 'abbr': 'bestParticle               @modules..le_swarm.h      Particle* bestParticle;', 'action__tagname': 'bestParticle'}, {'word': 'bestPos', 'action__pattern': '\M^        std::vector<double> bestPos;$', 'action__path': 'modules/optim/include/particle_swarm.h', 'kind': 'jump_list', 'abbr': 'bestPos                    @modules..le_swarm.h          std::vector<double> bestPos;', 'action__tagname': 'bestPos'}, {'word': 'bestScore', 'action__pattern': '\M^        double bestScore;$', 'action__path': 'modules/optim/include/particle_swarm.h', 'kind': 'jump_list', 'abbr': 'bestScore                  @modules..le_swarm.h          double bestScore;', 'action__tagname': 'bestScore'}, {'word': 'bestScore', 'action__pattern': '\M^    double bestScore;$', 'action__path': 'modules/optim/include/particle_swarm.h', 'kind': 'jump_list', 'abbr': 'bestScore                  @modules..le_swarm.h      double bestScore;', 'action__tagname': 'bestScore'}, {'word': 'bgFrag', 'action__pattern': '\M^    const static std::string bgFrag, bgVert;$', 'action__path': 'modules/gl/include/background_shader.h', 'kind': 'jump_list', 'abbr': 'bgFrag                     @modules..d_shader.h      const static std::string bgFrag, bgVert;', 'action__tagname': 'bgFrag'}, {'word': 'bgFrag', 'action__pattern': '\M^const std::string BackgroundShader::bgFrag = "                       \\n\\$', 'action__path': 'modules/gl/src/background_shader.cc', 'kind': 'jump_list', 'abbr': 'bgFrag                     @modules.._shader.cc  const std::string BackgroundShader::bgFrag = "                       \\n\\', 'action__tagname': 'bgFrag'}, {'word': 'bgVert', 'action__pattern': '\M^    const static std::string bgFrag, bgVert;$', 'action__path': 'modules/gl/include/background_shader.h', 'kind': 'jump_list', 'abbr': 'bgVert                     @modules..d_shader.h      const static std::string bgFrag, bgVert;', 'action__tagname': 'bgVert'}, {'word': 'bgVert', 'action__pattern': '\M^const std::string BackgroundShader::bgVert = "                       \\n\\$', 'action__path': 'modules/gl/src/background_shader.cc', 'kind': 'jump_list', 'abbr': 'bgVert                     @modules.._shader.cc  const std::string BackgroundShader::bgVert = "                       \\n\\', 'action__tagname': 'bgVert'}, {'word': 'bind', 'action__pattern': '\M^void OffscreenBuffer::bind() {$', 'action__path': 'modules/gl/src/offscreen_buffer.cc', 'kind': 'jump_list', 'abbr': 'bind                       @modules.._buffer.cc  void OffscreenBuffer::bind() {', 'action__tagname': 'bind'}, {'word': 'bind', 'action__pattern': '\M^void Texture::bind(GLenum textureUnit) const {$', 'action__path': 'modules/gl/src/texture.cc', 'kind': 'jump_list', 'abbr': 'bind                       @modules..texture.cc  void Texture::bind(GLenum textureUnit) const {', 'action__tagname': 'bind'}, {'word': 'bindForRead', 'action__pattern': '\M^void GBuffer::bindForRead() {$', 'action__path': 'modules/gl/src/gbuffer.cc', 'kind': 'jump_list', 'abbr': 'bindForRead                @modules..gbuffer.cc  void GBuffer::bindForRead() {', 'action__tagname': 'bindForRead'}, {'word': 'bindForWrite', 'action__pattern': '\M^void GBuffer::bindForWrite() {$', 'action__path': 'modules/gl/src/gbuffer.cc', 'kind': 'jump_list', 'abbr': 'bindForWrite               @modules..gbuffer.cc  void GBuffer::bindForWrite() {', 'action__tagname': 'bindForWrite'}, {'word': 'bitdepth', 'action__pattern': '\M^  unsigned bitdepth;  /*bits per sample, see PNG standard or documentation further in this header file*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'bitdepth                   @ext/lod../lodepng.h    unsigned bitdepth;  \/*bits per sample, see PNG standard or documentation further in this header file*\/', 'action__tagname': 'bitdepth'}, {'word': 'board', 'action__pattern': '\M^    ChessboardDrawer board;$', 'action__path': 'apps/multicam_mesh_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'board                      @apps/mu..rc/main.cc      ChessboardDrawer board;', 'action__tagname': 'board'}, {'word': 'board', 'action__pattern': '\M^    Surface board;$', 'action__path': 'modules/gl/include/chessboard_drawer.h', 'kind': 'jump_list', 'abbr': 'board                      @modules..d_drawer.h      Surface board;', 'action__tagname': 'board'}, {'word': 'board_renderer', 'action__pattern': '\M^    ShapeRenderer<Surface> board_renderer;$', 'action__path': 'modules/gl/include/chessboard_drawer.h', 'kind': 'jump_list', 'abbr': 'board_renderer             @modules..d_drawer.h      ShapeRenderer<Surface> board_renderer;', 'action__tagname': 'board_renderer'}, {'word': 'boneBuffer', 'action__pattern': '\M^    const unsigned int boneBuffer = 4;$', 'action__path': 'modules/gl/include/instanced_mesh_renderer.h', 'kind': 'jump_list', 'abbr': 'boneBuffer                 @modules..renderer.h      const unsigned int boneBuffer = 4;', 'action__tagname': 'boneBuffer'}, {'word': 'boneBuffer', 'action__pattern': '\M^    const unsigned int boneBuffer = 4;$', 'action__path': 'modules/gl/include/mesh_renderer.h', 'kind': 'jump_list', 'abbr': 'boneBuffer                 @modules..renderer.h      const unsigned int boneBuffer = 4;', 'action__tagname': 'boneBuffer'}, {'word': 'boneIdLocation', 'action__pattern': '\M^    const unsigned int boneIdLocation = 3;$', 'action__path': 'modules/gl/include/instanced_mesh_renderer.h', 'kind': 'jump_list', 'abbr': 'boneIdLocation             @modules..renderer.h      const unsigned int boneIdLocation = 3;', 'action__tagname': 'boneIdLocation'}, {'word': 'boneIdLocation', 'action__pattern': '\M^    const unsigned int boneIdLocation = 3;$', 'action__path': 'modules/gl/include/mesh_renderer.h', 'kind': 'jump_list', 'abbr': 'boneIdLocation             @modules..renderer.h      const unsigned int boneIdLocation = 3;', 'action__tagname': 'boneIdLocation'}, {'word': 'boneInfo', 'action__pattern': '\M^    std::vector<BoneInfo> boneInfo;$', 'action__path': 'modules/gl/include/mesh.h', 'kind': 'jump_list', 'abbr': 'boneInfo                   @modules..ude/mesh.h      std::vector<BoneInfo> boneInfo;', 'action__tagname': 'boneInfo'}, {'word': 'boneNames', 'action__pattern': '\M^    std::vector<std::string> boneNames;$', 'action__path': 'modules/core/include/skeleton.h', 'kind': 'jump_list', 'abbr': 'boneNames                  @modules..skeleton.h      std::vector<std::string> boneNames;', 'action__tagname': 'boneNames'}, {'word': 'boneOffset', 'action__pattern': '\M^      glm::mat4 boneOffset;$', 'action__path': 'modules/gl/include/mesh.h', 'kind': 'jump_list', 'abbr': 'boneOffset                 @modules..ude/mesh.h        glm::mat4 boneOffset;', 'action__tagname': 'boneOffset'}, {'word': 'boneWeightLocation', 'action__pattern': '\M^    const unsigned int boneWeightLocation = 7;$', 'action__path': 'modules/gl/include/instanced_mesh_renderer.h', 'kind': 'jump_list', 'abbr': 'boneWeightLocation         @modules..renderer.h      const unsigned int boneWeightLocation = 7;', 'action__tagname': 'boneWeightLocation'}, {'word': 'boneWeightLocation', 'action__pattern': '\M^    const unsigned int boneWeightLocation = 7;$', 'action__path': 'modules/gl/include/mesh_renderer.h', 'kind': 'jump_list', 'abbr': 'boneWeightLocation         @modules..renderer.h      const unsigned int boneWeightLocation = 7;', 'action__tagname': 'boneWeightLocation'}, {'word': 'bones', 'action__pattern': '\M^    std::unordered_map<std::string, std::shared_ptr<Bone>> bones;$', 'action__path': 'modules/core/include/skeleton.h', 'kind': 'jump_list', 'abbr': 'bones                      @modules..skeleton.h      std::unordered_map<std::string, std::shared_ptr<Bone>> bones;', 'action__tagname': 'bones'}, {'word': 'bones', 'action__pattern': '\M^    std::vector<VertexBoneData> bones;$', 'action__path': 'modules/gl/include/mesh.h', 'kind': 'jump_list', 'abbr': 'bones                      @modules..ude/mesh.h      std::vector<VertexBoneData> bones;', 'action__tagname': 'bones'}, {'word': 'boost', 'action__pattern': '\M^namespace boost {$', 'action__path': 'modules/io/include/glm_serialisation.h', 'kind': 'jump_list', 'abbr': 'boost                      @modules..lisation.h  namespace boost {', 'action__tagname': 'boost'}, {'word': 'boost', 'action__pattern': '\M^namespace boost {$', 'action__path': 'modules/io/include/shared_ptr_serialisation.h', 'kind': 'jump_list', 'abbr': 'boost                      @modules..lisation.h  namespace boost {', 'action__tagname': 'boost'}, {'word': 'btype', 'action__pattern': '\M^  unsigned btype; /*the block type for LZ (0, 1, 2 or 3, see zlib standard). Should be 2 for proper compression.*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'btype                      @ext/lod../lodepng.h    unsigned btype; \/*the block type for LZ (0, 1, 2 or 3, see zlib standard). Should be 2 for proper compression.*\/', 'action__tagname': 'btype'}, {'word': 'bufferDynamicVector', 'action__pattern': '\M^    static void bufferDynamicVector(const T& vec,$', 'action__path': 'modules/gl/include/gl_utility.h', 'kind': 'jump_list', 'abbr': 'bufferDynamicVector        @modules.._utility.h      static void bufferDynamicVector(const T& vec,', 'action__tagname': 'bufferDynamicVector'}, {'word': 'bufferIndices', 'action__pattern': '\M^    static void bufferIndices(const std::vector<unsigned int>& indices,$', 'action__path': 'modules/gl/include/gl_utility.h', 'kind': 'jump_list', 'abbr': 'bufferIndices              @modules.._utility.h      static void bufferIndices(const std::vector<unsigned int>& indices,', 'action__tagname': 'bufferIndices'}, {'word': 'bufferStaticVector', 'action__pattern': '\M^    static void bufferStaticVector(const T& vec,$', 'action__path': 'modules/gl/include/gl_utility.h', 'kind': 'jump_list', 'abbr': 'bufferStaticVector         @modules.._utility.h      static void bufferStaticVector(const T& vec,', 'action__tagname': 'bufferStaticVector'}, {'word': 'bufferVector', 'action__pattern': '\M^    static void bufferVector(const T& vec,$', 'action__path': 'modules/gl/include/gl_utility.h', 'kind': 'jump_list', 'abbr': 'bufferVector               @modules.._utility.h      static void bufferVector(const T& vec,', 'action__tagname': 'bufferVector'}, {'word': 'buffers', 'action__pattern': '\M^    std::vector<GLuint> buffers;$', 'action__path': 'modules/gl/include/background_drawer.h', 'kind': 'jump_list', 'abbr': 'buffers                    @modules..d_drawer.h      std::vector<GLuint> buffers;', 'action__tagname': 'buffers'}, {'word': 'buffers', 'action__pattern': '\M^    std::vector<GLuint> buffers;$', 'action__path': 'modules/gl/include/instanced_mesh_renderer.h', 'kind': 'jump_list', 'abbr': 'buffers                    @modules..renderer.h      std::vector<GLuint> buffers;', 'action__tagname': 'buffers'}, {'word': 'buffers', 'action__pattern': '\M^    std::vector<GLuint> buffers;$', 'action__path': 'modules/gl/include/instanced_shape_renderer.h', 'kind': 'jump_list', 'abbr': 'buffers                    @modules..renderer.h      std::vector<GLuint> buffers;', 'action__tagname': 'buffers'}, {'word': 'buffers', 'action__pattern': '\M^    std::vector<GLuint> buffers;$', 'action__path': 'modules/gl/include/mesh_renderer.h', 'kind': 'jump_list', 'abbr': 'buffers                    @modules..renderer.h      std::vector<GLuint> buffers;', 'action__tagname': 'buffers'}, {'word': 'buffers', 'action__pattern': '\M^    std::vector<GLuint> buffers;$', 'action__path': 'modules/gl/include/shape_renderer.h', 'kind': 'jump_list', 'abbr': 'buffers                    @modules..renderer.h      std::vector<GLuint> buffers;', 'action__tagname': 'buffers'}, {'word': 'buildPose', 'action__pattern': '\M^void buildPose(const std::shared_ptr<Node>& tree,$', 'action__path': 'modules/ml/include/latent_regression_tree.h', 'kind': 'jump_list', 'abbr': 'buildPose                  @modules..ion_tree.h  void buildPose(const std::shared_ptr<Node>& tree,', 'action__tagname': 'buildPose'}, {'word': 'buildTree', 'action__pattern': '\M^LatentTreeModel::buildTree(const std::list<std::vector<std::string>>& data) {$', 'action__path': 'modules/ml/src/latent_tree_model.cc', 'kind': 'jump_list', 'abbr': 'buildTree                  @modules..e_model.cc  LatentTreeModel::buildTree(const std::list<std::vector<std::string>>& data) {', 'action__tagname': 'buildTree'}, {'word': 'build_app', 'action__pattern': '\M^build_app()" > $APP_CMAKEFILE$', 'action__path': 'scripts/create_app', 'kind': 'jump_list', 'abbr': 'build_app                  @scripts/create_app   build_app()" > $APP_CMAKEFILE', 'action__tagname': 'build_app'}, {'word': 'c1', 'action__pattern': '\M^double c1 = 2.8;$', 'action__path': 'apps/bmvc_project/src/main.cc', 'kind': 'jump_list', 'abbr': 'c1                         @apps/bm..rc/main.cc  double c1 = 2.8;', 'action__tagname': 'c1'}, {'word': 'c1', 'action__pattern': '\M^        double c1, c2, k;$', 'action__path': 'modules/optim/include/particle_swarm.h', 'kind': 'jump_list', 'abbr': 'c1                         @modules..le_swarm.h          double c1, c2, k;', 'action__tagname': 'c1'}, {'word': 'c2', 'action__pattern': '\M^double c2 = 1.3;$', 'action__path': 'apps/bmvc_project/src/main.cc', 'kind': 'jump_list', 'abbr': 'c2                         @apps/bm..rc/main.cc  double c2 = 1.3;', 'action__tagname': 'c2'}, {'word': 'c2', 'action__pattern': '\M^        double c1, c2, k;$', 'action__path': 'modules/optim/include/particle_swarm.h', 'kind': 'jump_list', 'abbr': 'c2                         @modules..le_swarm.h          double c1, c2, k;', 'action__tagname': 'c2'}, {'word': 'calcNumIndices', 'action__pattern': '\M^    static unsigned int calcNumIndices(unsigned int rings,$', 'action__path': 'modules/gl/include/gl_sphere.h', 'kind': 'jump_list', 'abbr': 'calcNumIndices             @modules..l_sphere.h      static unsigned int calcNumIndices(unsigned int rings,', 'action__tagname': 'calcNumIndices'}, {'word': 'calcNumIndices', 'action__pattern': '\M^    static unsigned int calcNumIndices(unsigned int sides) {$', 'action__path': 'modules/gl/include/prism.h', 'kind': 'jump_list', 'abbr': 'calcNumIndices             @modules..de/prism.h      static unsigned int calcNumIndices(unsigned int sides) {', 'action__tagname': 'calcNumIndices'}, {'word': 'calcNumIndices', 'action__pattern': '\M^    static unsigned int calcNumIndices(unsigned int rows,$', 'action__path': 'modules/gl/include/surface.h', 'kind': 'jump_list', 'abbr': 'calcNumIndices             @modules../surface.h      static unsigned int calcNumIndices(unsigned int rows,', 'action__tagname': 'calcNumIndices'}, {'word': 'calcNumVertices', 'action__pattern': '\M^    static unsigned int calcNumVertices(unsigned int rings,$', 'action__path': 'modules/gl/include/gl_sphere.h', 'kind': 'jump_list', 'abbr': 'calcNumVertices            @modules..l_sphere.h      static unsigned int calcNumVertices(unsigned int rings,', 'action__tagname': 'calcNumVertices'}, {'word': 'calcNumVertices', 'action__pattern': '\M^    static unsigned int calcNumVertices(unsigned int sides) {$', 'action__path': 'modules/gl/include/prism.h', 'kind': 'jump_list', 'abbr': 'calcNumVertices            @modules..de/prism.h      static unsigned int calcNumVertices(unsigned int sides) {', 'action__tagname': 'calcNumVertices'}, {'word': 'calcNumVertices', 'action__pattern': '\M^    static unsigned int calcNumVertices(unsigned int rows,$', 'action__path': 'modules/gl/include/surface.h', 'kind': 'jump_list', 'abbr': 'calcNumVertices            @modules../surface.h      static unsigned int calcNumVertices(unsigned int rows,', 'action__tagname': 'calcNumVertices'}, {'word': 'calculateBoneLengths', 'action__pattern': '\M^void Pose::calculateBoneLengths(const Pose& p) {$', 'action__path': 'modules/core/src/old_pose.cc', 'kind': 'jump_list', 'abbr': 'calculateBoneLengths       @modules..ld_pose.cc  void Pose::calculateBoneLengths(const Pose& p) {', 'action__tagname': 'calculateBoneLengths'}, {'word': 'calculateCovarianceTrace', 'action__pattern': '\M^glm::vec3 calculateCovarianceTrace(const std::vector<glm::vec3>& vec) {$', 'action__path': 'modules/ml/include/tang_energy_function.h', 'kind': 'jump_list', 'abbr': 'calculateCovarianceTrace   @modules..function.h  glm::vec3 calculateCovarianceTrace(const std::vector<glm::vec3>& vec) {', 'action__tagname': 'calculateCovarianceTrace'}, {'word': 'calculateImageNormaliser', 'action__pattern': '\M^double calculateImageNormaliser(const std::shared_ptr<TrainingData>& data) {$', 'action__path': 'modules/ml/include/depth_split_function.h', 'kind': 'jump_list', 'abbr': 'calculateImageNormaliser   @modules..function.h  double calculateImageNormaliser(const std::shared_ptr<TrainingData>& data) {', 'action__tagname': 'calculateImageNormaliser'}, {'word': 'calculateJointAngles', 'action__pattern': '\M^void Pose::calculateJointAngles(const glm::vec3& p1, const glm::vec3& p2,$', 'action__path': 'modules/core/src/old_pose.cc', 'kind': 'jump_list', 'abbr': 'calculateJointAngles       @modules..ld_pose.cc  void Pose::calculateJointAngles(const glm::vec3& p1, const glm::vec3& p2,', 'action__tagname': 'calculateJointAngles'}, {'word': 'calculateJointAnglesFromPositions', 'action__pattern': '\M^void Joint::calculateJointAnglesFromPositions(const glm::vec3& normal) {$', 'action__path': 'modules/core/src/old_joint.cc', 'kind': 'jump_list', 'abbr': 'calculat..esFromPositions  @modules..d_joint.cc  void Joint::calculateJointAnglesFromPositions(const glm::vec3& normal) {', 'action__tagname': 'calculateJointAnglesFromPositions'}, {'word': 'calculateJointAnglesFromPositions', 'action__pattern': '\M^void Joint::calculateJointAnglesFromPositions(const glm::vec3& parentV1,$', 'action__path': 'modules/core/src/old_joint.cc', 'kind': 'jump_list', 'abbr': 'calculat..esFromPositions  @modules..d_joint.cc  void Joint::calculateJointAnglesFromPositions(const glm::vec3& parentV1,', 'action__tagname': 'calculateJointAnglesFromPositions'}, {'word': 'calculateMatrix', 'action__pattern': '\M^glm::mat4 Pose<glm::mat4>::calculateMatrix(const std::string& name) const {$', 'action__path': 'modules/core/src/pose.cc', 'kind': 'jump_list', 'abbr': 'calculateMatrix            @modules..rc/pose.cc  glm::mat4 Pose<glm::mat4>::calculateMatrix(const std::string& name) const {', 'action__tagname': 'calculateMatrix'}, {'word': 'calculateMatrix', 'action__pattern': '\M^glm::mat4 Pose<glm::quat>::calculateMatrix(const std::string& name) const {$', 'action__path': 'modules/core/src/pose.cc', 'kind': 'jump_list', 'abbr': 'calculateMatrix            @modules..rc/pose.cc  glm::mat4 Pose<glm::quat>::calculateMatrix(const std::string& name) const {', 'action__tagname': 'calculateMatrix'}, {'word': 'calculateMatrix', 'action__pattern': '\M^glm::mat4 Pose<glm::vec3>::calculateMatrix(const std::string& name) const {$', 'action__path': 'modules/core/src/pose.cc', 'kind': 'jump_list', 'abbr': 'calculateMatrix            @modules..rc/pose.cc  glm::mat4 Pose<glm::vec3>::calculateMatrix(const std::string& name) const {', 'action__tagname': 'calculateMatrix'}, {'word': 'calculateOffsets', 'action__pattern': '\M^OffsetLeaf<Data, Labels...>::calculateOffsets($', 'action__path': 'modules/ml/include/offset_leaf.h', 'kind': 'jump_list', 'abbr': 'calculateOffsets           @modules..set_leaf.h  OffsetLeaf<Data, Labels...>::calculateOffsets(', 'action__tagname': 'calculateOffsets'}, {'word': 'calculateProbabilities', 'action__pattern': '\M^void NonParamBayesClassifier::calculateProbabilities($', 'action__path': 'modules/ml/src/bayes_classifier.cc', 'kind': 'jump_list', 'abbr': 'calculateProbabilities     @modules..ssifier.cc  void NonParamBayesClassifier::calculateProbabilities(', 'action__tagname': 'calculateProbabilities'}, {'word': 'calculateProj', 'action__pattern': '\M^glm::mat4 CalibratedCamera::calculateProj(int w, int h,$', 'action__path': 'modules/core/src/camera_calibration.cc', 'kind': 'jump_list', 'abbr': 'calculateProj              @modules..bration.cc  glm::mat4 CalibratedCamera::calculateProj(int w, int h,', 'action__tagname': 'calculateProj'}, {'word': 'calculateQuaternion', 'action__pattern': '\M^glm::quat Joint::calculateQuaternion(const glm::vec3& u,$', 'action__path': 'modules/core/src/old_joint.cc', 'kind': 'jump_list', 'abbr': 'calculateQuaternion        @modules..d_joint.cc  glm::quat Joint::calculateQuaternion(const glm::vec3& u,', 'action__tagname': 'calculateQuaternion'}, {'word': 'calculateSphereWeights', 'action__pattern': '\M^std::vector<std::map<std::string, double>> calculateSphereWeights($', 'action__path': 'modules/gl/src/sphere_model_maker.cc', 'kind': 'jump_list', 'abbr': 'calculateSphereWeights     @modules..l_maker.cc  std::vector<std::map<std::string, double>> calculateSphereWeights(', 'action__tagname': 'calculateSphereWeights'}, {'word': 'calculateTraceSum', 'action__pattern': '\M^double calculateTraceSum($', 'action__path': 'modules/ml/include/tang_energy_function.h', 'kind': 'jump_list', 'abbr': 'calculateTraceSum          @modules..function.h  double calculateTraceSum(', 'action__tagname': 'calculateTraceSum'}, {'word': 'calibratedCamera', 'action__pattern': '\M^    unsigned int calibratedCamera;$', 'action__path': 'apps/pose_renderer/include/pose_renderer_options.h', 'kind': 'jump_list', 'abbr': 'calibratedCamera           @apps/po.._options.h      unsigned int calibratedCamera;', 'action__tagname': 'calibratedCamera'}, {'word': 'calibratedSize', 'action__pattern': '\M^        const core::ImageSize& calibratedSize;$', 'action__path': 'modules/core/include/camera_calibration.h', 'kind': 'jump_list', 'abbr': 'calibratedSize             @modules..ibration.h          const core::ImageSize& calibratedSize;', 'action__tagname': 'calibratedSize'}, {'word': 'camPos', 'action__pattern': '\M^    glm::vec3 camPos, camTarget, camUp;$', 'action__path': 'apps/pose_renderer/include/pose_renderer_options.h', 'kind': 'jump_list', 'abbr': 'camPos                     @apps/po.._options.h      glm::vec3 camPos, camTarget, camUp;', 'action__tagname': 'camPos'}, {'word': 'camPos', 'action__pattern': '\M^      glm::vec3 camPos, camTarget, camUp;$', 'action__path': 'apps/pose_viewer/include/pose_viewer_options.h', 'kind': 'jump_list', 'abbr': 'camPos                     @apps/po.._options.h        glm::vec3 camPos, camTarget, camUp;', 'action__tagname': 'camPos'}, {'word': 'camTarget', 'action__pattern': '\M^    glm::vec3 camPos, camTarget, camUp;$', 'action__path': 'apps/pose_renderer/include/pose_renderer_options.h', 'kind': 'jump_list', 'abbr': 'camTarget                  @apps/po.._options.h      glm::vec3 camPos, camTarget, camUp;', 'action__tagname': 'camTarget'}, {'word': 'camTarget', 'action__pattern': '\M^      glm::vec3 camPos, camTarget, camUp;$', 'action__path': 'apps/pose_viewer/include/pose_viewer_options.h', 'kind': 'jump_list', 'abbr': 'camTarget                  @apps/po.._options.h        glm::vec3 camPos, camTarget, camUp;', 'action__tagname': 'camTarget'}, {'word': 'camUp', 'action__pattern': '\M^    glm::vec3 camPos, camTarget, camUp;$', 'action__path': 'apps/pose_renderer/include/pose_renderer_options.h', 'kind': 'jump_list', 'abbr': 'camUp                      @apps/po.._options.h      glm::vec3 camPos, camTarget, camUp;', 'action__tagname': 'camUp'}, {'word': 'camUp', 'action__pattern': '\M^      glm::vec3 camPos, camTarget, camUp;$', 'action__path': 'apps/pose_viewer/include/pose_viewer_options.h', 'kind': 'jump_list', 'abbr': 'camUp                      @apps/po.._options.h        glm::vec3 camPos, camTarget, camUp;', 'action__tagname': 'camUp'}, {'word': 'camera', 'action__pattern': '\M^static int camera;$', 'action__path': 'apps/multicam_mesh_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'camera                     @apps/mu..rc/main.cc  static int camera;', 'action__tagname': 'camera'}, {'word': 'camera', 'action__pattern': '\M^static int camera;$', 'action__path': 'apps/pose_creator/src/main.cc', 'kind': 'jump_list', 'abbr': 'camera                     @apps/po..rc/main.cc  static int camera;', 'action__tagname': 'camera'}, {'word': 'camera', 'action__pattern': '\M^static int camera;$', 'action__path': 'apps/pose_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'camera                     @apps/po..rc/main.cc  static int camera;', 'action__tagname': 'camera'}, {'word': 'camera', 'action__pattern': '\M^    } camera;$', 'action__path': 'modules/gl/include/pipeline.h', 'kind': 'jump_list', 'abbr': 'camera                     @modules..pipeline.h      } camera;', 'action__tagname': 'camera'}, {'word': 'cameraChannels', 'action__pattern': '\M^        const unsigned int cameraChannels;$', 'action__path': 'modules/core/include/camera_calibration.h', 'kind': 'jump_list', 'abbr': 'cameraChannels             @modules..ibration.h          const unsigned int cameraChannels;', 'action__tagname': 'cameraChannels'}, {'word': 'cameraChannels', 'action__pattern': '\M^    static const unsigned int cameraChannels[numCameras];$', 'action__path': 'modules/core/include/camera_calibration.h', 'kind': 'jump_list', 'abbr': 'cameraChannels             @modules..ibration.h      static const unsigned int cameraChannels[numCameras];', 'action__tagname': 'cameraChannels'}, {'word': 'cameraChannels', 'action__pattern': '\M^const unsigned int CameraCalibration::cameraChannels[numCameras] = {$', 'action__path': 'modules/core/src/camera_calibration.cc', 'kind': 'jump_list', 'abbr': 'cameraChannels             @modules..bration.cc  const unsigned int CameraCalibration::cameraChannels[numCameras] = {', 'action__tagname': 'cameraChannels'}, {'word': 'cameraImageSize', 'action__pattern': '\M^    static const core::ImageSize cameraImageSize[numCameras];$', 'action__path': 'modules/core/include/camera_calibration.h', 'kind': 'jump_list', 'abbr': 'cameraImageSize            @modules..ibration.h      static const core::ImageSize cameraImageSize[numCameras];', 'action__tagname': 'cameraImageSize'}, {'word': 'cameraImageSize', 'action__pattern': '\M^const core::ImageSize CameraCalibration::cameraImageSize[numCameras] = {$', 'action__path': 'modules/core/src/camera_calibration.cc', 'kind': 'jump_list', 'abbr': 'cameraImageSize            @modules..bration.cc  const core::ImageSize CameraCalibration::cameraImageSize[numCameras] = {', 'action__tagname': 'cameraImageSize'}, {'word': 'chain', 'action__pattern': '\M^  unsigned short* chain;$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'chain                      @ext/lod..odepng.cpp    unsigned short* chain;', 'action__tagname': 'chain'}, {'word': 'channels', 'action__pattern': '\M^unsigned int CalibratedCamera::channels() {$', 'action__path': 'modules/core/src/camera_calibration.cc', 'kind': 'jump_list', 'abbr': 'channels                   @modules..bration.cc  unsigned int CalibratedCamera::channels() {', 'action__tagname': 'channels'}, {'word': 'checkBounds', 'action__pattern': '\M^double Camera::checkBounds(double r) {$', 'action__path': 'modules/gl/src/camera.cc', 'kind': 'jump_list', 'abbr': 'checkBounds                @modules../camera.cc  double Camera::checkBounds(double r) {', 'action__tagname': 'checkBounds'}, {'word': 'checkColorValidity', 'action__pattern': '\M^static unsigned checkColorValidity(LodePNGColorType colortype, unsigned bd) /*bd = bitdepth*/$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'checkColorValidity         @ext/lod..odepng.cpp  static unsigned checkColorValidity(LodePNGColorType colortype, unsigned bd) \/*bd = bitdepth*\/', 'action__tagname': 'checkColorValidity'}, {'word': 'checkError', 'action__pattern': '\M^    static bool checkError() {$', 'action__path': 'modules/gl/include/gl_utility.h', 'kind': 'jump_list', 'abbr': 'checkError                 @modules.._utility.h      static bool checkError() {', 'action__tagname': 'checkError'}, {'word': 'checkNeighbours', 'action__pattern': '\M^  void HysteresisThresholder::checkNeighbours(cv::Mat& visited,$', 'action__path': 'modules/img/src/hysteresis_thresholder.cc', 'kind': 'jump_list', 'abbr': 'checkNeighbours            @modules..sholder.cc    void HysteresisThresholder::checkNeighbours(cv::Mat& visited,', 'action__tagname': 'checkNeighbours'}, {'word': 'children', 'action__pattern': '\M^  ColorTree* children[16]; /*up to 16 pointers to ColorTree of next level*/$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'children                   @ext/lod..odepng.cpp    ColorTree* children[16]; \/*up to 16 pointers to ColorTree of next level*\/', 'action__tagname': 'children'}, {'word': 'children', 'action__pattern': '\M^    std::vector<std::shared_ptr<Bone>> children;$', 'action__path': 'modules/core/include/bone.h', 'kind': 'jump_list', 'abbr': 'children                   @modules..ude/bone.h      std::vector<std::shared_ptr<Bone>> children;', 'action__tagname': 'children'}, {'word': 'children', 'action__pattern': '\M^    std::vector<std::shared_ptr<Joint>> children;$', 'action__path': 'modules/core/include/old_joint.h', 'kind': 'jump_list', 'abbr': 'children                   @modules..ld_joint.h      std::vector<std::shared_ptr<Joint>> children;', 'action__tagname': 'children'}, {'word': 'choose', 'action__pattern': '\M^    unsigned int choose() {$', 'action__path': 'modules/ml/include/energy_function_chooser.h', 'kind': 'jump_list', 'abbr': 'choose                     @modules.._chooser.h      unsigned int choose() {', 'action__tagname': 'choose'}, {'word': 'choose', 'action__pattern': '\M^    unsigned int choose() {$', 'action__path': 'modules/ml/include/energy_function_chooser.h', 'kind': 'jump_list', 'abbr': 'choose                     @modules.._chooser.h      unsigned int choose() {', 'action__tagname': 'choose'}, {'word': 'chooseSplitFunction', 'action__pattern': '\M^const SplitFunctionPointer& chooseSplitFunction($', 'action__path': 'modules/ml/include/split_function_chooser.h', 'kind': 'jump_list', 'abbr': 'chooseSplitFunction        @modules.._chooser.h  const SplitFunctionPointer& chooseSplitFunction(', 'action__tagname': 'chooseSplitFunction'}, {'word': 'chooser', 'action__pattern': '\M^    Algorithm chooser;$', 'action__path': 'modules/ml/include/energy_function_chooser.h', 'kind': 'jump_list', 'abbr': 'chooser                    @modules.._chooser.h      Algorithm chooser;', 'action__tagname': 'chooser'}, {'word': 'classifyImage', 'action__pattern': '\M^cv::Mat NonParamBayesClassifier::classifyImage(const cv::Mat& input)$', 'action__path': 'modules/ml/src/bayes_classifier.cc', 'kind': 'jump_list', 'abbr': 'classifyImage              @modules..ssifier.cc  cv::Mat NonParamBayesClassifier::classifyImage(const cv::Mat& input)', 'action__tagname': 'classifyImage'}, {'word': 'cleanup_coins', 'action__pattern': '\M^static void cleanup_coins(Coin* coins, size_t num)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'cleanup_coins              @ext/lod..odepng.cpp  static void cleanup_coins(Coin* coins, size_t num)', 'action__tagname': 'cleanup_coins'}, {'word': 'clearCache', 'action__pattern': '\M^void EdgeDistanceMap::clearCache() $', 'action__path': 'ext/objective_functions/xing/aig/edge_distance_map.cc', 'kind': 'jump_list', 'abbr': 'clearCache                 @ext/obj..nce_map.cc  void EdgeDistanceMap::clearCache() ', 'action__tagname': 'clearCache'}, {'word': 'cmdOptions', 'action__pattern': '\M^      po::options_description cmdOptions, genOptions;$', 'action__path': 'apps/bmvc_project/include/bmvc_options.h', 'kind': 'jump_list', 'abbr': 'cmdOptions                 @apps/bm.._options.h        po::options_description cmdOptions, genOptions;', 'action__tagname': 'cmdOptions'}, {'word': 'cmdOptions', 'action__pattern': '\M^      po::options_description cmdOptions, genOptions;$', 'action__path': 'apps/depth_shader_viewer/include/depth_shader_viewer_options.h', 'kind': 'jump_list', 'abbr': 'cmdOptions                 @apps/de.._options.h        po::options_description cmdOptions, genOptions;', 'action__tagname': 'cmdOptions'}, {'word': 'cmdOptions', 'action__pattern': '\M^      po::options_description cmdOptions, genOptions;$', 'action__path': 'apps/edge_shader_viewer/include/edge_shader_viewer_options.h', 'kind': 'jump_list', 'abbr': 'cmdOptions                 @apps/ed.._options.h        po::options_description cmdOptions, genOptions;', 'action__tagname': 'cmdOptions'}, {'word': 'cmdOptions', 'action__pattern': '\M^      po::options_description cmdOptions, genOptions;$', 'action__path': 'apps/gbuffer_viewer/include/gbuffer_viewer_options.h', 'kind': 'jump_list', 'abbr': 'cmdOptions                 @apps/gb.._options.h        po::options_description cmdOptions, genOptions;', 'action__tagname': 'cmdOptions'}, {'word': 'cmdOptions', 'action__pattern': '\M^      po::options_description cmdOptions, genOptions;$', 'action__path': 'apps/multicam_mesh_viewer/include/mc_mesh_viewer_options.h', 'kind': 'jump_list', 'abbr': 'cmdOptions                 @apps/mu.._options.h        po::options_description cmdOptions, genOptions;', 'action__tagname': 'cmdOptions'}, {'word': 'cmdOptions', 'action__pattern': '\M^      po::options_description cmdOptions, genOptions;$', 'action__path': 'apps/pose_creator/include/pose_creator_options.h', 'kind': 'jump_list', 'abbr': 'cmdOptions                 @apps/po.._options.h        po::options_description cmdOptions, genOptions;', 'action__tagname': 'cmdOptions'}, {'word': 'cmdOptions', 'action__pattern': '\M^    po::options_description cmdOptions;$', 'action__path': 'apps/pose_interpolator/include/pose_interpolator_options.h', 'kind': 'jump_list', 'abbr': 'cmdOptions                 @apps/po.._options.h      po::options_description cmdOptions;', 'action__tagname': 'cmdOptions'}, {'word': 'cmdOptions', 'action__pattern': '\M^    po::options_description cmdOptions, genOptions;$', 'action__path': 'apps/pose_renderer/include/pose_renderer_options.h', 'kind': 'jump_list', 'abbr': 'cmdOptions                 @apps/po.._options.h      po::options_description cmdOptions, genOptions;', 'action__tagname': 'cmdOptions'}, {'word': 'cmdOptions', 'action__pattern': '\M^      po::options_description cmdOptions, genOptions;$', 'action__path': 'apps/pose_viewer/include/pose_viewer_options.h', 'kind': 'jump_list', 'abbr': 'cmdOptions                 @apps/po.._options.h        po::options_description cmdOptions, genOptions;', 'action__tagname': 'cmdOptions'}, {'word': 'cmpEdgeMap', 'action__pattern': '\M^bool cmpEdgeMap(const cv::Mat& img, const cv::Mat& gmi)$', 'action__path': 'ext/objective_functions/test/aig/test_edge_distance_map.cc', 'kind': 'jump_list', 'abbr': 'cmpEdgeMap                 @ext/obj..nce_map.cc  bool cmpEdgeMap(const cv::Mat& img, const cv::Mat& gmi)', 'action__tagname': 'cmpEdgeMap'}, {'word': 'cmpMat', 'action__pattern': '\M^bool cmpMat(const cv::Mat& lhs, const cv::Mat& rhs)$', 'action__path': 'ext/objective_functions/test/aig/test_camera_image.cc', 'kind': 'jump_list', 'abbr': 'cmpMat                     @ext/obj..a_image.cc  bool cmpMat(const cv::Mat& lhs, const cv::Mat& rhs)', 'action__tagname': 'cmpMat'}, {'word': 'coin_cleanup', 'action__pattern': '\M^static void coin_cleanup(void* c)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'coin_cleanup               @ext/lod..odepng.cpp  static void coin_cleanup(void* c)', 'action__tagname': 'coin_cleanup'}, {'word': 'coin_compare', 'action__pattern': '\M^static int coin_compare(const void* a, const void* b) {$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'coin_compare               @ext/lod..odepng.cpp  static int coin_compare(const void* a, const void* b) {', 'action__tagname': 'coin_compare'}, {'word': 'coin_copy', 'action__pattern': '\M^static void coin_copy(Coin* c1, const Coin* c2)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'coin_copy                  @ext/lod..odepng.cpp  static void coin_copy(Coin* c1, const Coin* c2)', 'action__tagname': 'coin_copy'}, {'word': 'coin_init', 'action__pattern': '\M^static void coin_init(Coin* c)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'coin_init                  @ext/lod..odepng.cpp  static void coin_init(Coin* c)', 'action__tagname': 'coin_init'}, {'word': 'color', 'action__pattern': '\M^  LodePNGColorMode color;     /*color type and bits, palette and transparency of the PNG file*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'color                      @ext/lod../lodepng.h    LodePNGColorMode color;     \/*color type and bits, palette and transparency of the PNG file*\/', 'action__tagname': 'color'}, {'word': 'color_convert', 'action__pattern': '\M^  unsigned color_convert; /*whether to convert the PNG to the color type you want. Default: yes*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'color_convert              @ext/lod../lodepng.h    unsigned color_convert; \/*whether to convert the PNG to the color type you want. Default: yes*\/', 'action__tagname': 'color_convert'}, {'word': 'color_profile_cleanup', 'action__pattern': '\M^static void color_profile_cleanup(ColorProfile* profile)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'color_profile_cleanup      @ext/lod..odepng.cpp  static void color_profile_cleanup(ColorProfile* profile)', 'action__tagname': 'color_profile_cleanup'}, {'word': 'color_profile_init', 'action__pattern': '\M^static void color_profile_init(ColorProfile* profile, const LodePNGColorMode* mode)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'color_profile_init         @ext/lod..odepng.cpp  static void color_profile_init(ColorProfile* profile, const LodePNGColorMode* mode)', 'action__tagname': 'color_profile_init'}, {'word': 'color_tree_add', 'action__pattern': '\M^static void color_tree_add(ColorTree* tree,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'color_tree_add             @ext/lod..odepng.cpp  static void color_tree_add(ColorTree* tree,', 'action__tagname': 'color_tree_add'}, {'word': 'color_tree_cleanup', 'action__pattern': '\M^static void color_tree_cleanup(ColorTree* tree)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'color_tree_cleanup         @ext/lod..odepng.cpp  static void color_tree_cleanup(ColorTree* tree)', 'action__tagname': 'color_tree_cleanup'}, {'word': 'color_tree_get', 'action__pattern': '\M^static int color_tree_get(ColorTree* tree, unsigned char r, unsigned char g, unsigned char b, unsigned char a)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'color_tree_get             @ext/lod..odepng.cpp  static int color_tree_get(ColorTree* tree, unsigned char r, unsigned char g, unsigned char b, unsigned char a)', 'action__tagname': 'color_tree_get'}, {'word': 'color_tree_has', 'action__pattern': '\M^static int color_tree_has(ColorTree* tree, unsigned char r, unsigned char g, unsigned char b, unsigned char a)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'color_tree_has             @ext/lod..odepng.cpp  static int color_tree_has(ColorTree* tree, unsigned char r, unsigned char g, unsigned char b, unsigned char a)', 'action__tagname': 'color_tree_has'}, {'word': 'color_tree_init', 'action__pattern': '\M^static void color_tree_init(ColorTree* tree)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'color_tree_init            @ext/lod..odepng.cpp  static void color_tree_init(ColorTree* tree)', 'action__tagname': 'color_tree_init'}, {'word': 'colored', 'action__pattern': '\M^  unsigned char colored; /*not greyscale*/$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'colored                    @ext/lod..odepng.cpp    unsigned char colored; \/*not greyscale*\/', 'action__tagname': 'colored'}, {'word': 'colored_done', 'action__pattern': '\M^  unsigned char colored_done;$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'colored_done               @ext/lod..odepng.cpp    unsigned char colored_done;', 'action__tagname': 'colored_done'}, {'word': 'colortype', 'action__pattern': '\M^  LodePNGColorType colortype; /*color type, see PNG standard or documentation further in this header file*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'colortype                  @ext/lod../lodepng.h    LodePNGColorType colortype; \/*color type, see PNG standard or documentation further in this header file*\/', 'action__tagname': 'colortype'}, {'word': 'colour', 'action__pattern': '\M^    const static unsigned int colour = CV_LOAD_IMAGE_COLOR;$', 'action__path': 'modules/gl/include/texture.h', 'kind': 'jump_list', 'abbr': 'colour                     @modules../texture.h      const static unsigned int colour = CV_LOAD_IMAGE_COLOR;', 'action__tagname': 'colour'}, {'word': 'colourFrag', 'action__pattern': '\M^    const static std::string depthFrag, textureFrag, colourFrag, normalFrag,$', 'action__path': 'modules/gl/include/pose_shader.h', 'kind': 'jump_list', 'abbr': 'colourFrag                 @modules..e_shader.h      const static std::string depthFrag, textureFrag, colourFrag, normalFrag,', 'action__tagname': 'colourFrag'}, {'word': 'colourFrag', 'action__pattern': '\M^const std::string PoseShader::colourFrag = "                    \\n\\$', 'action__path': 'modules/gl/src/pose_shader.cc', 'kind': 'jump_list', 'abbr': 'colourFrag                 @modules.._shader.cc  const std::string PoseShader::colourFrag = "                    \\n\\', 'action__tagname': 'colourFrag'}, {'word': 'colourShader', 'action__pattern': '\M^    PoseShader colourShader;$', 'action__path': 'apps/multicam_mesh_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'colourShader               @apps/mu..rc/main.cc      PoseShader colourShader;', 'action__tagname': 'colourShader'}, {'word': 'colourShader', 'action__pattern': '\M^    gl::ShaderProgram edgeShader, edgeGeomShader, depthShader, skinShader, colourShader;$', 'action__path': 'apps/pose_renderer/include/pose_renderer.h', 'kind': 'jump_list', 'abbr': 'colourShader               @apps/po..renderer.h      gl::ShaderProgram edgeShader, edgeGeomShader, depthShader, skinShader, colourShader;', 'action__tagname': 'colourShader'}, {'word': 'colours', 'action__pattern': '\M^      positions = 0, normals, texcoords, colours, depth$', 'action__path': 'modules/gl/include/gbuffer.h', 'kind': 'jump_list', 'abbr': 'colours                    @modules../gbuffer.h        positions = 0, normals, texcoords, colours, depth', 'action__tagname': 'colours'}, {'word': 'colours', 'action__pattern': '\M^    enum class Type { depth, textured, colours, normal };$', 'action__path': 'modules/gl/include/pose_shader.h', 'kind': 'jump_list', 'abbr': 'colours                    @modules..e_shader.h      enum class Type { depth, textured, colours, normal };', 'action__tagname': 'colours'}, {'word': 'cols', 'action__pattern': '\M^    unsigned int rows, cols;$', 'action__path': 'modules/gl/include/tiler.h', 'kind': 'jump_list', 'abbr': 'cols                       @modules..de/tiler.h      unsigned int rows, cols;', 'action__tagname': 'cols'}, {'word': 'compilation_database_folder', 'action__pattern': '\M^compilation_database_folder = ''''$', 'action__path': '.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'compilat..database_folder  @.ycm_extra_conf.py   compilation_database_folder = ''''', 'action__tagname': 'compilation_database_folder'}, {'word': 'compilation_database_folder', 'action__pattern': '\M^compilation_database_folder = ''''$', 'action__path': 'apps/34dof_to_json/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'compilat..database_folder  @apps/34..ra_conf.py  compilation_database_folder = ''''', 'action__tagname': 'compilation_database_folder'}, {'word': 'compilation_database_folder', 'action__pattern': '\M^compilation_database_folder = ''''$', 'action__path': 'apps/bmvc_project/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'compilat..database_folder  @apps/bm..ra_conf.py  compilation_database_folder = ''''', 'action__tagname': 'compilation_database_folder'}, {'word': 'compilation_database_folder', 'action__pattern': '\M^compilation_database_folder = ''''$', 'action__path': 'apps/depth_shader_viewer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'compilat..database_folder  @apps/de..ra_conf.py  compilation_database_folder = ''''', 'action__tagname': 'compilation_database_folder'}, {'word': 'compilation_database_folder', 'action__pattern': '\M^compilation_database_folder = ''''$', 'action__path': 'apps/edge_shader_viewer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'compilat..database_folder  @apps/ed..ra_conf.py  compilation_database_folder = ''''', 'action__tagname': 'compilation_database_folder'}, {'word': 'compilation_database_folder', 'action__pattern': '\M^compilation_database_folder = ''''$', 'action__path': 'apps/gbuffer_viewer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'compilat..database_folder  @apps/gb..ra_conf.py  compilation_database_folder = ''''', 'action__tagname': 'compilation_database_folder'}, {'word': 'compilation_database_folder', 'action__pattern': '\M^compilation_database_folder = ''''$', 'action__path': 'apps/multicam_mesh_viewer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'compilat..database_folder  @apps/mu..ra_conf.py  compilation_database_folder = ''''', 'action__tagname': 'compilation_database_folder'}, {'word': 'compilation_database_folder', 'action__pattern': '\M^compilation_database_folder = ''''$', 'action__path': 'apps/pose_creator/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'compilat..database_folder  @apps/po..ra_conf.py  compilation_database_folder = ''''', 'action__tagname': 'compilation_database_folder'}, {'word': 'compilation_database_folder', 'action__pattern': '\M^compilation_database_folder = ''''$', 'action__path': 'apps/pose_interpolator/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'compilat..database_folder  @apps/po..ra_conf.py  compilation_database_folder = ''''', 'action__tagname': 'compilation_database_folder'}, {'word': 'compilation_database_folder', 'action__pattern': '\M^compilation_database_folder = ''''$', 'action__path': 'apps/pose_renderer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'compilat..database_folder  @apps/po..ra_conf.py  compilation_database_folder = ''''', 'action__tagname': 'compilation_database_folder'}, {'word': 'compilation_database_folder', 'action__pattern': '\M^compilation_database_folder = ''''$', 'action__path': 'apps/pose_viewer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'compilat..database_folder  @apps/po..ra_conf.py  compilation_database_folder = ''''', 'action__tagname': 'compilation_database_folder'}, {'word': 'compile', 'action__pattern': '\M^void Shader::compile() {$', 'action__path': 'modules/gl/src/shader.cc', 'kind': 'jump_list', 'abbr': 'compile                    @modules../shader.cc  void Shader::compile() {', 'action__tagname': 'compile'}, {'word': 'compiled', 'action__pattern': '\M^    bool compiled;$', 'action__path': 'modules/gl/include/shader.h', 'kind': 'jump_list', 'abbr': 'compiled                   @modules..e/shader.h      bool compiled;', 'action__tagname': 'compiled'}, {'word': 'compress', 'action__pattern': '\M^unsigned compress(std::vector<unsigned char>& out, const std::vector<unsigned char>& in,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'compress                   @ext/lod..odepng.cpp  unsigned compress(std::vector<unsigned char>& out, const std::vector<unsigned char>& in,', 'action__tagname': 'compress'}, {'word': 'compress', 'action__pattern': '\M^unsigned compress(std::vector<unsigned char>& out, const unsigned char* in, size_t insize,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'compress                   @ext/lod..odepng.cpp  unsigned compress(std::vector<unsigned char>& out, const unsigned char* in, size_t insize,', 'action__tagname': 'compress'}, {'word': 'compression_method', 'action__pattern': '\M^  unsigned compression_method;/*compression method of the original file. Always 0.*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'compression_method         @ext/lod../lodepng.h    unsigned compression_method;\/*compression method of the original file. Always 0.*\/', 'action__tagname': 'compression_method'}, {'word': 'computeCost', 'action__pattern': '\M^double CameraImageEvaluator::computeCost(const CameraImage& img1,$', 'action__path': 'ext/objective_functions/xing/aig/camera_image_evaluator.cc', 'kind': 'jump_list', 'abbr': 'computeCost                @ext/obj..aluator.cc  double CameraImageEvaluator::computeCost(const CameraImage& img1,', 'action__tagname': 'computeCost'}, {'word': 'computeDist', 'action__pattern': '\M^double computeDist(const cv::Point& p1, const cv::Point& p2)$', 'action__path': 'ext/objective_functions/xing/aig/edge_distance_map.cc', 'kind': 'jump_list', 'abbr': 'computeDist                @ext/obj..nce_map.cc  double computeDist(const cv::Point& p1, const cv::Point& p2)', 'action__tagname': 'computeDist'}, {'word': 'computeSilCost', 'action__pattern': '\M^double computeSilCost(const cv::Mat& sil1, const cv::Mat& sil2, const T& bg)$', 'action__path': 'ext/objective_functions/xing/aig/silhouette_evaluator.cc', 'kind': 'jump_list', 'abbr': 'computeSilCost             @ext/obj..aluator.cc  double computeSilCost(const cv::Mat& sil1, const cv::Mat& sil2, const T& bg)', 'action__tagname': 'computeSilCost'}, {'word': 'cone', 'action__pattern': '\M^glm::mat4 cone(float ratio)$', 'action__path': 'modules/gl/include/cone.h', 'kind': 'jump_list', 'abbr': 'cone                       @modules..ude/cone.h  glm::mat4 cone(float ratio)', 'action__tagname': 'cone'}, {'word': 'configFile', 'action__pattern': '\M^      std::string logfile, configFile, meshFile, outputDir, inputDir, poseFile,$', 'action__path': 'apps/bmvc_project/include/bmvc_options.h', 'kind': 'jump_list', 'abbr': 'configFile                 @apps/bm.._options.h        std::string logfile, configFile, meshFile, outputDir, inputDir, poseFile,', 'action__tagname': 'configFile'}, {'word': 'configFile', 'action__pattern': '\M^      std::string configFile,$', 'action__path': 'apps/depth_shader_viewer/include/depth_shader_viewer_options.h', 'kind': 'jump_list', 'abbr': 'configFile                 @apps/de.._options.h        std::string configFile,', 'action__tagname': 'configFile'}, {'word': 'configFile', 'action__pattern': '\M^      std::string configFile,$', 'action__path': 'apps/edge_shader_viewer/include/edge_shader_viewer_options.h', 'kind': 'jump_list', 'abbr': 'configFile                 @apps/ed.._options.h        std::string configFile,', 'action__tagname': 'configFile'}, {'word': 'configFile', 'action__pattern': '\M^      std::string configFile,$', 'action__path': 'apps/gbuffer_viewer/include/gbuffer_viewer_options.h', 'kind': 'jump_list', 'abbr': 'configFile                 @apps/gb.._options.h        std::string configFile,', 'action__tagname': 'configFile'}, {'word': 'configFile', 'action__pattern': '\M^      std::string configFile, meshFile, poseFile, fragShader, vertShader;$', 'action__path': 'apps/multicam_mesh_viewer/include/mc_mesh_viewer_options.h', 'kind': 'jump_list', 'abbr': 'configFile                 @apps/mu.._options.h        std::string configFile, meshFile, poseFile, fragShader, vertShader;', 'action__tagname': 'configFile'}, {'word': 'configFile', 'action__pattern': '\M^      std::string configFile, meshFile, imageDir, inputPose, outputPose;$', 'action__path': 'apps/pose_creator/include/pose_creator_options.h', 'kind': 'jump_list', 'abbr': 'configFile                 @apps/po.._options.h        std::string configFile, meshFile, imageDir, inputPose, outputPose;', 'action__tagname': 'configFile'}, {'word': 'configFile', 'action__pattern': '\M^    std::string configFile, meshFile, outputDir, shaderDir, shaderList;$', 'action__path': 'apps/pose_renderer/include/pose_renderer_options.h', 'kind': 'jump_list', 'abbr': 'configFile                 @apps/po.._options.h      std::string configFile, meshFile, outputDir, shaderDir, shaderList;', 'action__tagname': 'configFile'}, {'word': 'configFile', 'action__pattern': '\M^      std::string configFile, meshFile, fragShader, vertShader, restPose;$', 'action__path': 'apps/pose_viewer/include/pose_viewer_options.h', 'kind': 'jump_list', 'abbr': 'configFile                 @apps/po.._options.h        std::string configFile, meshFile, fragShader, vertShader, restPose;', 'action__tagname': 'configFile'}, {'word': 'core', 'action__pattern': '\M^namespace core {$', 'action__path': 'modules/core/include/bone.h', 'kind': 'jump_list', 'abbr': 'core                       @modules..ude/bone.h  namespace core {', 'action__tagname': 'core'}, {'word': 'core', 'action__pattern': '\M^namespace core {$', 'action__path': 'modules/core/include/camera_calibration.h', 'kind': 'jump_list', 'abbr': 'core                       @modules..ibration.h  namespace core {', 'action__tagname': 'core'}, {'word': 'core', 'action__pattern': '\M^namespace core{$', 'action__path': 'modules/core/include/core.h', 'kind': 'jump_list', 'abbr': 'core                       @modules..ude/core.h  namespace core{', 'action__tagname': 'core'}, {'word': 'core', 'action__pattern': '\M^namespace core {$', 'action__path': 'modules/core/include/hand_pose_27_dof.h', 'kind': 'jump_list', 'abbr': 'core                       @modules..e_27_dof.h  namespace core {', 'action__tagname': 'core'}, {'word': 'core', 'action__pattern': '\M^namespace core {$', 'action__path': 'modules/core/include/hand_pose_34_dof.h', 'kind': 'jump_list', 'abbr': 'core                       @modules..e_34_dof.h  namespace core {', 'action__tagname': 'core'}, {'word': 'core', 'action__pattern': '\M^namespace core {$', 'action__path': 'modules/core/include/histogram2d.h', 'kind': 'jump_list', 'abbr': 'core                       @modules..togram2d.h  namespace core {', 'action__tagname': 'core'}, {'word': 'core', 'action__pattern': '\M^namespace core {$', 'action__path': 'modules/core/include/image.h', 'kind': 'jump_list', 'abbr': 'core                       @modules..de/image.h  namespace core {', 'action__tagname': 'core'}, {'word': 'core', 'action__pattern': '\M^namespace core {$', 'action__path': 'modules/core/include/old_joint.h', 'kind': 'jump_list', 'abbr': 'core                       @modules..ld_joint.h  namespace core {', 'action__tagname': 'core'}, {'word': 'core', 'action__pattern': '\M^namespace core {$', 'action__path': 'modules/core/include/old_pose.h', 'kind': 'jump_list', 'abbr': 'core                       @modules..old_pose.h  namespace core {', 'action__tagname': 'core'}, {'word': 'core', 'action__pattern': '\M^namespace core {$', 'action__path': 'modules/core/include/options_exceptions.h', 'kind': 'jump_list', 'abbr': 'core                       @modules..ceptions.h  namespace core {', 'action__tagname': 'core'}, {'word': 'core', 'action__pattern': '\M^namespace core {$', 'action__path': 'modules/core/include/pose.h', 'kind': 'jump_list', 'abbr': 'core                       @modules..ude/pose.h  namespace core {', 'action__tagname': 'core'}, {'word': 'core', 'action__pattern': '\M^namespace core {$', 'action__path': 'modules/core/include/pose_vector.h', 'kind': 'jump_list', 'abbr': 'core                       @modules..e_vector.h  namespace core {', 'action__tagname': 'core'}, {'word': 'core', 'action__pattern': '\M^namespace core {$', 'action__path': 'modules/core/include/skeleton.h', 'kind': 'jump_list', 'abbr': 'core                       @modules..skeleton.h  namespace core {', 'action__tagname': 'core'}, {'word': 'core', 'action__pattern': '\M^namespace core {$', 'action__path': 'modules/core/include/sphere_model.h', 'kind': 'jump_list', 'abbr': 'core                       @modules..re_model.h  namespace core {', 'action__tagname': 'core'}, {'word': 'core', 'action__pattern': '\M^namespace core {$', 'action__path': 'modules/core/include/utility.h', 'kind': 'jump_list', 'abbr': 'core                       @modules../utility.h  namespace core {', 'action__tagname': 'core'}, {'word': 'core', 'action__pattern': '\M^namespace core {$', 'action__path': 'modules/core/src/bone.cc', 'kind': 'jump_list', 'abbr': 'core                       @modules..rc/bone.cc  namespace core {', 'action__tagname': 'core'}, {'word': 'core', 'action__pattern': '\M^namespace core {$', 'action__path': 'modules/core/src/camera_calibration.cc', 'kind': 'jump_list', 'abbr': 'core                       @modules..bration.cc  namespace core {', 'action__tagname': 'core'}, {'word': 'core', 'action__pattern': '\M^namespace core {$', 'action__path': 'modules/core/src/hand_pose_27_dof.cc', 'kind': 'jump_list', 'abbr': 'core                       @modules.._27_dof.cc  namespace core {', 'action__tagname': 'core'}, {'word': 'core', 'action__pattern': '\M^namespace core {$', 'action__path': 'modules/core/src/hand_pose_34_dof.cc', 'kind': 'jump_list', 'abbr': 'core                       @modules.._34_dof.cc  namespace core {', 'action__tagname': 'core'}, {'word': 'core', 'action__pattern': '\M^namespace core {$', 'action__path': 'modules/core/src/histogram2d.cc', 'kind': 'jump_list', 'abbr': 'core                       @modules..ogram2d.cc  namespace core {', 'action__tagname': 'core'}, {'word': 'core', 'action__pattern': '\M^namespace core {$', 'action__path': 'modules/core/src/old_joint.cc', 'kind': 'jump_list', 'abbr': 'core                       @modules..d_joint.cc  namespace core {', 'action__tagname': 'core'}, {'word': 'core', 'action__pattern': '\M^namespace core {$', 'action__path': 'modules/core/src/old_pose.cc', 'kind': 'jump_list', 'abbr': 'core                       @modules..ld_pose.cc  namespace core {', 'action__tagname': 'core'}, {'word': 'core', 'action__pattern': '\M^namespace core {$', 'action__path': 'modules/core/src/pose.cc', 'kind': 'jump_list', 'abbr': 'core                       @modules..rc/pose.cc  namespace core {', 'action__tagname': 'core'}, {'word': 'core', 'action__pattern': '\M^namespace core {$', 'action__path': 'modules/core/src/skeleton.cc', 'kind': 'jump_list', 'abbr': 'core                       @modules..keleton.cc  namespace core {', 'action__tagname': 'core'}, {'word': 'core', 'action__pattern': '\M^namespace core {$', 'action__path': 'modules/core/src/sphere_model.cc', 'kind': 'jump_list', 'abbr': 'core                       @modules..e_model.cc  namespace core {', 'action__tagname': 'core'}, {'word': 'core', 'action__pattern': '\M^namespace core {$', 'action__path': 'modules/core/src/utility.cc', 'kind': 'jump_list', 'abbr': 'core                       @modules..utility.cc  namespace core {', 'action__tagname': 'core'}, {'word': 'countZeros', 'action__pattern': '\M^static unsigned countZeros(const unsigned char* data, size_t size, size_t pos)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'countZeros                 @ext/lod..odepng.cpp  static unsigned countZeros(const unsigned char* data, size_t size, size_t pos)', 'action__tagname': 'countZeros'}, {'word': 'count_', 'action__pattern': '\M^    std::vector<ColourCount> count_;$', 'action__path': 'ext/objective_functions/xing/aig/colour_detector.hpp', 'kind': 'jump_list', 'abbr': 'count_                     @ext/obj..tector.hpp      std::vector<ColourCount> count_;', 'action__tagname': 'count_'}, {'word': 'createDepth', 'action__pattern': '\M^cv::Mat createDepth(const int row, const int col, float hint[])$', 'action__path': 'ext/objective_functions/test/aig/test_depth_evaluator.cc', 'kind': 'jump_list', 'abbr': 'createDepth                @ext/obj..aluator.cc  cv::Mat createDepth(const int row, const int col, float hint[])', 'action__tagname': 'createDepth'}, {'word': 'createDepth', 'action__pattern': '\M^cv::Mat createDepth(const int row, const int col, bool hint[], float s)$', 'action__path': 'ext/objective_functions/test/aig/test_silhouette_evaluator.cc', 'kind': 'jump_list', 'abbr': 'createDepth                @ext/obj..aluator.cc  cv::Mat createDepth(const int row, const int col, bool hint[], float s)', 'action__tagname': 'createDepth'}, {'word': 'createEdge', 'action__pattern': '\M^cv::Mat createEdge(const cv::Mat& mat)$', 'action__path': 'ext/objective_functions/test/aig/test_camera_image.cc', 'kind': 'jump_list', 'abbr': 'createEdge                 @ext/obj..a_image.cc  cv::Mat createEdge(const cv::Mat& mat)', 'action__tagname': 'createEdge'}, {'word': 'createEdge', 'action__pattern': '\M^cv::Mat createEdge(int row, int col, bool hint[])$', 'action__path': 'ext/objective_functions/test/aig/test_edge_evaluator.cc', 'kind': 'jump_list', 'abbr': 'createEdge                 @ext/obj..aluator.cc  cv::Mat createEdge(int row, int col, bool hint[])', 'action__tagname': 'createEdge'}, {'word': 'createRGB', 'action__pattern': '\M^cv::Mat createRGB(const int row, const int col, float hint[])$', 'action__path': 'ext/objective_functions/test/aig/test_depth_evaluator.cc', 'kind': 'jump_list', 'abbr': 'createRGB                  @ext/obj..aluator.cc  cv::Mat createRGB(const int row, const int col, float hint[])', 'action__tagname': 'createRGB'}, {'word': 'createRGB', 'action__pattern': '\M^cv::Mat createRGB(const int row, const int col, bool hint[], float s)$', 'action__path': 'ext/objective_functions/test/aig/test_silhouette_evaluator.cc', 'kind': 'jump_list', 'abbr': 'createRGB                  @ext/obj..aluator.cc  cv::Mat createRGB(const int row, const int col, bool hint[], float s)', 'action__tagname': 'createRGB'}, {'word': 'createVector', 'action__pattern': '\M^std::vector<double> HandPose27DOF::createVector() {$', 'action__path': 'modules/core/src/hand_pose_27_dof.cc', 'kind': 'jump_list', 'abbr': 'createVector               @modules.._27_dof.cc  std::vector<double> HandPose27DOF::createVector() {', 'action__tagname': 'createVector'}, {'word': 'createVector', 'action__pattern': '\M^std::vector<double> HandPose34DOF::createVector() {$', 'action__path': 'modules/core/src/hand_pose_34_dof.cc', 'kind': 'jump_list', 'abbr': 'createVector               @modules.._34_dof.cc  std::vector<double> HandPose34DOF::createVector() {', 'action__tagname': 'createVector'}, {'word': 'current', 'action__pattern': '\M^    unsigned int len, current;$', 'action__path': 'modules/ml/include/energy_function_chooser.h', 'kind': 'jump_list', 'abbr': 'current                    @modules.._chooser.h      unsigned int len, current;', 'action__tagname': 'current'}, {'word': 'currentLevel', 'action__pattern': '\M^unsigned int currentLevel = 0;$', 'action__path': 'apps/sph_renderer/src/main.cc', 'kind': 'jump_list', 'abbr': 'currentLevel               @apps/sp..rc/main.cc  unsigned int currentLevel = 0;', 'action__tagname': 'currentLevel'}, {'word': 'currentLevel', 'action__pattern': '\M^unsigned int currentLevel = 0;$', 'action__path': 'apps/sphere_model_renderer/src/main.cc', 'kind': 'jump_list', 'abbr': 'currentLevel               @apps/sp..rc/main.cc  unsigned int currentLevel = 0;', 'action__tagname': 'currentLevel'}, {'word': 'custom_context', 'action__pattern': '\M^  const void* custom_context; /*optional custom settings for custom functions*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'custom_context             @ext/lod../lodepng.h    const void* custom_context; \/*optional custom settings for custom functions*\/', 'action__tagname': 'custom_context'}, {'word': 'custom_context', 'action__pattern': '\M^  const void* custom_context; /*optional custom settings for custom functions*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'custom_context             @ext/lod../lodepng.h    const void* custom_context; \/*optional custom settings for custom functions*\/', 'action__tagname': 'custom_context'}, {'word': 'custom_deflate', 'action__pattern': '\M^  unsigned (*custom_deflate)(unsigned char**, size_t*,$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'custom_deflate             @ext/lod../lodepng.h    unsigned (*custom_deflate)(unsigned char**, size_t*,', 'action__tagname': 'custom_deflate'}, {'word': 'custom_inflate', 'action__pattern': '\M^  unsigned (*custom_inflate)(unsigned char**, size_t*,$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'custom_inflate             @ext/lod../lodepng.h    unsigned (*custom_inflate)(unsigned char**, size_t*,', 'action__tagname': 'custom_inflate'}, {'word': 'custom_zlib', 'action__pattern': '\M^  unsigned (*custom_zlib)(unsigned char**, size_t*,$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'custom_zlib                @ext/lod../lodepng.h    unsigned (*custom_zlib)(unsigned char**, size_t*,', 'action__tagname': 'custom_zlib'}, {'word': 'custom_zlib', 'action__pattern': '\M^  unsigned (*custom_zlib)(unsigned char**, size_t*,$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'custom_zlib                @ext/lod../lodepng.h    unsigned (*custom_zlib)(unsigned char**, size_t*,', 'action__tagname': 'custom_zlib'}, {'word': 'cylinderWVPs', 'action__pattern': '\M^    std::vector<glm::mat4> cylinderWVPs;$', 'action__path': 'modules/gl/include/quadric_hand.h', 'kind': 'jump_list', 'abbr': 'cylinderWVPs               @modules..ric_hand.h      std::vector<glm::mat4> cylinderWVPs;', 'action__tagname': 'cylinderWVPs'}, {'word': 'd', 'action__pattern': '\M^    DepthSplitFunctionFactory(DepthSplitFunctionFactory&& d) = default;$', 'action__path': 'modules/ml/include/depth_split_function_factory.h', 'kind': 'jump_list', 'abbr': 'd                          @modules.._factory.h      DepthSplitFunctionFactory(DepthSplitFunctionFactory&& d) = default;', 'action__tagname': 'd'}, {'word': 'data', 'action__pattern': '\M^  unsigned char* data;$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'data                       @ext/lod..odepng.cpp    unsigned char* data;', 'action__tagname': 'data'}, {'word': 'data', 'action__pattern': '\M^  unsigned* data;$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'data                       @ext/lod..odepng.cpp    unsigned* data;', 'action__tagname': 'data'}, {'word': 'data', 'action__pattern': '\M^    cv::Mat data;$', 'action__path': 'modules/core/include/histogram2d.h', 'kind': 'jump_list', 'abbr': 'data                       @modules..togram2d.h      cv::Mat data;', 'action__tagname': 'data'}, {'word': 'data', 'action__pattern': '\M^    std::vector<std::string> data;$', 'action__path': 'modules/ml/include/latent_tree_node.h', 'kind': 'jump_list', 'abbr': 'data                       @modules..ree_node.h      std::vector<std::string> data;', 'action__tagname': 'data'}, {'word': 'data', 'action__pattern': '\M^    DataType data;$', 'action__path': 'modules/ml/include/training_data.h', 'kind': 'jump_list', 'abbr': 'data                       @modules..ing_data.h      DataType data;', 'action__tagname': 'data'}, {'word': 'dataAll', 'action__pattern': '\M^    std::vector<TrainingData<int>> dataAll, dataHalf, dataQuarter, dataEighth;$', 'action__path': 'modules/ml/test/discrete_entropy_test.cc', 'kind': 'jump_list', 'abbr': 'dataAll                    @modules..py_test.cc      std::vector<TrainingData<int>> dataAll, dataHalf, dataQuarter, dataEighth;', 'action__tagname': 'dataAll'}, {'word': 'dataEighth', 'action__pattern': '\M^    std::vector<TrainingData<int>> dataAll, dataHalf, dataQuarter, dataEighth;$', 'action__path': 'modules/ml/test/discrete_entropy_test.cc', 'kind': 'jump_list', 'abbr': 'dataEighth                 @modules..py_test.cc      std::vector<TrainingData<int>> dataAll, dataHalf, dataQuarter, dataEighth;', 'action__tagname': 'dataEighth'}, {'word': 'dataHalf', 'action__pattern': '\M^    std::vector<TrainingData<int>> dataAll, dataHalf, dataQuarter, dataEighth;$', 'action__path': 'modules/ml/test/discrete_entropy_test.cc', 'kind': 'jump_list', 'abbr': 'dataHalf                   @modules..py_test.cc      std::vector<TrainingData<int>> dataAll, dataHalf, dataQuarter, dataEighth;', 'action__tagname': 'dataHalf'}, {'word': 'dataQuarter', 'action__pattern': '\M^    std::vector<TrainingData<int>> dataAll, dataHalf, dataQuarter, dataEighth;$', 'action__path': 'modules/ml/test/discrete_entropy_test.cc', 'kind': 'jump_list', 'abbr': 'dataQuarter                @modules..py_test.cc      std::vector<TrainingData<int>> dataAll, dataHalf, dataQuarter, dataEighth;', 'action__tagname': 'dataQuarter'}, {'word': 'database', 'action__pattern': '\M^  database = None$', 'action__path': '.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'database                   @.ycm_extra_conf.py     database = None', 'action__tagname': 'database'}, {'word': 'database', 'action__pattern': '\M^  database = ycm_core.CompilationDatabase( compilation_database_folder )$', 'action__path': '.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'database                   @.ycm_extra_conf.py     database = ycm_core.CompilationDatabase( compilation_database_folder )', 'action__tagname': 'database'}, {'word': 'database', 'action__pattern': '\M^  database = None$', 'action__path': 'apps/34dof_to_json/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'database                   @apps/34..ra_conf.py    database = None', 'action__tagname': 'database'}, {'word': 'database', 'action__pattern': '\M^  database = ycm_core.CompilationDatabase( compilation_database_folder )$', 'action__path': 'apps/34dof_to_json/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'database                   @apps/34..ra_conf.py    database = ycm_core.CompilationDatabase( compilation_database_folder )', 'action__tagname': 'database'}, {'word': 'database', 'action__pattern': '\M^  database = None$', 'action__path': 'apps/bmvc_project/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'database                   @apps/bm..ra_conf.py    database = None', 'action__tagname': 'database'}, {'word': 'database', 'action__pattern': '\M^  database = ycm_core.CompilationDatabase( compilation_database_folder )$', 'action__path': 'apps/bmvc_project/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'database                   @apps/bm..ra_conf.py    database = ycm_core.CompilationDatabase( compilation_database_folder )', 'action__tagname': 'database'}, {'word': 'database', 'action__pattern': '\M^  database = None$', 'action__path': 'apps/depth_shader_viewer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'database                   @apps/de..ra_conf.py    database = None', 'action__tagname': 'database'}, {'word': 'database', 'action__pattern': '\M^  database = ycm_core.CompilationDatabase( compilation_database_folder )$', 'action__path': 'apps/depth_shader_viewer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'database                   @apps/de..ra_conf.py    database = ycm_core.CompilationDatabase( compilation_database_folder )', 'action__tagname': 'database'}, {'word': 'database', 'action__pattern': '\M^  database = None$', 'action__path': 'apps/edge_shader_viewer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'database                   @apps/ed..ra_conf.py    database = None', 'action__tagname': 'database'}, {'word': 'database', 'action__pattern': '\M^  database = ycm_core.CompilationDatabase( compilation_database_folder )$', 'action__path': 'apps/edge_shader_viewer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'database                   @apps/ed..ra_conf.py    database = ycm_core.CompilationDatabase( compilation_database_folder )', 'action__tagname': 'database'}, {'word': 'database', 'action__pattern': '\M^  database = None$', 'action__path': 'apps/gbuffer_viewer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'database                   @apps/gb..ra_conf.py    database = None', 'action__tagname': 'database'}, {'word': 'database', 'action__pattern': '\M^  database = ycm_core.CompilationDatabase( compilation_database_folder )$', 'action__path': 'apps/gbuffer_viewer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'database                   @apps/gb..ra_conf.py    database = ycm_core.CompilationDatabase( compilation_database_folder )', 'action__tagname': 'database'}, {'word': 'database', 'action__pattern': '\M^  database = None$', 'action__path': 'apps/multicam_mesh_viewer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'database                   @apps/mu..ra_conf.py    database = None', 'action__tagname': 'database'}, {'word': 'database', 'action__pattern': '\M^  database = ycm_core.CompilationDatabase( compilation_database_folder )$', 'action__path': 'apps/multicam_mesh_viewer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'database                   @apps/mu..ra_conf.py    database = ycm_core.CompilationDatabase( compilation_database_folder )', 'action__tagname': 'database'}, {'word': 'database', 'action__pattern': '\M^  database = None$', 'action__path': 'apps/pose_creator/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'database                   @apps/po..ra_conf.py    database = None', 'action__tagname': 'database'}, {'word': 'database', 'action__pattern': '\M^  database = ycm_core.CompilationDatabase( compilation_database_folder )$', 'action__path': 'apps/pose_creator/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'database                   @apps/po..ra_conf.py    database = ycm_core.CompilationDatabase( compilation_database_folder )', 'action__tagname': 'database'}, {'word': 'database', 'action__pattern': '\M^  database = None$', 'action__path': 'apps/pose_interpolator/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'database                   @apps/po..ra_conf.py    database = None', 'action__tagname': 'database'}, {'word': 'database', 'action__pattern': '\M^  database = ycm_core.CompilationDatabase( compilation_database_folder )$', 'action__path': 'apps/pose_interpolator/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'database                   @apps/po..ra_conf.py    database = ycm_core.CompilationDatabase( compilation_database_folder )', 'action__tagname': 'database'}, {'word': 'database', 'action__pattern': '\M^  database = None$', 'action__path': 'apps/pose_renderer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'database                   @apps/po..ra_conf.py    database = None', 'action__tagname': 'database'}, {'word': 'database', 'action__pattern': '\M^  database = ycm_core.CompilationDatabase( compilation_database_folder )$', 'action__path': 'apps/pose_renderer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'database                   @apps/po..ra_conf.py    database = ycm_core.CompilationDatabase( compilation_database_folder )', 'action__tagname': 'database'}, {'word': 'database', 'action__pattern': '\M^  database = None$', 'action__path': 'apps/pose_viewer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'database                   @apps/po..ra_conf.py    database = None', 'action__tagname': 'database'}, {'word': 'database', 'action__pattern': '\M^  database = ycm_core.CompilationDatabase( compilation_database_folder )$', 'action__path': 'apps/pose_viewer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'database                   @apps/po..ra_conf.py    database = ycm_core.CompilationDatabase( compilation_database_folder )', 'action__tagname': 'database'}, {'word': 'day', 'action__pattern': '\M^  unsigned day;     /*1-31*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'day                        @ext/lod../lodepng.h    unsigned day;     \/*1-31*\/', 'action__tagname': 'day'}, {'word': 'decltype', 'action__pattern': '\M^  decltype((*tree->leaf)(f)) {$', 'action__path': 'modules/ml/include/decision_tree.h', 'kind': 'jump_list', 'abbr': 'decltype                   @modules..ion_tree.h    decltype((*tree->leaf)(f)) {', 'action__tagname': 'decltype'}, {'word': 'decode', 'action__pattern': '\M^unsigned decode(std::vector<unsigned char>& out, unsigned& w, unsigned& h, const std::string& filename,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'decode                     @ext/lod..odepng.cpp  unsigned decode(std::vector<unsigned char>& out, unsigned& w, unsigned& h, const std::string& filename,', 'action__tagname': 'decode'}, {'word': 'decode', 'action__pattern': '\M^unsigned decode(std::vector<unsigned char>& out, unsigned& w, unsigned& h, const unsigned char* in,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'decode                     @ext/lod..odepng.cpp  unsigned decode(std::vector<unsigned char>& out, unsigned& w, unsigned& h, const unsigned char* in,', 'action__tagname': 'decode'}, {'word': 'decode', 'action__pattern': '\M^unsigned decode(std::vector<unsigned char>& out, unsigned& w, unsigned& h,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'decode                     @ext/lod..odepng.cpp  unsigned decode(std::vector<unsigned char>& out, unsigned& w, unsigned& h,', 'action__tagname': 'decode'}, {'word': 'decodeGeneric', 'action__pattern': '\M^static void decodeGeneric(unsigned char** out, unsigned* w, unsigned* h,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'decodeGeneric              @ext/lod..odepng.cpp  static void decodeGeneric(unsigned char** out, unsigned* w, unsigned* h,', 'action__tagname': 'decodeGeneric'}, {'word': 'decoder', 'action__pattern': '\M^  LodePNGDecoderSettings decoder; /*the decoding settings*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'decoder                    @ext/lod../lodepng.h    LodePNGDecoderSettings decoder; \/*the decoding settings*\/', 'action__tagname': 'decoder'}, {'word': 'decompress', 'action__pattern': '\M^unsigned decompress(std::vector<unsigned char>& out, const std::vector<unsigned char>& in,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'decompress                 @ext/lod..odepng.cpp  unsigned decompress(std::vector<unsigned char>& out, const std::vector<unsigned char>& in,', 'action__tagname': 'decompress'}, {'word': 'decompress', 'action__pattern': '\M^unsigned decompress(std::vector<unsigned char>& out, const unsigned char* in, size_t insize,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'decompress                 @ext/lod..odepng.cpp  unsigned decompress(std::vector<unsigned char>& out, const unsigned char* in, size_t insize,', 'action__tagname': 'decompress'}, {'word': 'deflate', 'action__pattern': '\M^static unsigned deflate(unsigned char** out, size_t* outsize,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'deflate                    @ext/lod..odepng.cpp  static unsigned deflate(unsigned char** out, size_t* outsize,', 'action__tagname': 'deflate'}, {'word': 'deflateDynamic', 'action__pattern': '\M^static unsigned deflateDynamic(ucvector* out, size_t* bp, Hash* hash,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'deflateDynamic             @ext/lod..odepng.cpp  static unsigned deflateDynamic(ucvector* out, size_t* bp, Hash* hash,', 'action__tagname': 'deflateDynamic'}, {'word': 'deflateFixed', 'action__pattern': '\M^static unsigned deflateFixed(ucvector* out, size_t* bp, Hash* hash,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'deflateFixed               @ext/lod..odepng.cpp  static unsigned deflateFixed(ucvector* out, size_t* bp, Hash* hash,', 'action__tagname': 'deflateFixed'}, {'word': 'deflateNoCompression', 'action__pattern': '\M^static unsigned deflateNoCompression(ucvector* out, const unsigned char* data, size_t datasize)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'deflateNoCompression       @ext/lod..odepng.cpp  static unsigned deflateNoCompression(ucvector* out, const unsigned char* data, size_t datasize)', 'action__tagname': 'deflateNoCompression'}, {'word': 'degToRad', 'action__pattern': '\M^inline T degToRad(T deg) {$', 'action__path': 'modules/core/include/mymath.h', 'kind': 'jump_list', 'abbr': 'degToRad                   @modules..e/mymath.h  inline T degToRad(T deg) {', 'action__tagname': 'degToRad'}, {'word': 'depth', 'action__pattern': '\M^    enum class Type { depth, textured, colours, normal };$', 'action__path': 'modules/gl/include/pose_shader.h', 'kind': 'jump_list', 'abbr': 'depth                      @modules..e_shader.h      enum class Type { depth, textured, colours, normal };', 'action__tagname': 'depth'}, {'word': 'depth', 'action__pattern': '\M^unsigned int LatentTreeModel::depth() const {$', 'action__path': 'modules/ml/src/latent_tree_model.cc', 'kind': 'jump_list', 'abbr': 'depth                      @modules..e_model.cc  unsigned int LatentTreeModel::depth() const {', 'action__tagname': 'depth'}, {'word': 'depthBuffer', 'action__pattern': '\M^    OffscreenBuffer depthBuffer, skinBuffer, edgeBuffer;$', 'action__path': 'apps/bmvc_project/src/main.cc', 'kind': 'jump_list', 'abbr': 'depthBuffer                @apps/bm..rc/main.cc      OffscreenBuffer depthBuffer, skinBuffer, edgeBuffer;', 'action__tagname': 'depthBuffer'}, {'word': 'depthBuffer', 'action__pattern': '\M^    gl::OffscreenBuffer edgeBuffer, depthBuffer, skinBuffer;$', 'action__path': 'apps/pose_renderer/include/pose_renderer.h', 'kind': 'jump_list', 'abbr': 'depthBuffer                @apps/po..renderer.h      gl::OffscreenBuffer edgeBuffer, depthBuffer, skinBuffer;', 'action__tagname': 'depthBuffer'}, {'word': 'depthFloat', 'action__pattern': '\M^  depthFloat    = CV_32FC1,$', 'action__path': 'modules/core/include/image.h', 'kind': 'jump_list', 'abbr': 'depthFloat                 @modules..de/image.h    depthFloat    = CV_32FC1,', 'action__tagname': 'depthFloat'}, {'word': 'depthFrag', 'action__pattern': '\M^                  depthFrag, depthVert, skinFrag, skinVert;$', 'action__path': 'apps/bmvc_project/include/bmvc_options.h', 'kind': 'jump_list', 'abbr': 'depthFrag                  @apps/bm.._options.h                    depthFrag, depthVert, skinFrag, skinVert;', 'action__tagname': 'depthFrag'}, {'word': 'depthFrag', 'action__pattern': '\M^    const static std::string depthFrag, textureFrag, colourFrag, normalFrag,$', 'action__path': 'modules/gl/include/pose_shader.h', 'kind': 'jump_list', 'abbr': 'depthFrag                  @modules..e_shader.h      const static std::string depthFrag, textureFrag, colourFrag, normalFrag,', 'action__tagname': 'depthFrag'}, {'word': 'depthFrag', 'action__pattern': '\M^const std::string PoseShader::depthFrag = "                     \\n\\$', 'action__path': 'modules/gl/src/pose_shader.cc', 'kind': 'jump_list', 'abbr': 'depthFrag                  @modules.._shader.cc  const std::string PoseShader::depthFrag = "                     \\n\\', 'action__tagname': 'depthFrag'}, {'word': 'depthHelper', 'action__pattern': '\M^unsigned int LatentTreeModel::depthHelper(const LatentTreeNode& node) const {$', 'action__path': 'modules/ml/src/latent_tree_model.cc', 'kind': 'jump_list', 'abbr': 'depthHelper                @modules..e_model.cc  unsigned int LatentTreeModel::depthHelper(const LatentTreeNode& node) const {', 'action__tagname': 'depthHelper'}, {'word': 'depthShader', 'action__pattern': '\M^    ShaderProgram depthShader, edgeShader, edgeGeomShader, skinShader;$', 'action__path': 'apps/bmvc_project/src/main.cc', 'kind': 'jump_list', 'abbr': 'depthShader                @apps/bm..rc/main.cc      ShaderProgram depthShader, edgeShader, edgeGeomShader, skinShader;', 'action__tagname': 'depthShader'}, {'word': 'depthShader', 'action__pattern': '\M^    gl::ShaderProgram edgeShader, edgeGeomShader, depthShader, skinShader, colourShader;$', 'action__path': 'apps/pose_renderer/include/pose_renderer.h', 'kind': 'jump_list', 'abbr': 'depthShader                @apps/po..renderer.h      gl::ShaderProgram edgeShader, edgeGeomShader, depthShader, skinShader, colourShader;', 'action__tagname': 'depthShader'}, {'word': 'depthUnsigned', 'action__pattern': '\M^  depthUnsigned = CV_16UC1,$', 'action__path': 'modules/core/include/image.h', 'kind': 'jump_list', 'abbr': 'depthUnsigned              @modules..de/image.h    depthUnsigned = CV_16UC1,', 'action__tagname': 'depthUnsigned'}, {'word': 'depthVert', 'action__pattern': '\M^                  depthFrag, depthVert, skinFrag, skinVert;$', 'action__path': 'apps/bmvc_project/include/bmvc_options.h', 'kind': 'jump_list', 'abbr': 'depthVert                  @apps/bm.._options.h                    depthFrag, depthVert, skinFrag, skinVert;', 'action__tagname': 'depthVert'}, {'word': 'detail', 'action__pattern': '\M^namespace detail {$', 'action__path': 'modules/ml/include/depth_split_function.h', 'kind': 'jump_list', 'abbr': 'detail                     @modules..function.h  namespace detail {', 'action__tagname': 'detail'}, {'word': 'detail', 'action__pattern': '\M^namespace detail {$', 'action__path': 'modules/ml/include/latent_regression_tree.h', 'kind': 'jump_list', 'abbr': 'detail                     @modules..ion_tree.h  namespace detail {', 'action__tagname': 'detail'}, {'word': 'detail', 'action__pattern': '\M^namespace detail {$', 'action__path': 'modules/ml/include/tang_energy_function.h', 'kind': 'jump_list', 'abbr': 'detail                     @modules..function.h  namespace detail {', 'action__tagname': 'detail'}, {'word': 'detail', 'action__pattern': '\M^namespace detail {$', 'action__path': 'modules/ml/src/depth_split_function.cc', 'kind': 'jump_list', 'abbr': 'detail                     @modules..unction.cc  namespace detail {', 'action__tagname': 'detail'}, {'word': 'detect', 'action__pattern': '\M^void detect()$', 'action__path': 'ext/objective_functions/prog/colour-detect/main.cc', 'kind': 'jump_list', 'abbr': 'detect                     @ext/obj..ct/main.cc  void detect()', 'action__tagname': 'detect'}, {'word': 'diameters', 'action__pattern': '\M^    const static double diameters[5];$', 'action__path': 'modules/gl/include/quadric_hand.h', 'kind': 'jump_list', 'abbr': 'diameters                  @modules..ric_hand.h      const static double diameters[5];', 'action__tagname': 'diameters'}, {'word': 'diameters', 'action__pattern': '\M^const double QuadricHand::diameters[] = {21.0, 23.0, 21.0, 20.0, 20.0};$', 'action__path': 'modules/gl/src/quadric_hand.cc', 'kind': 'jump_list', 'abbr': 'diameters                  @modules..ic_hand.cc  const double QuadricHand::diameters[] = {21.0, 23.0, 21.0, 20.0, 20.0};', 'action__tagname': 'diameters'}, {'word': 'dis', 'action__pattern': '\M^    std::uniform_int_distribution<> dis;$', 'action__path': 'modules/ml/include/energy_function_chooser.h', 'kind': 'jump_list', 'abbr': 'dis                        @modules.._chooser.h      std::uniform_int_distribution<> dis;', 'action__tagname': 'dis'}, {'word': 'discreteEntropy', 'action__pattern': '\M^double discreteEntropy(const std::vector<std::shared_ptr<TrainingData>>& data){$', 'action__path': 'modules/ml/include/discrete_information_gain.h', 'kind': 'jump_list', 'abbr': 'discreteEntropy            @modules..ion_gain.h  double discreteEntropy(const std::vector<std::shared_ptr<TrainingData>>& data){', 'action__tagname': 'discreteEntropy'}, {'word': 'discreteInformationGain', 'action__pattern': '\M^double discreteInformationGain ($', 'action__path': 'modules/ml/include/discrete_information_gain.h', 'kind': 'jump_list', 'abbr': 'discreteInformationGain    @modules..ion_gain.h  double discreteInformationGain (', 'action__tagname': 'discreteInformationGain'}, {'word': 'display_spheres', 'action__pattern': '\M^void display_spheres(std::vector<geom::Sphere<double>> spheres) {$', 'action__path': 'apps/sph_renderer/src/main.cc', 'kind': 'jump_list', 'abbr': 'display_spheres            @apps/sp..rc/main.cc  void display_spheres(std::vector<geom::Sphere<double>> spheres) {', 'action__tagname': 'display_spheres'}, {'word': 'display_spheres', 'action__pattern': '\M^void display_spheres(double* spheres, unsigned int num_spheres) {$', 'action__path': 'apps/sphere_model_optim/src/main.cc', 'kind': 'jump_list', 'abbr': 'display_spheres            @apps/sp..rc/main.cc  void display_spheres(double* spheres, unsigned int num_spheres) {', 'action__tagname': 'display_spheres'}, {'word': 'display_spheres', 'action__pattern': '\M^void display_spheres(const std::vector<geom::Sphere<double>>& spheres) {$', 'action__path': 'apps/sphere_model_renderer/src/main.cc', 'kind': 'jump_list', 'abbr': 'display_spheres            @apps/sp..rc/main.cc  void display_spheres(const std::vector<geom::Sphere<double>>& spheres) {', 'action__tagname': 'display_spheres'}, {'word': 'dist_between_spheres', 'action__pattern': '\M^double dist_between_spheres(double ** spheres, unsigned int num_spheres) {$', 'action__path': 'apps/sphere_model_optim/src/main.cc', 'kind': 'jump_list', 'abbr': 'dist_between_spheres       @apps/sp..rc/main.cc  double dist_between_spheres(double ** spheres, unsigned int num_spheres) {', 'action__tagname': 'dist_between_spheres'}, {'word': 'distanceCacheLock_', 'action__pattern': '\M^    mutable std::mutex distanceCacheLock_;$', 'action__path': 'ext/objective_functions/xing/aig/edge_distance_map.hpp', 'kind': 'jump_list', 'abbr': 'distanceCacheLock_         @ext/obj..ce_map.hpp      mutable std::mutex distanceCacheLock_;', 'action__tagname': 'distanceCacheLock_'}, {'word': 'distanceCacheReady_', 'action__pattern': '\M^    mutable bool distanceCacheReady_;$', 'action__path': 'ext/objective_functions/xing/aig/edge_distance_map.hpp', 'kind': 'jump_list', 'abbr': 'distanceCacheReady_        @ext/obj..ce_map.hpp      mutable bool distanceCacheReady_;', 'action__tagname': 'distanceCacheReady_'}, {'word': 'distanceCache_', 'action__pattern': '\M^    mutable cv::Mat distanceCache_;$', 'action__path': 'ext/objective_functions/xing/aig/edge_distance_map.hpp', 'kind': 'jump_list', 'abbr': 'distanceCache_             @ext/obj..ce_map.hpp      mutable cv::Mat distanceCache_;', 'action__tagname': 'distanceCache_'}, {'word': 'do_iteration', 'action__pattern': '\M^    void do_iteration(const std::vector<std::pair<cv::Mat, cv::Mat>>& images, unsigned int frame) {$', 'action__path': 'apps/bmvc_project/src/main.cc', 'kind': 'jump_list', 'abbr': 'do_iteration               @apps/bm..rc/main.cc      void do_iteration(const std::vector<std::pair<cv::Mat, cv::Mat>>& images, unsigned int frame) {', 'action__tagname': 'do_iteration'}, {'word': 'dog', 'action__pattern': '\M^double dog(unsigned int x, unsigned int y,$', 'action__path': 'apps/particle_swarm_demo/src/main.cc', 'kind': 'jump_list', 'abbr': 'dog                        @apps/pa..rc/main.cc  double dog(unsigned int x, unsigned int y,', 'action__tagname': 'dog'}, {'word': 'drawAxis', 'action__pattern': '\M^      void drawAxis() {$', 'action__path': 'apps/skel_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'drawAxis                   @apps/sk..rc/main.cc        void drawAxis() {', 'action__tagname': 'drawAxis'}, {'word': 'drawBackground', 'action__pattern': '\M^      bool drawBackground() const { return drawBg; }$', 'action__path': 'apps/pose_viewer/include/pose_viewer_options.h', 'kind': 'jump_list', 'abbr': 'drawBackground             @apps/po.._options.h        bool drawBackground() const { return drawBg; }', 'action__tagname': 'drawBackground'}, {'word': 'drawBg', 'action__pattern': '\M^      bool drawBg;$', 'action__path': 'apps/pose_viewer/include/pose_viewer_options.h', 'kind': 'jump_list', 'abbr': 'drawBg                     @apps/po.._options.h        bool drawBg;', 'action__tagname': 'drawBg'}, {'word': 'drawFunction', 'action__pattern': '\M^      void drawFunction() {$', 'action__path': 'apps/particle_swarm_demo/src/main.cc', 'kind': 'jump_list', 'abbr': 'drawFunction               @apps/pa..rc/main.cc        void drawFunction() {', 'action__tagname': 'drawFunction'}, {'word': 'drawMesh', 'action__pattern': '\M^bool drawMesh = false;$', 'action__path': 'apps/sph_renderer/src/main.cc', 'kind': 'jump_list', 'abbr': 'drawMesh                   @apps/sp..rc/main.cc  bool drawMesh = false;', 'action__tagname': 'drawMesh'}, {'word': 'drawMesh', 'action__pattern': '\M^bool drawMesh = false;$', 'action__path': 'apps/sphere_model_renderer/src/main.cc', 'kind': 'jump_list', 'abbr': 'drawMesh                   @apps/sp..rc/main.cc  bool drawMesh = false;', 'action__tagname': 'drawMesh'}, {'word': 'drawParticles', 'action__pattern': '\M^      void drawParticles() {$', 'action__path': 'apps/particle_swarm_demo/src/main.cc', 'kind': 'jump_list', 'abbr': 'drawParticles              @apps/pa..rc/main.cc        void drawParticles() {', 'action__tagname': 'drawParticles'}, {'word': 'drawPose', 'action__pattern': '\M^      void drawPose(const core::Pose<glm::vec3>& pose, int r, int g, int b) {$', 'action__path': 'apps/skel_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'drawPose                   @apps/sk..rc/main.cc        void drawPose(const core::Pose<glm::vec3>& pose, int r, int g, int b) {', 'action__tagname': 'drawPose'}, {'word': 'drawSpheres', 'action__pattern': '\M^bool drawSpheres = true;$', 'action__path': 'apps/sph_renderer/src/main.cc', 'kind': 'jump_list', 'abbr': 'drawSpheres                @apps/sp..rc/main.cc  bool drawSpheres = true;', 'action__tagname': 'drawSpheres'}, {'word': 'drawSpheres', 'action__pattern': '\M^bool drawSpheres = true;$', 'action__path': 'apps/sphere_model_renderer/src/main.cc', 'kind': 'jump_list', 'abbr': 'drawSpheres                @apps/sp..rc/main.cc  bool drawSpheres = true;', 'action__tagname': 'drawSpheres'}, {'word': 'dump', 'action__pattern': '\M^void dump(const cv::Mat& m)$', 'action__path': 'ext/objective_functions/test/aig/test_camera_image.cc', 'kind': 'jump_list', 'abbr': 'dump                       @ext/obj..a_image.cc  void dump(const cv::Mat& m)', 'action__tagname': 'dump'}, {'word': 'edgeBuffer', 'action__pattern': '\M^    OffscreenBuffer depthBuffer, skinBuffer, edgeBuffer;$', 'action__path': 'apps/bmvc_project/src/main.cc', 'kind': 'jump_list', 'abbr': 'edgeBuffer                 @apps/bm..rc/main.cc      OffscreenBuffer depthBuffer, skinBuffer, edgeBuffer;', 'action__tagname': 'edgeBuffer'}, {'word': 'edgeBuffer', 'action__pattern': '\M^    gl::OffscreenBuffer edgeBuffer, depthBuffer, skinBuffer;$', 'action__path': 'apps/pose_renderer/include/pose_renderer.h', 'kind': 'jump_list', 'abbr': 'edgeBuffer                 @apps/po..renderer.h      gl::OffscreenBuffer edgeBuffer, depthBuffer, skinBuffer;', 'action__tagname': 'edgeBuffer'}, {'word': 'edgeDir', 'action__pattern': '\M^std::string edgeDir; // Produce edge image$', 'action__path': 'ext/objective_functions/prog/segimage/main.cc', 'kind': 'jump_list', 'abbr': 'edgeDir                    @ext/obj..ge/main.cc  std::string edgeDir; \/\/ Produce edge image', 'action__tagname': 'edgeDir'}, {'word': 'edgeDistanceMap_', 'action__pattern': '\M^    EdgeDistanceMap edgeDistanceMap_;$', 'action__path': 'ext/objective_functions/xing/aig/camera_image.hpp', 'kind': 'jump_list', 'abbr': 'edgeDistanceMap_           @ext/obj.._image.hpp      EdgeDistanceMap edgeDistanceMap_;', 'action__tagname': 'edgeDistanceMap_'}, {'word': 'edgeFrag', 'action__pattern': '\M^                  edgeFrag, edgeVert, edgeGeomFrag, edgeGeomVert,$', 'action__path': 'apps/bmvc_project/include/bmvc_options.h', 'kind': 'jump_list', 'abbr': 'edgeFrag                   @apps/bm.._options.h                    edgeFrag, edgeVert, edgeGeomFrag, edgeGeomVert,', 'action__tagname': 'edgeFrag'}, {'word': 'edgeFragShader', 'action__pattern': '\M^                  edgeFragShader,$', 'action__path': 'apps/edge_shader_viewer/include/edge_shader_viewer_options.h', 'kind': 'jump_list', 'abbr': 'edgeFragShader             @apps/ed.._options.h                    edgeFragShader,', 'action__tagname': 'edgeFragShader'}, {'word': 'edgeGeomFrag', 'action__pattern': '\M^                  edgeFrag, edgeVert, edgeGeomFrag, edgeGeomVert,$', 'action__path': 'apps/bmvc_project/include/bmvc_options.h', 'kind': 'jump_list', 'abbr': 'edgeGeomFrag               @apps/bm.._options.h                    edgeFrag, edgeVert, edgeGeomFrag, edgeGeomVert,', 'action__tagname': 'edgeGeomFrag'}, {'word': 'edgeGeomShader', 'action__pattern': '\M^    ShaderProgram depthShader, edgeShader, edgeGeomShader, skinShader;$', 'action__path': 'apps/bmvc_project/src/main.cc', 'kind': 'jump_list', 'abbr': 'edgeGeomShader             @apps/bm..rc/main.cc      ShaderProgram depthShader, edgeShader, edgeGeomShader, skinShader;', 'action__tagname': 'edgeGeomShader'}, {'word': 'edgeGeomShader', 'action__pattern': '\M^    gl::ShaderProgram edgeShader, edgeGeomShader, depthShader, skinShader, colourShader;$', 'action__path': 'apps/pose_renderer/include/pose_renderer.h', 'kind': 'jump_list', 'abbr': 'edgeGeomShader             @apps/po..renderer.h      gl::ShaderProgram edgeShader, edgeGeomShader, depthShader, skinShader, colourShader;', 'action__tagname': 'edgeGeomShader'}, {'word': 'edgeGeomVert', 'action__pattern': '\M^                  edgeFrag, edgeVert, edgeGeomFrag, edgeGeomVert,$', 'action__path': 'apps/bmvc_project/include/bmvc_options.h', 'kind': 'jump_list', 'abbr': 'edgeGeomVert               @apps/bm.._options.h                    edgeFrag, edgeVert, edgeGeomFrag, edgeGeomVert,', 'action__tagname': 'edgeGeomVert'}, {'word': 'edgeListCacheLock_', 'action__pattern': '\M^    mutable std::mutex edgeListCacheLock_;$', 'action__path': 'ext/objective_functions/xing/aig/edge_distance_map.hpp', 'kind': 'jump_list', 'abbr': 'edgeListCacheLock_         @ext/obj..ce_map.hpp      mutable std::mutex edgeListCacheLock_;', 'action__tagname': 'edgeListCacheLock_'}, {'word': 'edgeListCacheReady_', 'action__pattern': '\M^    mutable bool edgeListCacheReady_;$', 'action__path': 'ext/objective_functions/xing/aig/edge_distance_map.hpp', 'kind': 'jump_list', 'abbr': 'edgeListCacheReady_        @ext/obj..ce_map.hpp      mutable bool edgeListCacheReady_;', 'action__tagname': 'edgeListCacheReady_'}, {'word': 'edgeListCache_', 'action__pattern': '\M^    mutable EdgePointList edgeListCache_;$', 'action__path': 'ext/objective_functions/xing/aig/edge_distance_map.hpp', 'kind': 'jump_list', 'abbr': 'edgeListCache_             @ext/obj..ce_map.hpp      mutable EdgePointList edgeListCache_;', 'action__tagname': 'edgeListCache_'}, {'word': 'edgeShader', 'action__pattern': '\M^    ShaderProgram depthShader, edgeShader, edgeGeomShader, skinShader;$', 'action__path': 'apps/bmvc_project/src/main.cc', 'kind': 'jump_list', 'abbr': 'edgeShader                 @apps/bm..rc/main.cc      ShaderProgram depthShader, edgeShader, edgeGeomShader, skinShader;', 'action__tagname': 'edgeShader'}, {'word': 'edgeShader', 'action__pattern': '\M^    ShaderProgram edgeShader;$', 'action__path': 'apps/edge_shader_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'edgeShader                 @apps/ed..rc/main.cc      ShaderProgram edgeShader;', 'action__tagname': 'edgeShader'}, {'word': 'edgeShader', 'action__pattern': '\M^    gl::ShaderProgram edgeShader, edgeGeomShader, depthShader, skinShader, colourShader;$', 'action__path': 'apps/pose_renderer/include/pose_renderer.h', 'kind': 'jump_list', 'abbr': 'edgeShader                 @apps/po..renderer.h      gl::ShaderProgram edgeShader, edgeGeomShader, depthShader, skinShader, colourShader;', 'action__tagname': 'edgeShader'}, {'word': 'edgeVert', 'action__pattern': '\M^                  edgeFrag, edgeVert, edgeGeomFrag, edgeGeomVert,$', 'action__path': 'apps/bmvc_project/include/bmvc_options.h', 'kind': 'jump_list', 'abbr': 'edgeVert                   @apps/bm.._options.h                    edgeFrag, edgeVert, edgeGeomFrag, edgeGeomVert,', 'action__tagname': 'edgeVert'}, {'word': 'edgeVertShader', 'action__pattern': '\M^                  edgeVertShader,$', 'action__path': 'apps/edge_shader_viewer/include/edge_shader_viewer_options.h', 'kind': 'jump_list', 'abbr': 'edgeVertShader             @apps/ed.._options.h                    edgeVertShader,', 'action__tagname': 'edgeVertShader'}, {'word': 'empty', 'action__pattern': '\M^    bool empty;$', 'action__path': 'modules/gl/include/texture.h', 'kind': 'jump_list', 'abbr': 'empty                      @modules../texture.h      bool empty;', 'action__tagname': 'empty'}, {'word': 'enableEqualisation', 'action__pattern': '\M^void enableEqualisation()$', 'action__path': 'ext/objective_functions/prog/showedge/main.cc', 'kind': 'jump_list', 'abbr': 'enableEqualisation         @ext/obj..ge/main.cc  void enableEqualisation()', 'action__tagname': 'enableEqualisation'}, {'word': 'encode', 'action__pattern': '\M^unsigned encode(const std::string& filename,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'encode                     @ext/lod..odepng.cpp  unsigned encode(const std::string& filename,', 'action__tagname': 'encode'}, {'word': 'encode', 'action__pattern': '\M^unsigned encode(std::vector<unsigned char>& out, const unsigned char* in, unsigned w, unsigned h,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'encode                     @ext/lod..odepng.cpp  unsigned encode(std::vector<unsigned char>& out, const unsigned char* in, unsigned w, unsigned h,', 'action__tagname': 'encode'}, {'word': 'encode', 'action__pattern': '\M^unsigned encode(std::vector<unsigned char>& out,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'encode                     @ext/lod..odepng.cpp  unsigned encode(std::vector<unsigned char>& out,', 'action__tagname': 'encode'}, {'word': 'encodeLZ77', 'action__pattern': '\M^static unsigned encodeLZ77(uivector* out, Hash* hash,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'encodeLZ77                 @ext/lod..odepng.cpp  static unsigned encodeLZ77(uivector* out, Hash* hash,', 'action__tagname': 'encodeLZ77'}, {'word': 'encoder', 'action__pattern': '\M^  LodePNGEncoderSettings encoder; /*the encoding settings*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'encoder                    @ext/lod../lodepng.h    LodePNGEncoderSettings encoder; \/*the encoding settings*\/', 'action__tagname': 'encoder'}, {'word': 'end', 'action__pattern': '\M^    glm::vec3 end;$', 'action__path': 'modules/core/include/old_joint.h', 'kind': 'jump_list', 'abbr': 'end                        @modules..ld_joint.h      glm::vec3 end;', 'action__tagname': 'end'}, {'word': 'energyTerm_', 'action__pattern': '\M^    std::vector<std::shared_ptr<EnergyTerm> > energyTerm_;$', 'action__path': 'ext/objective_functions/xing/aig/camera_image_evaluator.hpp', 'kind': 'jump_list', 'abbr': 'energyTerm_                @ext/obj..luator.hpp      std::vector<std::shared_ptr<EnergyTerm> > energyTerm_;', 'action__tagname': 'energyTerm_'}, {'word': 'entries', 'action__pattern': '\M^    std::vector<MeshEntry> entries;$', 'action__path': 'modules/gl/include/mesh.h', 'kind': 'jump_list', 'abbr': 'entries                    @modules..ude/mesh.h      std::vector<MeshEntry> entries;', 'action__tagname': 'entries'}, {'word': 'equalisation', 'action__pattern': '\M^bool equalisation = false;$', 'action__path': 'ext/objective_functions/prog/showedge/main.cc', 'kind': 'jump_list', 'abbr': 'equalisation               @ext/obj..ge/main.cc  bool equalisation = false;', 'action__tagname': 'equalisation'}, {'word': 'error', 'action__pattern': '\M^  unsigned error;$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'error                      @ext/lod../lodepng.h    unsigned error;', 'action__tagname': 'error'}, {'word': 'errorCallback', 'action__pattern': '\M^void errorCallback(int error, const char* description) {$', 'action__path': 'apps/bmvc_project/src/main.cc', 'kind': 'jump_list', 'abbr': 'errorCallback              @apps/bm..rc/main.cc  void errorCallback(int error, const char* description) {', 'action__tagname': 'errorCallback'}, {'word': 'errorCallback', 'action__pattern': '\M^void errorCallback(int error, const char* description) {$', 'action__path': 'apps/depth_shader_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'errorCallback              @apps/de..rc/main.cc  void errorCallback(int error, const char* description) {', 'action__tagname': 'errorCallback'}, {'word': 'errorCallback', 'action__pattern': '\M^void errorCallback(int error, const char* description) {$', 'action__path': 'apps/edge_shader_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'errorCallback              @apps/ed..rc/main.cc  void errorCallback(int error, const char* description) {', 'action__tagname': 'errorCallback'}, {'word': 'errorCallback', 'action__pattern': '\M^void errorCallback(int error, const char* description) {$', 'action__path': 'apps/gbuffer_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'errorCallback              @apps/gb..rc/main.cc  void errorCallback(int error, const char* description) {', 'action__tagname': 'errorCallback'}, {'word': 'errorCallback', 'action__pattern': '\M^void errorCallback(int error, const char* description) {$', 'action__path': 'apps/multicam_mesh_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'errorCallback              @apps/mu..rc/main.cc  void errorCallback(int error, const char* description) {', 'action__tagname': 'errorCallback'}, {'word': 'errorCallback', 'action__pattern': '\M^void errorCallback(int error, const char* description)$', 'action__path': 'apps/particle_swarm_demo/src/main.cc', 'kind': 'jump_list', 'abbr': 'errorCallback              @apps/pa..rc/main.cc  void errorCallback(int error, const char* description)', 'action__tagname': 'errorCallback'}, {'word': 'errorCallback', 'action__pattern': '\M^void errorCallback(int error, const char* description) {$', 'action__path': 'apps/pose_creator/src/main.cc', 'kind': 'jump_list', 'abbr': 'errorCallback              @apps/po..rc/main.cc  void errorCallback(int error, const char* description) {', 'action__tagname': 'errorCallback'}, {'word': 'errorCallback', 'action__pattern': '\M^void errorCallback(int error, const char* description)$', 'action__path': 'apps/pose_renderer/src/main.cc', 'kind': 'jump_list', 'abbr': 'errorCallback              @apps/po..rc/main.cc  void errorCallback(int error, const char* description)', 'action__tagname': 'errorCallback'}, {'word': 'errorCallback', 'action__pattern': '\M^void errorCallback(int error, const char* description) {$', 'action__path': 'apps/pose_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'errorCallback              @apps/po..rc/main.cc  void errorCallback(int error, const char* description) {', 'action__tagname': 'errorCallback'}, {'word': 'errorCallback', 'action__pattern': '\M^void errorCallback(int error, const char* description)$', 'action__path': 'apps/skel_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'errorCallback              @apps/sk..rc/main.cc  void errorCallback(int error, const char* description)', 'action__tagname': 'errorCallback'}, {'word': 'errorCallback', 'action__pattern': '\M^void errorCallback(int error, const char* description)$', 'action__path': 'apps/sph_renderer/src/main.cc', 'kind': 'jump_list', 'abbr': 'errorCallback              @apps/sp..rc/main.cc  void errorCallback(int error, const char* description)', 'action__tagname': 'errorCallback'}, {'word': 'errorCallback', 'action__pattern': '\M^void errorCallback(int error, const char* description)$', 'action__path': 'apps/sphere_model_optim/src/main.cc', 'kind': 'jump_list', 'abbr': 'errorCallback              @apps/sp..rc/main.cc  void errorCallback(int error, const char* description)', 'action__tagname': 'errorCallback'}, {'word': 'errorCallback', 'action__pattern': '\M^void errorCallback(int error, const char* description)$', 'action__path': 'apps/sphere_model_renderer/src/main.cc', 'kind': 'jump_list', 'abbr': 'errorCallback              @apps/sp..rc/main.cc  void errorCallback(int error, const char* description)', 'action__tagname': 'errorCallback'}, {'word': 'executionCode', 'action__pattern': '\M^std::string executionCode;$', 'action__path': 'ext/objective_functions/prog/erolation/main.cc', 'kind': 'jump_list', 'abbr': 'executionCode              @ext/obj..on/main.cc  std::string executionCode;', 'action__tagname': 'executionCode'}, {'word': 'extractEdge', 'action__pattern': '\M^void CameraImage::extractEdge() $', 'action__path': 'ext/objective_functions/xing/aig/camera_image.cc', 'kind': 'jump_list', 'abbr': 'extractEdge                @ext/obj..a_image.cc  void CameraImage::extractEdge() ', 'action__tagname': 'extractEdge'}, {'word': 'eye', 'action__pattern': '\M^    glm::vec3 eye, pos, up;$', 'action__path': 'modules/gl/include/camera.h', 'kind': 'jump_list', 'abbr': 'eye                        @modules..e/camera.h      glm::vec3 eye, pos, up;', 'action__tagname': 'eye'}, {'word': 'f', 'action__pattern': '\M^      const std::function<double(unsigned int, unsigned int)>& f;$', 'action__path': 'apps/particle_swarm_demo/src/main.cc', 'kind': 'jump_list', 'abbr': 'f                          @apps/pa..rc/main.cc        const std::function<double(unsigned int, unsigned int)>& f;', 'action__tagname': 'f'}, {'word': 'fAll', 'action__pattern': '\M^    SplitFunction fAll;$', 'action__path': 'modules/ml/test/discrete_information_gain_test.cc', 'kind': 'jump_list', 'abbr': 'fAll                       @modules..in_test.cc      SplitFunction fAll;', 'action__tagname': 'fAll'}, {'word': 'far', 'action__pattern': '\M^std::uint16_t near = 0, far = 1000;$', 'action__path': 'ext/objective_functions/prog/depthseg/main.cc', 'kind': 'jump_list', 'abbr': 'far                        @ext/obj..eg/main.cc  std::uint16_t near = 0, far = 1000;', 'action__tagname': 'far'}, {'word': 'fbo', 'action__pattern': '\M^    GLuint fbo;$', 'action__path': 'modules/gl/include/gbuffer.h', 'kind': 'jump_list', 'abbr': 'fbo                        @modules../gbuffer.h      GLuint fbo;', 'action__tagname': 'fbo'}, {'word': 'fbo', 'action__pattern': '\M^    GLuint fbo;$', 'action__path': 'modules/gl/include/offscreen_buffer.h', 'kind': 'jump_list', 'abbr': 'fbo                        @modules..n_buffer.h      GLuint fbo;', 'action__tagname': 'fbo'}, {'word': 'file', 'action__pattern': '\M^    std::ifstream file;$', 'action__path': 'modules/io/include/humaneva_pose_reader.h', 'kind': 'jump_list', 'abbr': 'file                       @modules..e_reader.h      std::ifstream file;', 'action__tagname': 'file'}, {'word': 'file', 'action__pattern': '\M^    std::ifstream file;$', 'action__path': 'modules/io/include/json_pose_reader.h', 'kind': 'jump_list', 'abbr': 'file                       @modules..e_reader.h      std::ifstream file;', 'action__tagname': 'file'}, {'word': 'file', 'action__pattern': '\M^    std::ofstream file;$', 'action__path': 'modules/io/include/json_pose_writer.h', 'kind': 'jump_list', 'abbr': 'file                       @modules..e_writer.h      std::ofstream file;', 'action__tagname': 'file'}, {'word': 'file', 'action__pattern': '\M^    std::ifstream file;$', 'action__path': 'modules/io/include/mesh_reader.h', 'kind': 'jump_list', 'abbr': 'file                       @modules..h_reader.h      std::ifstream file;', 'action__tagname': 'file'}, {'word': 'file', 'action__pattern': '\M^    std::ifstream file;$', 'action__path': 'modules/io/include/sph_reader.h', 'kind': 'jump_list', 'abbr': 'file                       @modules..h_reader.h      std::ifstream file;', 'action__tagname': 'file'}, {'word': 'file', 'action__pattern': '\M^    std::ifstream file;$', 'action__path': 'modules/io/include/sphere_model_reader.h', 'kind': 'jump_list', 'abbr': 'file                       @modules..l_reader.h      std::ifstream file;', 'action__tagname': 'file'}, {'word': 'file', 'action__pattern': '\M^    std::ofstream file;$', 'action__path': 'modules/io/include/sphere_model_writer.h', 'kind': 'jump_list', 'abbr': 'file                       @modules..l_writer.h      std::ofstream file;', 'action__tagname': 'file'}, {'word': 'file', 'action__pattern': '\M^    std::ifstream file;$', 'action__path': 'modules/io/include/tang_pose_reader.h', 'kind': 'jump_list', 'abbr': 'file                       @modules..e_reader.h      std::ifstream file;', 'action__tagname': 'file'}, {'word': 'file', 'action__pattern': '\M^    std::ifstream file;$', 'action__path': 'modules/io/include/wenping_pose_reader.h', 'kind': 'jump_list', 'abbr': 'file                       @modules..e_reader.h      std::ifstream file;', 'action__tagname': 'file'}, {'word': 'fileNum', 'action__pattern': '\M^int fileNum = -1;$', 'action__path': 'ext/objective_functions/prog/colour-detect/main.cc', 'kind': 'jump_list', 'abbr': 'fileNum                    @ext/obj..ct/main.cc  int fileNum = -1;', 'action__tagname': 'fileNum'}, {'word': 'filenameFormat', 'action__pattern': '\M^char *filenameFormat = nullptr;$', 'action__path': 'ext/objective_functions/prog/colour-detect/main.cc', 'kind': 'jump_list', 'abbr': 'filenameFormat             @ext/obj..ct/main.cc  char *filenameFormat = nullptr;', 'action__tagname': 'filenameFormat'}, {'word': 'fillContour', 'action__pattern': '\M^void fillContour(cv::Mat& img)$', 'action__path': 'ext/objective_functions/prog/erolation/main.cc', 'kind': 'jump_list', 'abbr': 'fillContour                @ext/obj..on/main.cc  void fillContour(cv::Mat& img)', 'action__tagname': 'fillContour'}, {'word': 'filter', 'action__pattern': '\M^static unsigned filter(unsigned char* out, const unsigned char* in, unsigned w, unsigned h,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'filter                     @ext/lod..odepng.cpp  static unsigned filter(unsigned char* out, const unsigned char* in, unsigned w, unsigned h,', 'action__tagname': 'filter'}, {'word': 'filterScanline', 'action__pattern': '\M^static void filterScanline(unsigned char* out, const unsigned char* scanline, const unsigned char* prevline,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'filterScanline             @ext/lod..odepng.cpp  static void filterScanline(unsigned char* out, const unsigned char* scanline, const unsigned char* prevline,', 'action__tagname': 'filterScanline'}, {'word': 'filter_method', 'action__pattern': '\M^  unsigned filter_method;     /*filter method of the original file*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'filter_method              @ext/lod../lodepng.h    unsigned filter_method;     \/*filter method of the original file*\/', 'action__tagname': 'filter_method'}, {'word': 'filter_palette_zero', 'action__pattern': '\M^  unsigned filter_palette_zero;$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'filter_palette_zero        @ext/lod../lodepng.h    unsigned filter_palette_zero;', 'action__tagname': 'filter_palette_zero'}, {'word': 'filter_strategy', 'action__pattern': '\M^  LodePNGFilterStrategy filter_strategy;$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'filter_strategy            @ext/lod../lodepng.h    LodePNGFilterStrategy filter_strategy;', 'action__tagname': 'filter_strategy'}, {'word': 'finalTransformation', 'action__pattern': '\M^      glm::mat4 finalTransformation;$', 'action__path': 'modules/gl/include/mesh.h', 'kind': 'jump_list', 'abbr': 'finalTransformation        @modules..ude/mesh.h        glm::mat4 finalTransformation;', 'action__tagname': 'finalTransformation'}, {'word': 'findDimensions', 'action__pattern': '\M^std::pair<unsigned int, unsigned int> Tiler::findDimensions(unsigned int size){$', 'action__path': 'modules/gl/src/tiler.cc', 'kind': 'jump_list', 'abbr': 'findDimensions             @modules..c/tiler.cc  std::pair<unsigned int, unsigned int> Tiler::findDimensions(unsigned int size){', 'action__tagname': 'findDimensions'}, {'word': 'findNeighbours', 'action__pattern': '\M^  cv::Mat HysteresisThresholder::findNeighbours(const std::vector<cv::Point>& seeds,$', 'action__path': 'modules/img/src/hysteresis_thresholder.cc', 'kind': 'jump_list', 'abbr': 'findNeighbours             @modules..sholder.cc    cv::Mat HysteresisThresholder::findNeighbours(const std::vector<cv::Point>& seeds,', 'action__tagname': 'findNeighbours'}, {'word': 'findSeeds', 'action__pattern': '\M^  std::vector<cv::Point> HysteresisThresholder::findSeeds(const cv::Mat& image,$', 'action__path': 'modules/img/src/hysteresis_thresholder.cc', 'kind': 'jump_list', 'abbr': 'findSeeds                  @modules..sholder.cc    std::vector<cv::Point> HysteresisThresholder::findSeeds(const cv::Mat& image,', 'action__tagname': 'findSeeds'}, {'word': 'fingerRot', 'action__pattern': '\M^static float fingerRot;$', 'action__path': 'apps/depth_shader_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'fingerRot                  @apps/de..rc/main.cc  static float fingerRot;', 'action__tagname': 'fingerRot'}, {'word': 'fingerRot', 'action__pattern': '\M^static float fingerRot;$', 'action__path': 'apps/edge_shader_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'fingerRot                  @apps/ed..rc/main.cc  static float fingerRot;', 'action__tagname': 'fingerRot'}, {'word': 'fingerRot', 'action__pattern': '\M^static float fingerRot;$', 'action__path': 'apps/gbuffer_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'fingerRot                  @apps/gb..rc/main.cc  static float fingerRot;', 'action__tagname': 'fingerRot'}, {'word': 'fingerRot', 'action__pattern': '\M^static float fingerRot;$', 'action__path': 'apps/multicam_mesh_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'fingerRot                  @apps/mu..rc/main.cc  static float fingerRot;', 'action__tagname': 'fingerRot'}, {'word': 'fix_png', 'action__pattern': '\M^  unsigned fix_png;$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'fix_png                    @ext/lod../lodepng.h    unsigned fix_png;', 'action__tagname': 'fix_png'}, {'word': 'flags', 'action__pattern': '\M^flags = [$', 'action__path': '.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'flags                      @.ycm_extra_conf.py   flags = [', 'action__tagname': 'flags'}, {'word': 'flags', 'action__pattern': '\M^flags = [$', 'action__path': 'apps/34dof_to_json/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'flags                      @apps/34..ra_conf.py  flags = [', 'action__tagname': 'flags'}, {'word': 'flags', 'action__pattern': '\M^flags = [$', 'action__path': 'apps/bmvc_project/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'flags                      @apps/bm..ra_conf.py  flags = [', 'action__tagname': 'flags'}, {'word': 'flags', 'action__pattern': '\M^flags = [$', 'action__path': 'apps/depth_shader_viewer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'flags                      @apps/de..ra_conf.py  flags = [', 'action__tagname': 'flags'}, {'word': 'flags', 'action__pattern': '\M^flags = [$', 'action__path': 'apps/edge_shader_viewer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'flags                      @apps/ed..ra_conf.py  flags = [', 'action__tagname': 'flags'}, {'word': 'flags', 'action__pattern': '\M^flags = [$', 'action__path': 'apps/gbuffer_viewer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'flags                      @apps/gb..ra_conf.py  flags = [', 'action__tagname': 'flags'}, {'word': 'flags', 'action__pattern': '\M^flags = [$', 'action__path': 'apps/multicam_mesh_viewer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'flags                      @apps/mu..ra_conf.py  flags = [', 'action__tagname': 'flags'}, {'word': 'flags', 'action__pattern': '\M^flags = [$', 'action__path': 'apps/pose_creator/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'flags                      @apps/po..ra_conf.py  flags = [', 'action__tagname': 'flags'}, {'word': 'flags', 'action__pattern': '\M^flags = [$', 'action__path': 'apps/pose_interpolator/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'flags                      @apps/po..ra_conf.py  flags = [', 'action__tagname': 'flags'}, {'word': 'flags', 'action__pattern': '\M^flags = [$', 'action__path': 'apps/pose_renderer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'flags                      @apps/po..ra_conf.py  flags = [', 'action__tagname': 'flags'}, {'word': 'flags', 'action__pattern': '\M^flags = [$', 'action__path': 'apps/pose_viewer/.ycm_extra_conf.py', 'kind': 'jump_list', 'abbr': 'flags                      @apps/po..ra_conf.py  flags = [', 'action__tagname': 'flags'}, {'word': 'flog2', 'action__pattern': '\M^static float flog2(float f)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'flog2                      @ext/lod..odepng.cpp  static float flog2(float f)', 'action__tagname': 'flog2'}, {'word': 'foo', 'action__pattern': '\M^int foo(double cat) {$', 'action__path': 'apps/abalone_forest/src/main.cc', 'kind': 'jump_list', 'abbr': 'foo                        @apps/ab..rc/main.cc  int foo(double cat) {', 'action__tagname': 'foo'}, {'word': 'force_palette', 'action__pattern': '\M^  unsigned force_palette;$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'force_palette              @ext/lod../lodepng.h    unsigned force_palette;', 'action__tagname': 'force_palette'}, {'word': 'fovy', 'action__pattern': '\M^      float fovy;$', 'action__path': 'modules/gl/include/pipeline.h', 'kind': 'jump_list', 'abbr': 'fovy                       @modules..pipeline.h        float fovy;', 'action__tagname': 'fovy'}, {'word': 'frag', 'action__pattern': '\M^static const std::string frag = "                           \\n\\$', 'action__path': 'apps/depth_shader_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'frag                       @apps/de..rc/main.cc  static const std::string frag = "                           \\n\\', 'action__tagname': 'frag'}, {'word': 'fragShader', 'action__pattern': '\M^                  fragShader,$', 'action__path': 'apps/depth_shader_viewer/include/depth_shader_viewer_options.h', 'kind': 'jump_list', 'abbr': 'fragShader                 @apps/de.._options.h                    fragShader,', 'action__tagname': 'fragShader'}, {'word': 'fragShader', 'action__pattern': '\M^      std::string configFile, meshFile, poseFile, fragShader, vertShader;$', 'action__path': 'apps/multicam_mesh_viewer/include/mc_mesh_viewer_options.h', 'kind': 'jump_list', 'abbr': 'fragShader                 @apps/mu.._options.h        std::string configFile, meshFile, poseFile, fragShader, vertShader;', 'action__tagname': 'fragShader'}, {'word': 'fragShader', 'action__pattern': '\M^      std::string configFile, meshFile, fragShader, vertShader, restPose;$', 'action__path': 'apps/pose_viewer/include/pose_viewer_options.h', 'kind': 'jump_list', 'abbr': 'fragShader                 @apps/po.._options.h        std::string configFile, meshFile, fragShader, vertShader, restPose;', 'action__tagname': 'fragShader'}, {'word': 'fragShaders', 'action__pattern': '\M^    std::map<std::string, std::string> fragShaders, vertShaders;$', 'action__path': 'apps/pose_renderer/include/pose_renderer_options.h', 'kind': 'jump_list', 'abbr': 'fragShaders                @apps/po.._options.h      std::map<std::string, std::string> fragShaders, vertShaders;', 'action__tagname': 'fragShaders'}, {'word': 'freeCam', 'action__pattern': '\M^static bool freeCam = false;$', 'action__path': 'apps/pose_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'freeCam                    @apps/po..rc/main.cc  static bool freeCam = false;', 'action__tagname': 'freeCam'}, {'word': 'freeCamera', 'action__pattern': '\M^bool freeCamera = true;$', 'action__path': 'apps/sphere_model_renderer/src/main.cc', 'kind': 'jump_list', 'abbr': 'freeCamera                 @apps/sp..rc/main.cc  bool freeCamera = true;', 'action__tagname': 'freeCamera'}, {'word': 'func', 'action__pattern': '\M^        E func;$', 'action__path': 'ext/objective_functions/xing/aig/camera_image_evaluator.hpp', 'kind': 'jump_list', 'abbr': 'func                       @ext/obj..luator.hpp          E func;', 'action__tagname': 'func'}, {'word': 'funcs', 'action__pattern': '\M^    std::vector<EnergyFunction> funcs;$', 'action__path': 'modules/ml/include/energy_function_chooser.h', 'kind': 'jump_list', 'abbr': 'funcs                      @modules.._chooser.h      std::vector<EnergyFunction> funcs;', 'action__tagname': 'funcs'}, {'word': 'gBuffer', 'action__pattern': '\M^    gl::GBuffer gBuffer;$', 'action__path': 'apps/pose_renderer/include/pose_renderer.h', 'kind': 'jump_list', 'abbr': 'gBuffer                    @apps/po..renderer.h      gl::GBuffer gBuffer;', 'action__tagname': 'gBuffer'}, {'word': 'gaussian', 'action__pattern': '\M^double gaussian(unsigned int x, unsigned int y, double sigma) {$', 'action__path': 'apps/particle_swarm_demo/src/main.cc', 'kind': 'jump_list', 'abbr': 'gaussian                   @apps/pa..rc/main.cc  double gaussian(unsigned int x, unsigned int y, double sigma) {', 'action__tagname': 'gaussian'}, {'word': 'gbuffer', 'action__pattern': '\M^    GBuffer gbuffer;$', 'action__path': 'apps/bmvc_project/src/main.cc', 'kind': 'jump_list', 'abbr': 'gbuffer                    @apps/bm..rc/main.cc      GBuffer gbuffer;', 'action__tagname': 'gbuffer'}, {'word': 'gbuffer', 'action__pattern': '\M^    GBuffer gbuffer;$', 'action__path': 'apps/edge_shader_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'gbuffer                    @apps/ed..rc/main.cc      GBuffer gbuffer;', 'action__tagname': 'gbuffer'}, {'word': 'gbuffer', 'action__pattern': '\M^    GBuffer gbuffer;$', 'action__path': 'apps/gbuffer_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'gbuffer                    @apps/gb..rc/main.cc      GBuffer gbuffer;', 'action__tagname': 'gbuffer'}, {'word': 'gen', 'action__pattern': '\M^    std::mt19937 gen;$', 'action__path': 'modules/ml/include/depth_split_function_factory.h', 'kind': 'jump_list', 'abbr': 'gen                        @modules.._factory.h      std::mt19937 gen;', 'action__tagname': 'gen'}, {'word': 'gen', 'action__pattern': '\M^    std::mt19937_64 gen;$', 'action__path': 'modules/ml/include/energy_function_chooser.h', 'kind': 'jump_list', 'abbr': 'gen                        @modules.._chooser.h      std::mt19937_64 gen;', 'action__tagname': 'gen'}, {'word': 'gen', 'action__pattern': '\M^    std::mt19937 gen;$', 'action__path': 'modules/ml/include/scalar_split_function_factory.h', 'kind': 'jump_list', 'abbr': 'gen                        @modules.._factory.h      std::mt19937 gen;', 'action__tagname': 'gen'}, {'word': 'gen', 'action__pattern': '\M^    std::mt19937 gen;$', 'action__path': 'modules/ml/include/split_function_factory.h', 'kind': 'jump_list', 'abbr': 'gen                        @modules.._factory.h      std::mt19937 gen;', 'action__tagname': 'gen'}, {'word': 'genOptions', 'action__pattern': '\M^      po::options_description cmdOptions, genOptions;$', 'action__path': 'apps/bmvc_project/include/bmvc_options.h', 'kind': 'jump_list', 'abbr': 'genOptions                 @apps/bm.._options.h        po::options_description cmdOptions, genOptions;', 'action__tagname': 'genOptions'}, {'word': 'genOptions', 'action__pattern': '\M^      po::options_description cmdOptions, genOptions;$', 'action__path': 'apps/depth_shader_viewer/include/depth_shader_viewer_options.h', 'kind': 'jump_list', 'abbr': 'genOptions                 @apps/de.._options.h        po::options_description cmdOptions, genOptions;', 'action__tagname': 'genOptions'}, {'word': 'genOptions', 'action__pattern': '\M^      po::options_description cmdOptions, genOptions;$', 'action__path': 'apps/edge_shader_viewer/include/edge_shader_viewer_options.h', 'kind': 'jump_list', 'abbr': 'genOptions                 @apps/ed.._options.h        po::options_description cmdOptions, genOptions;', 'action__tagname': 'genOptions'}, {'word': 'genOptions', 'action__pattern': '\M^      po::options_description cmdOptions, genOptions;$', 'action__path': 'apps/gbuffer_viewer/include/gbuffer_viewer_options.h', 'kind': 'jump_list', 'abbr': 'genOptions                 @apps/gb.._options.h        po::options_description cmdOptions, genOptions;', 'action__tagname': 'genOptions'}, {'word': 'genOptions', 'action__pattern': '\M^      po::options_description cmdOptions, genOptions;$', 'action__path': 'apps/multicam_mesh_viewer/include/mc_mesh_viewer_options.h', 'kind': 'jump_list', 'abbr': 'genOptions                 @apps/mu.._options.h        po::options_description cmdOptions, genOptions;', 'action__tagname': 'genOptions'}, {'word': 'genOptions', 'action__pattern': '\M^      po::options_description cmdOptions, genOptions;$', 'action__path': 'apps/pose_creator/include/pose_creator_options.h', 'kind': 'jump_list', 'abbr': 'genOptions                 @apps/po.._options.h        po::options_description cmdOptions, genOptions;', 'action__tagname': 'genOptions'}, {'word': 'genOptions', 'action__pattern': '\M^    po::options_description cmdOptions, genOptions;$', 'action__path': 'apps/pose_renderer/include/pose_renderer_options.h', 'kind': 'jump_list', 'abbr': 'genOptions                 @apps/po.._options.h      po::options_description cmdOptions, genOptions;', 'action__tagname': 'genOptions'}, {'word': 'genOptions', 'action__pattern': '\M^      po::options_description cmdOptions, genOptions;$', 'action__path': 'apps/pose_viewer/include/pose_viewer_options.h', 'kind': 'jump_list', 'abbr': 'genOptions                 @apps/po.._options.h        po::options_description cmdOptions, genOptions;', 'action__tagname': 'genOptions'}, {'word': 'generateFilename', 'action__pattern': '\M^void generateFilename(char filename[255], $', 'action__path': 'ext/objective_functions/prog/colour-detect/main.cc', 'kind': 'jump_list', 'abbr': 'generateFilename           @ext/obj..ct/main.cc  void generateFilename(char filename[255], ', 'action__tagname': 'generateFilename'}, {'word': 'generateFixedDistanceTree', 'action__pattern': '\M^static unsigned generateFixedDistanceTree(HuffmanTree* tree)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'generateFixedDistanceTree  @ext/lod..odepng.cpp  static unsigned generateFixedDistanceTree(HuffmanTree* tree)', 'action__tagname': 'generateFixedDistanceTree'}, {'word': 'generateFixedLitLenTree', 'action__pattern': '\M^static unsigned generateFixedLitLenTree(HuffmanTree* tree)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'generateFixedLitLenTree    @ext/lod..odepng.cpp  static unsigned generateFixedLitLenTree(HuffmanTree* tree)', 'action__tagname': 'generateFixedLitLenTree'}, {'word': 'generate_random_spheres', 'action__pattern': '\M^void generate_random_spheres(double spheres[], int num_spheres,$', 'action__path': 'apps/sphere_model_optim/src/main.cc', 'kind': 'jump_list', 'abbr': 'generate_random_spheres    @apps/sp..rc/main.cc  void generate_random_spheres(double spheres[], int num_spheres,', 'action__tagname': 'generate_random_spheres'}, {'word': 'generator', 'action__pattern': '\M^        std::default_random_engine generator;$', 'action__path': 'modules/optim/include/particle_swarm.h', 'kind': 'jump_list', 'abbr': 'generator                  @modules..le_swarm.h          std::default_random_engine generator;', 'action__tagname': 'generator'}, {'word': 'generator', 'action__pattern': '\M^    std::default_random_engine generator;$', 'action__path': 'modules/optim/include/particle_swarm.h', 'kind': 'jump_list', 'abbr': 'generator                  @modules..le_swarm.h      std::default_random_engine generator;', 'action__tagname': 'generator'}, {'word': 'geom', 'action__pattern': '\M^namespace geom {$', 'action__path': 'modules/geom/include/sphere.h', 'kind': 'jump_list', 'abbr': 'geom                       @modules..e/sphere.h  namespace geom {', 'action__tagname': 'geom'}, {'word': 'geomFragShader', 'action__pattern': '\M^                  geomFragShader,$', 'action__path': 'apps/edge_shader_viewer/include/edge_shader_viewer_options.h', 'kind': 'jump_list', 'abbr': 'geomFragShader             @apps/ed.._options.h                    geomFragShader,', 'action__tagname': 'geomFragShader'}, {'word': 'geomFragShader', 'action__pattern': '\M^                  geomFragShader,$', 'action__path': 'apps/gbuffer_viewer/include/gbuffer_viewer_options.h', 'kind': 'jump_list', 'abbr': 'geomFragShader             @apps/gb.._options.h                    geomFragShader,', 'action__tagname': 'geomFragShader'}, {'word': 'geomShader', 'action__pattern': '\M^    PoseShader geomShader;$', 'action__path': 'apps/edge_shader_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'geomShader                 @apps/ed..rc/main.cc      PoseShader geomShader;', 'action__tagname': 'geomShader'}, {'word': 'geomShader', 'action__pattern': '\M^    PoseShader geomShader;$', 'action__path': 'apps/gbuffer_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'geomShader                 @apps/gb..rc/main.cc      PoseShader geomShader;', 'action__tagname': 'geomShader'}, {'word': 'geomVertShader', 'action__pattern': '\M^                  geomVertShader;$', 'action__path': 'apps/edge_shader_viewer/include/edge_shader_viewer_options.h', 'kind': 'jump_list', 'abbr': 'geomVertShader             @apps/ed.._options.h                    geomVertShader;', 'action__tagname': 'geomVertShader'}, {'word': 'geomVertShader', 'action__pattern': '\M^                  geomVertShader;$', 'action__path': 'apps/gbuffer_viewer/include/gbuffer_viewer_options.h', 'kind': 'jump_list', 'abbr': 'geomVertShader             @apps/gb.._options.h                    geomVertShader;', 'action__tagname': 'geomVertShader'}, {'word': 'get', 'action__pattern': '\M^    const EnergyFunction& get() {$', 'action__path': 'modules/ml/include/energy_function_chooser.h', 'kind': 'jump_list', 'abbr': 'get                        @modules.._chooser.h      const EnergyFunction& get() {', 'action__tagname': 'get'}, {'word': 'get1DOFJointFromVector', 'action__pattern': '\M^inline glm::quat get1DOFJointFromVector(const std::vector<double>& vec,$', 'action__path': 'modules/core/include/pose_vector.h', 'kind': 'jump_list', 'abbr': 'get1DOFJointFromVector     @modules..e_vector.h  inline glm::quat get1DOFJointFromVector(const std::vector<double>& vec,', 'action__tagname': 'get1DOFJointFromVector'}, {'word': 'get2DOFJointFromVector', 'action__pattern': '\M^inline glm::quat get2DOFJointFromVector(const std::vector<double>& vec,$', 'action__path': 'modules/core/include/pose_vector.h', 'kind': 'jump_list', 'abbr': 'get2DOFJointFromVector     @modules..e_vector.h  inline glm::quat get2DOFJointFromVector(const std::vector<double>& vec,', 'action__tagname': 'get2DOFJointFromVector'}, {'word': 'get3DOFJointFromVector', 'action__pattern': '\M^inline glm::quat get3DOFJointFromVector(const std::vector<double>& vec,$', 'action__path': 'modules/core/include/pose_vector.h', 'kind': 'jump_list', 'abbr': 'get3DOFJointFromVector     @modules..e_vector.h  inline glm::quat get3DOFJointFromVector(const std::vector<double>& vec,', 'action__tagname': 'get3DOFJointFromVector'}, {'word': 'getBestParticle', 'action__pattern': '\M^ParticleSwarm::getBestParticle() const {$', 'action__path': 'modules/optim/include/particle_swarm.h', 'kind': 'jump_list', 'abbr': 'getBestParticle            @modules..le_swarm.h  ParticleSwarm::getBestParticle() const {', 'action__tagname': 'getBestParticle'}, {'word': 'getBestPosition', 'action__pattern': '\M^ParticleSwarm::Particle::getBestPosition() const {$', 'action__path': 'modules/optim/include/particle_swarm.h', 'kind': 'jump_list', 'abbr': 'getBestPosition            @modules..le_swarm.h  ParticleSwarm::Particle::getBestPosition() const {', 'action__tagname': 'getBestPosition'}, {'word': 'getBone', 'action__pattern': '\M^const Bone& Skeleton::getBone(const std::string& name) const {$', 'action__path': 'modules/core/src/skeleton.cc', 'kind': 'jump_list', 'abbr': 'getBone                    @modules..keleton.cc  const Bone& Skeleton::getBone(const std::string& name) const {', 'action__tagname': 'getBone'}, {'word': 'getBoneData', 'action__pattern': '\M^const std::vector<Mesh::VertexBoneData>& Mesh::getBoneData() const {$', 'action__path': 'modules/gl/src/mesh.cc', 'kind': 'jump_list', 'abbr': 'getBoneData                @modules..rc/mesh.cc  const std::vector<Mesh::VertexBoneData>& Mesh::getBoneData() const {', 'action__tagname': 'getBoneData'}, {'word': 'getBoneIndex', 'action__pattern': '\M^unsigned int Skeleton::getBoneIndex(const std::string& name) const {$', 'action__path': 'modules/core/src/skeleton.cc', 'kind': 'jump_list', 'abbr': 'getBoneIndex               @modules..keleton.cc  unsigned int Skeleton::getBoneIndex(const std::string& name) const {', 'action__tagname': 'getBoneIndex'}, {'word': 'getBoneName', 'action__pattern': '\M^const std::string& Skeleton::getBoneName(unsigned int id) const {$', 'action__path': 'modules/core/src/skeleton.cc', 'kind': 'jump_list', 'abbr': 'getBoneName                @modules..keleton.cc  const std::string& Skeleton::getBoneName(unsigned int id) const {', 'action__tagname': 'getBoneName'}, {'word': 'getBoneTransform', 'action__pattern': '\M^const glm::mat4& Skeleton::getBoneTransform(const std::string& name) const {$', 'action__path': 'modules/core/src/skeleton.cc', 'kind': 'jump_list', 'abbr': 'getBoneTransform           @modules..keleton.cc  const glm::mat4& Skeleton::getBoneTransform(const std::string& name) const {', 'action__tagname': 'getBoneTransform'}, {'word': 'getBoneWeights', 'action__pattern': '\M^std::vector<std::map<std::string, double>> getBoneWeights($', 'action__path': 'modules/gl/src/sphere_model_maker.cc', 'kind': 'jump_list', 'abbr': 'getBoneWeights             @modules..l_maker.cc  std::vector<std::map<std::string, double>> getBoneWeights(', 'action__tagname': 'getBoneWeights'}, {'word': 'getCamera', 'action__pattern': '\M^    unsigned int getCamera() const { return calibratedCamera; }$', 'action__path': 'apps/pose_renderer/include/pose_renderer_options.h', 'kind': 'jump_list', 'abbr': 'getCamera                  @apps/po.._options.h      unsigned int getCamera() const { return calibratedCamera; }', 'action__tagname': 'getCamera'}, {'word': 'getCamera', 'action__pattern': '\M^CalibratedCamera CameraCalibration::getCamera(unsigned int cam) {$', 'action__path': 'modules/core/src/camera_calibration.cc', 'kind': 'jump_list', 'abbr': 'getCamera                  @modules..bration.cc  CalibratedCamera CameraCalibration::getCamera(unsigned int cam) {', 'action__tagname': 'getCamera'}, {'word': 'getCameraPos', 'action__pattern': '\M^    glm::vec3 getCameraPos() const { return camPos; }$', 'action__path': 'apps/pose_renderer/include/pose_renderer_options.h', 'kind': 'jump_list', 'abbr': 'getCameraPos               @apps/po.._options.h      glm::vec3 getCameraPos() const { return camPos; }', 'action__tagname': 'getCameraPos'}, {'word': 'getCameraPos', 'action__pattern': '\M^      glm::vec3 getCameraPos() const { return camPos; }$', 'action__path': 'apps/pose_viewer/include/pose_viewer_options.h', 'kind': 'jump_list', 'abbr': 'getCameraPos               @apps/po.._options.h        glm::vec3 getCameraPos() const { return camPos; }', 'action__tagname': 'getCameraPos'}, {'word': 'getCameraTarget', 'action__pattern': '\M^    glm::vec3 getCameraTarget() const { return camTarget; }$', 'action__path': 'apps/pose_renderer/include/pose_renderer_options.h', 'kind': 'jump_list', 'abbr': 'getCameraTarget            @apps/po.._options.h      glm::vec3 getCameraTarget() const { return camTarget; }', 'action__tagname': 'getCameraTarget'}, {'word': 'getCameraTarget', 'action__pattern': '\M^      glm::vec3 getCameraTarget() const { return camTarget; }$', 'action__path': 'apps/pose_viewer/include/pose_viewer_options.h', 'kind': 'jump_list', 'abbr': 'getCameraTarget            @apps/po.._options.h        glm::vec3 getCameraTarget() const { return camTarget; }', 'action__tagname': 'getCameraTarget'}, {'word': 'getCameraUp', 'action__pattern': '\M^    glm::vec3 getCameraUp() const { return camUp; }$', 'action__path': 'apps/pose_renderer/include/pose_renderer_options.h', 'kind': 'jump_list', 'abbr': 'getCameraUp                @apps/po.._options.h      glm::vec3 getCameraUp() const { return camUp; }', 'action__tagname': 'getCameraUp'}, {'word': 'getCameraUp', 'action__pattern': '\M^      glm::vec3 getCameraUp() const { return camUp; }$', 'action__path': 'apps/pose_viewer/include/pose_viewer_options.h', 'kind': 'jump_list', 'abbr': 'getCameraUp                @apps/po.._options.h        glm::vec3 getCameraUp() const { return camUp; }', 'action__tagname': 'getCameraUp'}, {'word': 'getChildren', 'action__pattern': '\M^inline const std::vector<std::shared_ptr<Joint>>& Joint::getChildren() const {$', 'action__path': 'modules/core/include/old_joint.h', 'kind': 'jump_list', 'abbr': 'getChildren                @modules..ld_joint.h  inline const std::vector<std::shared_ptr<Joint>>& Joint::getChildren() const {', 'action__tagname': 'getChildren'}, {'word': 'getChildren', 'action__pattern': '\M^const std::vector<std::shared_ptr<Bone>>& Bone::getChildren() const {$', 'action__path': 'modules/core/src/bone.cc', 'kind': 'jump_list', 'abbr': 'getChildren                @modules..rc/bone.cc  const std::vector<std::shared_ptr<Bone>>& Bone::getChildren() const {', 'action__tagname': 'getChildren'}, {'word': 'getClassFromIndex', 'action__pattern': '\M^    int getClassFromIndex(int i) const { return i - 1; }$', 'action__path': 'modules/ml/include/classifier_leaf.h', 'kind': 'jump_list', 'abbr': 'getClassFromIndex          @modules..ier_leaf.h      int getClassFromIndex(int i) const { return i - 1; }', 'action__tagname': 'getClassFromIndex'}, {'word': 'getClosestSpheres', 'action__pattern': '\M^std::vector<unsigned int> getClosestSpheres($', 'action__path': 'modules/gl/src/sphere_model_maker.cc', 'kind': 'jump_list', 'abbr': 'getClosestSpheres          @modules..l_maker.cc  std::vector<unsigned int> getClosestSpheres(', 'action__tagname': 'getClosestSpheres'}, {'word': 'getColourRendering', 'action__pattern': '\M^cv::Mat PoseRenderer::getColourRendering(const std::vector<glm::mat4>& bones,$', 'action__path': 'apps/pose_renderer/src/pose_renderer.cc', 'kind': 'jump_list', 'abbr': 'getColourRendering         @apps/po..enderer.cc  cv::Mat PoseRenderer::getColourRendering(const std::vector<glm::mat4>& bones,', 'action__tagname': 'getColourRendering'}, {'word': 'getCols', 'action__pattern': '\M^    inline int getCols() const {$', 'action__path': 'modules/core/include/histogram2d.h', 'kind': 'jump_list', 'abbr': 'getCols                    @modules..togram2d.h      inline int getCols() const {', 'action__tagname': 'getCols'}, {'word': 'getCols', 'action__pattern': '\M^    unsigned int getCols() {$', 'action__path': 'modules/gl/include/tiler.h', 'kind': 'jump_list', 'abbr': 'getCols                    @modules..de/tiler.h      unsigned int getCols() {', 'action__tagname': 'getCols'}, {'word': 'getCommandLineArgs', 'action__pattern': '\M^po::options_description PoseInterpolatorOptions::getCommandLineArgs() {$', 'action__path': 'apps/pose_interpolator/src/pose_interpolator_options.cc', 'kind': 'jump_list', 'abbr': 'getCommandLineArgs         @apps/po..options.cc  po::options_description PoseInterpolatorOptions::getCommandLineArgs() {', 'action__tagname': 'getCommandLineArgs'}, {'word': 'getCommandLineOnlyArgs', 'action__pattern': '\M^  po::options_description BMVCOptions::getCommandLineOnlyArgs()$', 'action__path': 'apps/bmvc_project/src/bmvc_options.cc', 'kind': 'jump_list', 'abbr': 'getCommandLineOnlyArgs     @apps/bm..options.cc    po::options_description BMVCOptions::getCommandLineOnlyArgs()', 'action__tagname': 'getCommandLineOnlyArgs'}, {'word': 'getCommandLineOnlyArgs', 'action__pattern': '\M^  po::options_description DepthShaderViewerOptions::getCommandLineOnlyArgs()$', 'action__path': 'apps/depth_shader_viewer/src/depth_shader_viewer_options.cc', 'kind': 'jump_list', 'abbr': 'getCommandLineOnlyArgs     @apps/de..options.cc    po::options_description DepthShaderViewerOptions::getCommandLineOnlyArgs()', 'action__tagname': 'getCommandLineOnlyArgs'}, {'word': 'getCommandLineOnlyArgs', 'action__pattern': '\M^  po::options_description EdgeShaderViewerOptions::getCommandLineOnlyArgs()$', 'action__path': 'apps/edge_shader_viewer/src/edge_shader_viewer_options.cc', 'kind': 'jump_list', 'abbr': 'getCommandLineOnlyArgs     @apps/ed..options.cc    po::options_description EdgeShaderViewerOptions::getCommandLineOnlyArgs()', 'action__tagname': 'getCommandLineOnlyArgs'}, {'word': 'getCommandLineOnlyArgs', 'action__pattern': '\M^  po::options_description GBufferViewerOptions::getCommandLineOnlyArgs()$', 'action__path': 'apps/gbuffer_viewer/src/gbuffer_viewer_options.cc', 'kind': 'jump_list', 'abbr': 'getCommandLineOnlyArgs     @apps/gb..options.cc    po::options_description GBufferViewerOptions::getCommandLineOnlyArgs()', 'action__tagname': 'getCommandLineOnlyArgs'}, {'word': 'getCommandLineOnlyArgs', 'action__pattern': '\M^  po::options_description MCMeshViewerOptions::getCommandLineOnlyArgs()$', 'action__path': 'apps/multicam_mesh_viewer/src/mc_mesh_viewer_options.cc', 'kind': 'jump_list', 'abbr': 'getCommandLineOnlyArgs     @apps/mu..options.cc    po::options_description MCMeshViewerOptions::getCommandLineOnlyArgs()', 'action__tagname': 'getCommandLineOnlyArgs'}, {'word': 'getCommandLineOnlyArgs', 'action__pattern': '\M^  po::options_description PoseCreatorOptions::getCommandLineOnlyArgs()$', 'action__path': 'apps/pose_creator/src/pose_creator_options.cc', 'kind': 'jump_list', 'abbr': 'getCommandLineOnlyArgs     @apps/po..options.cc    po::options_description PoseCreatorOptions::getCommandLineOnlyArgs()', 'action__tagname': 'getCommandLineOnlyArgs'}, {'word': 'getCommandLineOnlyArgs', 'action__pattern': '\M^po::options_description PoseRendererOptions::getCommandLineOnlyArgs()$', 'action__path': 'apps/pose_renderer/src/pose_renderer_options.cc', 'kind': 'jump_list', 'abbr': 'getCommandLineOnlyArgs     @apps/po..options.cc  po::options_description PoseRendererOptions::getCommandLineOnlyArgs()', 'action__tagname': 'getCommandLineOnlyArgs'}, {'word': 'getCommandLineOnlyArgs', 'action__pattern': '\M^  po::options_description PoseViewerOptions::getCommandLineOnlyArgs()$', 'action__path': 'apps/pose_viewer/src/pose_viewer_options.cc', 'kind': 'jump_list', 'abbr': 'getCommandLineOnlyArgs     @apps/po..options.cc    po::options_description PoseViewerOptions::getCommandLineOnlyArgs()', 'action__tagname': 'getCommandLineOnlyArgs'}, {'word': 'getConfigFile', 'action__pattern': '\M^      const std::string& getConfigFile() const { return configFile; }$', 'action__path': 'apps/bmvc_project/include/bmvc_options.h', 'kind': 'jump_list', 'abbr': 'getConfigFile              @apps/bm.._options.h        const std::string& getConfigFile() const { return configFile; }', 'action__tagname': 'getConfigFile'}, {'word': 'getConfigFile', 'action__pattern': '\M^      const std::string& getConfigFile() const { return configFile; }$', 'action__path': 'apps/depth_shader_viewer/include/depth_shader_viewer_options.h', 'kind': 'jump_list', 'abbr': 'getConfigFile              @apps/de.._options.h        const std::string& getConfigFile() const { return configFile; }', 'action__tagname': 'getConfigFile'}, {'word': 'getConfigFile', 'action__pattern': '\M^      const std::string& getConfigFile() const { return configFile; }$', 'action__path': 'apps/edge_shader_viewer/include/edge_shader_viewer_options.h', 'kind': 'jump_list', 'abbr': 'getConfigFile              @apps/ed.._options.h        const std::string& getConfigFile() const { return configFile; }', 'action__tagname': 'getConfigFile'}, {'word': 'getConfigFile', 'action__pattern': '\M^      const std::string& getConfigFile() const { return configFile; }$', 'action__path': 'apps/gbuffer_viewer/include/gbuffer_viewer_options.h', 'kind': 'jump_list', 'abbr': 'getConfigFile              @apps/gb.._options.h        const std::string& getConfigFile() const { return configFile; }', 'action__tagname': 'getConfigFile'}, {'word': 'getConfigFile', 'action__pattern': '\M^      const std::string& getConfigFile() const { return configFile; }$', 'action__path': 'apps/multicam_mesh_viewer/include/mc_mesh_viewer_options.h', 'kind': 'jump_list', 'abbr': 'getConfigFile              @apps/mu.._options.h        const std::string& getConfigFile() const { return configFile; }', 'action__tagname': 'getConfigFile'}, {'word': 'getConfigFile', 'action__pattern': '\M^      const std::string& getConfigFile() const { return configFile; }$', 'action__path': 'apps/pose_creator/include/pose_creator_options.h', 'kind': 'jump_list', 'abbr': 'getConfigFile              @apps/po.._options.h        const std::string& getConfigFile() const { return configFile; }', 'action__tagname': 'getConfigFile'}, {'word': 'getConfigFile', 'action__pattern': '\M^    const std::string& getConfigFile() const { return configFile; }$', 'action__path': 'apps/pose_renderer/include/pose_renderer_options.h', 'kind': 'jump_list', 'abbr': 'getConfigFile              @apps/po.._options.h      const std::string& getConfigFile() const { return configFile; }', 'action__tagname': 'getConfigFile'}, {'word': 'getConfigFile', 'action__pattern': '\M^      const std::string& getConfigFile() const { return configFile; }$', 'action__path': 'apps/pose_viewer/include/pose_viewer_options.h', 'kind': 'jump_list', 'abbr': 'getConfigFile              @apps/po.._options.h        const std::string& getConfigFile() const { return configFile; }', 'action__tagname': 'getConfigFile'}, {'word': 'getContents', 'action__pattern': '\M^cv::Mat OffscreenBuffer::getContents() {$', 'action__path': 'modules/gl/src/offscreen_buffer.cc', 'kind': 'jump_list', 'abbr': 'getContents                @modules.._buffer.cc  cv::Mat OffscreenBuffer::getContents() {', 'action__tagname': 'getContents'}, {'word': 'getData', 'action__pattern': '\M^    inline const cv::Mat& getData() const {$', 'action__path': 'modules/core/include/histogram2d.h', 'kind': 'jump_list', 'abbr': 'getData                    @modules..togram2d.h      inline const cv::Mat& getData() const {', 'action__tagname': 'getData'}, {'word': 'getData', 'action__pattern': '\M^    const DataType& getData() const { return data; }$', 'action__path': 'modules/ml/include/training_data.h', 'kind': 'jump_list', 'abbr': 'getData                    @modules..ing_data.h      const DataType& getData() const { return data; }', 'action__tagname': 'getData'}, {'word': 'getData', 'action__pattern': '\M^const std::vector<std::string>& LatentTreeNode::getData() const {$', 'action__path': 'modules/ml/src/latent_tree_node.cc', 'kind': 'jump_list', 'abbr': 'getData                    @modules..ee_node.cc  const std::vector<std::string>& LatentTreeNode::getData() const {', 'action__tagname': 'getData'}, {'word': 'getDepthFragShader', 'action__pattern': '\M^      const std::string& getDepthFragShader() const { return depthFrag; }$', 'action__path': 'apps/bmvc_project/include/bmvc_options.h', 'kind': 'jump_list', 'abbr': 'getDepthFragShader         @apps/bm.._options.h        const std::string& getDepthFragShader() const { return depthFrag; }', 'action__tagname': 'getDepthFragShader'}, {'word': 'getDepthImage', 'action__pattern': '\M^const cv::Mat& CameraImage::getDepthImage() const$', 'action__path': 'ext/objective_functions/xing/aig/camera_image.hpp', 'kind': 'jump_list', 'abbr': 'getDepthImage              @ext/obj.._image.hpp  const cv::Mat& CameraImage::getDepthImage() const', 'action__tagname': 'getDepthImage'}, {'word': 'getDepthRendering', 'action__pattern': '\M^    cv::Mat getDepthRendering(const std::vector<glm::mat4>& bones,$', 'action__path': 'apps/bmvc_project/src/main.cc', 'kind': 'jump_list', 'abbr': 'getDepthRendering          @apps/bm..rc/main.cc      cv::Mat getDepthRendering(const std::vector<glm::mat4>& bones,', 'action__tagname': 'getDepthRendering'}, {'word': 'getDepthRendering', 'action__pattern': '\M^cv::Mat PoseRenderer::getDepthRendering(const std::vector<glm::mat4>& bones,$', 'action__path': 'apps/pose_renderer/src/pose_renderer.cc', 'kind': 'jump_list', 'abbr': 'getDepthRendering          @apps/po..enderer.cc  cv::Mat PoseRenderer::getDepthRendering(const std::vector<glm::mat4>& bones,', 'action__tagname': 'getDepthRendering'}, {'word': 'getDepthVertShader', 'action__pattern': '\M^      const std::string& getDepthVertShader() const { return depthVert; }$', 'action__path': 'apps/bmvc_project/include/bmvc_options.h', 'kind': 'jump_list', 'abbr': 'getDepthVertShader         @apps/bm.._options.h        const std::string& getDepthVertShader() const { return depthVert; }', 'action__tagname': 'getDepthVertShader'}, {'word': 'getDimensions', 'action__pattern': '\M^ParticleSwarm::Particle::getDimensions() const {$', 'action__path': 'modules/optim/include/particle_swarm.h', 'kind': 'jump_list', 'abbr': 'getDimensions              @modules..le_swarm.h  ParticleSwarm::Particle::getDimensions() const {', 'action__tagname': 'getDimensions'}, {'word': 'getEdgeDistanceMap', 'action__pattern': '\M^const EdgeDistanceMap& CameraImage::getEdgeDistanceMap() const$', 'action__path': 'ext/objective_functions/xing/aig/camera_image.cc', 'kind': 'jump_list', 'abbr': 'getEdgeDistanceMap         @ext/obj..a_image.cc  const EdgeDistanceMap& CameraImage::getEdgeDistanceMap() const', 'action__tagname': 'getEdgeDistanceMap'}, {'word': 'getEdgeFragShader', 'action__pattern': '\M^      const std::string& getEdgeFragShader() const { return edgeFrag; }$', 'action__path': 'apps/bmvc_project/include/bmvc_options.h', 'kind': 'jump_list', 'abbr': 'getEdgeFragShader          @apps/bm.._options.h        const std::string& getEdgeFragShader() const { return edgeFrag; }', 'action__tagname': 'getEdgeFragShader'}, {'word': 'getEdgeFragShader', 'action__pattern': '\M^      const std::string& getEdgeFragShader() const { return edgeFragShader; }$', 'action__path': 'apps/edge_shader_viewer/include/edge_shader_viewer_options.h', 'kind': 'jump_list', 'abbr': 'getEdgeFragShader          @apps/ed.._options.h        const std::string& getEdgeFragShader() const { return edgeFragShader; }', 'action__tagname': 'getEdgeFragShader'}, {'word': 'getEdgeGeomFragShader', 'action__pattern': '\M^      const std::string& getEdgeGeomFragShader() const { return edgeGeomFrag; }$', 'action__path': 'apps/bmvc_project/include/bmvc_options.h', 'kind': 'jump_list', 'abbr': 'getEdgeGeomFragShader      @apps/bm.._options.h        const std::string& getEdgeGeomFragShader() const { return edgeGeomFrag; }', 'action__tagname': 'getEdgeGeomFragShader'}, {'word': 'getEdgeGeomVertShader', 'action__pattern': '\M^      const std::string& getEdgeGeomVertShader() const { return edgeGeomVert; }$', 'action__path': 'apps/bmvc_project/include/bmvc_options.h', 'kind': 'jump_list', 'abbr': 'getEdgeGeomVertShader      @apps/bm.._options.h        const std::string& getEdgeGeomVertShader() const { return edgeGeomVert; }', 'action__tagname': 'getEdgeGeomVertShader'}, {'word': 'getEdgeImage', 'action__pattern': '\M^const cv::Mat& EdgeDistanceMap::getEdgeImage() const$', 'action__path': 'ext/objective_functions/xing/aig/edge_distance_map.cc', 'kind': 'jump_list', 'abbr': 'getEdgeImage               @ext/obj..nce_map.cc  const cv::Mat& EdgeDistanceMap::getEdgeImage() const', 'action__tagname': 'getEdgeImage'}, {'word': 'getEdgePointList', 'action__pattern': '\M^const EdgeDistanceMap::EdgePointList& EdgeDistanceMap::getEdgePointList() const$', 'action__path': 'ext/objective_functions/xing/aig/edge_distance_map.cc', 'kind': 'jump_list', 'abbr': 'getEdgePointList           @ext/obj..nce_map.cc  const EdgeDistanceMap::EdgePointList& EdgeDistanceMap::getEdgePointList() const', 'action__tagname': 'getEdgePointList'}, {'word': 'getEdgeRendering', 'action__pattern': '\M^    cv::Mat getEdgeRendering(const std::vector<glm::mat4>& bones,$', 'action__path': 'apps/bmvc_project/src/main.cc', 'kind': 'jump_list', 'abbr': 'getEdgeRendering           @apps/bm..rc/main.cc      cv::Mat getEdgeRendering(const std::vector<glm::mat4>& bones,', 'action__tagname': 'getEdgeRendering'}, {'word': 'getEdgeRendering', 'action__pattern': '\M^cv::Mat PoseRenderer::getEdgeRendering(const std::vector<glm::mat4>& bones,$', 'action__path': 'apps/pose_renderer/src/pose_renderer.cc', 'kind': 'jump_list', 'abbr': 'getEdgeRendering           @apps/po..enderer.cc  cv::Mat PoseRenderer::getEdgeRendering(const std::vector<glm::mat4>& bones,', 'action__tagname': 'getEdgeRendering'}, {'word': 'getEdgeVertShader', 'action__pattern': '\M^      const std::string& getEdgeVertShader() const { return edgeVert; }$', 'action__path': 'apps/bmvc_project/include/bmvc_options.h', 'kind': 'jump_list', 'abbr': 'getEdgeVertShader          @apps/bm.._options.h        const std::string& getEdgeVertShader() const { return edgeVert; }', 'action__tagname': 'getEdgeVertShader'}, {'word': 'getEdgeVertShader', 'action__pattern': '\M^      const std::string& getEdgeVertShader() const { return edgeVertShader; }$', 'action__path': 'apps/edge_shader_viewer/include/edge_shader_viewer_options.h', 'kind': 'jump_list', 'abbr': 'getEdgeVertShader          @apps/ed.._options.h        const std::string& getEdgeVertShader() const { return edgeVertShader; }', 'action__tagname': 'getEdgeVertShader'}, {'word': 'getEndPosition', 'action__pattern': '\M^inline const glm::vec3& Joint::getEndPosition() const {$', 'action__path': 'modules/core/include/old_joint.h', 'kind': 'jump_list', 'abbr': 'getEndPosition             @modules..ld_joint.h  inline const glm::vec3& Joint::getEndPosition() const {', 'action__tagname': 'getEndPosition'}, {'word': 'getErrorString', 'action__pattern': '\M^    static std::string getErrorString() {$', 'action__path': 'modules/gl/include/gl_utility.h', 'kind': 'jump_list', 'abbr': 'getErrorString             @modules.._utility.h      static std::string getErrorString() {', 'action__tagname': 'getErrorString'}, {'word': 'getFilename', 'action__pattern': '\M^    std::string getFilename(unsigned int frame,$', 'action__path': 'apps/bmvc_project/src/main.cc', 'kind': 'jump_list', 'abbr': 'getFilename                @apps/bm..rc/main.cc      std::string getFilename(unsigned int frame,', 'action__tagname': 'getFilename'}, {'word': 'getFragShader', 'action__pattern': '\M^      const std::string& getFragShader() const { return fragShader; }$', 'action__path': 'apps/depth_shader_viewer/include/depth_shader_viewer_options.h', 'kind': 'jump_list', 'abbr': 'getFragShader              @apps/de.._options.h        const std::string& getFragShader() const { return fragShader; }', 'action__tagname': 'getFragShader'}, {'word': 'getFragShader', 'action__pattern': '\M^      const std::string& getFragShader() const { return fragShader; }$', 'action__path': 'apps/multicam_mesh_viewer/include/mc_mesh_viewer_options.h', 'kind': 'jump_list', 'abbr': 'getFragShader              @apps/mu.._options.h        const std::string& getFragShader() const { return fragShader; }', 'action__tagname': 'getFragShader'}, {'word': 'getFragShader', 'action__pattern': '\M^      const std::string& getFragShader() const { return fragShader; }$', 'action__path': 'apps/pose_viewer/include/pose_viewer_options.h', 'kind': 'jump_list', 'abbr': 'getFragShader              @apps/po.._options.h        const std::string& getFragShader() const { return fragShader; }', 'action__tagname': 'getFragShader'}, {'word': 'getFragmentShaders', 'action__pattern': '\M^    const std::map<std::string, std::string>& getFragmentShaders() const {$', 'action__path': 'apps/pose_renderer/include/pose_renderer_options.h', 'kind': 'jump_list', 'abbr': 'getFragmentShaders         @apps/po.._options.h      const std::map<std::string, std::string>& getFragmentShaders() const {', 'action__tagname': 'getFragmentShaders'}, {'word': 'getGeneralArgs', 'action__pattern': '\M^  po::options_description BMVCOptions::getGeneralArgs()$', 'action__path': 'apps/bmvc_project/src/bmvc_options.cc', 'kind': 'jump_list', 'abbr': 'getGeneralArgs             @apps/bm..options.cc    po::options_description BMVCOptions::getGeneralArgs()', 'action__tagname': 'getGeneralArgs'}, {'word': 'getGeneralArgs', 'action__pattern': '\M^  po::options_description DepthShaderViewerOptions::getGeneralArgs()$', 'action__path': 'apps/depth_shader_viewer/src/depth_shader_viewer_options.cc', 'kind': 'jump_list', 'abbr': 'getGeneralArgs             @apps/de..options.cc    po::options_description DepthShaderViewerOptions::getGeneralArgs()', 'action__tagname': 'getGeneralArgs'}, {'word': 'getGeneralArgs', 'action__pattern': '\M^  po::options_description EdgeShaderViewerOptions::getGeneralArgs()$', 'action__path': 'apps/edge_shader_viewer/src/edge_shader_viewer_options.cc', 'kind': 'jump_list', 'abbr': 'getGeneralArgs             @apps/ed..options.cc    po::options_description EdgeShaderViewerOptions::getGeneralArgs()', 'action__tagname': 'getGeneralArgs'}, {'word': 'getGeneralArgs', 'action__pattern': '\M^  po::options_description GBufferViewerOptions::getGeneralArgs()$', 'action__path': 'apps/gbuffer_viewer/src/gbuffer_viewer_options.cc', 'kind': 'jump_list', 'abbr': 'getGeneralArgs             @apps/gb..options.cc    po::options_description GBufferViewerOptions::getGeneralArgs()', 'action__tagname': 'getGeneralArgs'}, {'word': 'getGeneralArgs', 'action__pattern': '\M^  po::options_description MCMeshViewerOptions::getGeneralArgs()$', 'action__path': 'apps/multicam_mesh_viewer/src/mc_mesh_viewer_options.cc', 'kind': 'jump_list', 'abbr': 'getGeneralArgs             @apps/mu..options.cc    po::options_description MCMeshViewerOptions::getGeneralArgs()', 'action__tagname': 'getGeneralArgs'}, {'word': 'getGeneralArgs', 'action__pattern': '\M^  po::options_description PoseCreatorOptions::getGeneralArgs()$', 'action__path': 'apps/pose_creator/src/pose_creator_options.cc', 'kind': 'jump_list', 'abbr': 'getGeneralArgs             @apps/po..options.cc    po::options_description PoseCreatorOptions::getGeneralArgs()', 'action__tagname': 'getGeneralArgs'}, {'word': 'getGeneralArgs', 'action__pattern': '\M^po::options_description PoseRendererOptions::getGeneralArgs()$', 'action__path': 'apps/pose_renderer/src/pose_renderer_options.cc', 'kind': 'jump_list', 'abbr': 'getGeneralArgs             @apps/po..options.cc  po::options_description PoseRendererOptions::getGeneralArgs()', 'action__tagname': 'getGeneralArgs'}, {'word': 'getGeneralArgs', 'action__pattern': '\M^  po::options_description PoseViewerOptions::getGeneralArgs()$', 'action__path': 'apps/pose_viewer/src/pose_viewer_options.cc', 'kind': 'jump_list', 'abbr': 'getGeneralArgs             @apps/po..options.cc    po::options_description PoseViewerOptions::getGeneralArgs()', 'action__tagname': 'getGeneralArgs'}, {'word': 'getGenerations', 'action__pattern': '\M^      unsigned int getGenerations() const { return numGenerations; }$', 'action__path': 'apps/bmvc_project/include/bmvc_options.h', 'kind': 'jump_list', 'abbr': 'getGenerations             @apps/bm.._options.h        unsigned int getGenerations() const { return numGenerations; }', 'action__tagname': 'getGenerations'}, {'word': 'getGeomFragShader', 'action__pattern': '\M^      const std::string& getGeomFragShader() const { return geomFragShader; }$', 'action__path': 'apps/edge_shader_viewer/include/edge_shader_viewer_options.h', 'kind': 'jump_list', 'abbr': 'getGeomFragShader          @apps/ed.._options.h        const std::string& getGeomFragShader() const { return geomFragShader; }', 'action__tagname': 'getGeomFragShader'}, {'word': 'getGeomFragShader', 'action__pattern': '\M^      const std::string& getGeomFragShader() const { return geomFragShader; }$', 'action__path': 'apps/gbuffer_viewer/include/gbuffer_viewer_options.h', 'kind': 'jump_list', 'abbr': 'getGeomFragShader          @apps/gb.._options.h        const std::string& getGeomFragShader() const { return geomFragShader; }', 'action__tagname': 'getGeomFragShader'}, {'word': 'getGeomVertShader', 'action__pattern': '\M^      const std::string& getGeomVertShader() const { return geomVertShader; }$', 'action__path': 'apps/edge_shader_viewer/include/edge_shader_viewer_options.h', 'kind': 'jump_list', 'abbr': 'getGeomVertShader          @apps/ed.._options.h        const std::string& getGeomVertShader() const { return geomVertShader; }', 'action__tagname': 'getGeomVertShader'}, {'word': 'getGeomVertShader', 'action__pattern': '\M^      const std::string& getGeomVertShader() const { return geomVertShader; }$', 'action__path': 'apps/gbuffer_viewer/include/gbuffer_viewer_options.h', 'kind': 'jump_list', 'abbr': 'getGeomVertShader          @apps/gb.._options.h        const std::string& getGeomVertShader() const { return geomVertShader; }', 'action__tagname': 'getGeomVertShader'}, {'word': 'getGlobalPosition', 'action__pattern': '\M^const glm::vec3& Pose::getGlobalPosition() const {$', 'action__path': 'modules/core/src/old_pose.cc', 'kind': 'jump_list', 'abbr': 'getGlobalPosition          @modules..ld_pose.cc  const glm::vec3& Pose::getGlobalPosition() const {', 'action__tagname': 'getGlobalPosition'}, {'word': 'getGlobalRotation', 'action__pattern': '\M^const glm::quat& Pose::getGlobalRotation() const {$', 'action__path': 'modules/core/src/old_pose.cc', 'kind': 'jump_list', 'abbr': 'getGlobalRotation          @modules..ld_pose.cc  const glm::quat& Pose::getGlobalRotation() const {', 'action__tagname': 'getGlobalRotation'}, {'word': 'getHash', 'action__pattern': '\M^static unsigned getHash(const unsigned char* data, size_t size, size_t pos)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'getHash                    @ext/lod..odepng.cpp  static unsigned getHash(const unsigned char* data, size_t size, size_t pos)', 'action__tagname': 'getHash'}, {'word': 'getImageDir', 'action__pattern': '\M^      const std::string& getImageDir() const { return imageDir; }$', 'action__path': 'apps/pose_creator/include/pose_creator_options.h', 'kind': 'jump_list', 'abbr': 'getImageDir                @apps/po.._options.h        const std::string& getImageDir() const { return imageDir; }', 'action__tagname': 'getImageDir'}, {'word': 'getImages', 'action__pattern': '\M^      const std::vector<std::vector<std::string>>& getImages() const {$', 'action__path': 'apps/pose_viewer/include/pose_viewer_options.h', 'kind': 'jump_list', 'abbr': 'getImages                  @apps/po.._options.h        const std::vector<std::vector<std::string>>& getImages() const {', 'action__tagname': 'getImages'}, {'word': 'getIndexFromClass', 'action__pattern': '\M^    int getIndexFromClass(int i) const { return i + 1; }$', 'action__path': 'modules/ml/include/classifier_leaf.h', 'kind': 'jump_list', 'abbr': 'getIndexFromClass          @modules..ier_leaf.h      int getIndexFromClass(int i) const { return i + 1; }', 'action__tagname': 'getIndexFromClass'}, {'word': 'getIndices', 'action__pattern': '\M^    const std::vector<unsigned int>& getIndices() const {$', 'action__path': 'modules/gl/include/gl_sphere.h', 'kind': 'jump_list', 'abbr': 'getIndices                 @modules..l_sphere.h      const std::vector<unsigned int>& getIndices() const {', 'action__tagname': 'getIndices'}, {'word': 'getInputDir', 'action__pattern': '\M^      const std::string& getInputDir() const { return inputDir; }$', 'action__path': 'apps/bmvc_project/include/bmvc_options.h', 'kind': 'jump_list', 'abbr': 'getInputDir                @apps/bm.._options.h        const std::string& getInputDir() const { return inputDir; }', 'action__tagname': 'getInputDir'}, {'word': 'getInputDir', 'action__pattern': '\M^inline const std::string& PoseInterpolatorOptions::getInputDir() const {$', 'action__path': 'apps/pose_interpolator/include/pose_interpolator_options.h', 'kind': 'jump_list', 'abbr': 'getInputDir                @apps/po.._options.h  inline const std::string& PoseInterpolatorOptions::getInputDir() const {', 'action__tagname': 'getInputDir'}, {'word': 'getInputPose', 'action__pattern': '\M^      const std::string& getInputPose() const { return inputPose; }$', 'action__path': 'apps/pose_creator/include/pose_creator_options.h', 'kind': 'jump_list', 'abbr': 'getInputPose               @apps/po.._options.h        const std::string& getInputPose() const { return inputPose; }', 'action__tagname': 'getInputPose'}, {'word': 'getInputPoseFiles', 'action__pattern': '\M^PoseInterpolatorOptions::getInputPoseFiles() const {$', 'action__path': 'apps/pose_interpolator/include/pose_interpolator_options.h', 'kind': 'jump_list', 'abbr': 'getInputPoseFiles          @apps/po.._options.h  PoseInterpolatorOptions::getInputPoseFiles() const {', 'action__tagname': 'getInputPoseFiles'}, {'word': 'getInterpolationType', 'action__pattern': '\M^PoseInterpolatorOptions::getInterpolationType() const {$', 'action__path': 'apps/pose_interpolator/include/pose_interpolator_options.h', 'kind': 'jump_list', 'abbr': 'getInterpolationType       @apps/po.._options.h  PoseInterpolatorOptions::getInterpolationType() const {', 'action__tagname': 'getInterpolationType'}, {'word': 'getJoint', 'action__pattern': '\M^const T& Pose<T>::getJoint(const std::string& name) const {$', 'action__path': 'modules/core/include/pose.h', 'kind': 'jump_list', 'abbr': 'getJoint                   @modules..ude/pose.h  const T& Pose<T>::getJoint(const std::string& name) const {', 'action__tagname': 'getJoint'}, {'word': 'getJoint', 'action__pattern': '\M^const Joint& Pose::getJoint(const std::string& joint) const {$', 'action__path': 'modules/core/src/old_pose.cc', 'kind': 'jump_list', 'abbr': 'getJoint                   @modules..ld_pose.cc  const Joint& Pose::getJoint(const std::string& joint) const {', 'action__tagname': 'getJoint'}, {'word': 'getJointEndPosition', 'action__pattern': '\M^Pose::getJointEndPosition(const std::string& joint) const {$', 'action__path': 'modules/core/src/old_pose.cc', 'kind': 'jump_list', 'abbr': 'getJointEndPosition        @modules..ld_pose.cc  Pose::getJointEndPosition(const std::string& joint) const {', 'action__tagname': 'getJointEndPosition'}, {'word': 'getJointList', 'action__pattern': '\M^const std::vector<std::string>& Pose::getJointList() const {$', 'action__path': 'modules/core/src/old_pose.cc', 'kind': 'jump_list', 'abbr': 'getJointList               @modules..ld_pose.cc  const std::vector<std::string>& Pose::getJointList() const {', 'action__tagname': 'getJointList'}, {'word': 'getJointNames', 'action__pattern': '\M^const std::vector<std::string>& Pose<T>::getJointNames() const {$', 'action__path': 'modules/core/include/pose.h', 'kind': 'jump_list', 'abbr': 'getJointNames              @modules..ude/pose.h  const std::vector<std::string>& Pose<T>::getJointNames() const {', 'action__tagname': 'getJointNames'}, {'word': 'getJointRotMat', 'action__pattern': '\M^const glm::mat4 Pose::getJointRotMat(const std::string& joint) const {$', 'action__path': 'modules/core/src/old_pose.cc', 'kind': 'jump_list', 'abbr': 'getJointRotMat             @modules..ld_pose.cc  const glm::mat4 Pose::getJointRotMat(const std::string& joint) const {', 'action__tagname': 'getJointRotMat'}, {'word': 'getJointRotation', 'action__pattern': '\M^const glm::quat& Pose::getJointRotation(const std::string& joint) const{$', 'action__path': 'modules/core/src/old_pose.cc', 'kind': 'jump_list', 'abbr': 'getJointRotation           @modules..ld_pose.cc  const glm::quat& Pose::getJointRotation(const std::string& joint) const{', 'action__tagname': 'getJointRotation'}, {'word': 'getLabels', 'action__pattern': '\M^    const std::tuple<LabelTypes...>& getLabels() const { return labels; }$', 'action__path': 'modules/ml/include/training_data.h', 'kind': 'jump_list', 'abbr': 'getLabels                  @modules..ing_data.h      const std::tuple<LabelTypes...>& getLabels() const { return labels; }', 'action__tagname': 'getLabels'}, {'word': 'getLatentNodePos', 'action__pattern': '\M^glm::vec3 getLatentNodePos(const LatentTreeNode& ltmNode,$', 'action__path': 'modules/ml/src/latent_tree_node.cc', 'kind': 'jump_list', 'abbr': 'getLatentNodePos           @modules..ee_node.cc  glm::vec3 getLatentNodePos(const LatentTreeNode& ltmNode,', 'action__tagname': 'getLatentNodePos'}, {'word': 'getLeaf', 'action__pattern': '\M^std::shared_ptr<Leaf> LeafFactory<Leaf, TrainingData>::getLeaf($', 'action__path': 'modules/ml/include/leaf_factory.h', 'kind': 'jump_list', 'abbr': 'getLeaf                    @modules.._factory.h  std::shared_ptr<Leaf> LeafFactory<Leaf, TrainingData>::getLeaf(', 'action__tagname': 'getLeaf'}, {'word': 'getLeft', 'action__pattern': '\M^const LatentTreeNode& LatentTreeNode::getLeft() const {$', 'action__path': 'modules/ml/src/latent_tree_node.cc', 'kind': 'jump_list', 'abbr': 'getLeft                    @modules..ee_node.cc  const LatentTreeNode& LatentTreeNode::getLeft() const {', 'action__tagname': 'getLeft'}, {'word': 'getLength', 'action__pattern': '\M^inline double Joint::getLength() const {$', 'action__path': 'modules/core/include/old_joint.h', 'kind': 'jump_list', 'abbr': 'getLength                  @modules..ld_joint.h  inline double Joint::getLength() const {', 'action__tagname': 'getLength'}, {'word': 'getLogfile', 'action__pattern': '\M^      const std::string& getLogfile() const { return logfile; }$', 'action__path': 'apps/bmvc_project/include/bmvc_options.h', 'kind': 'jump_list', 'abbr': 'getLogfile                 @apps/bm.._options.h        const std::string& getLogfile() const { return logfile; }', 'action__tagname': 'getLogfile'}, {'word': 'getMatrices', 'action__pattern': '\M^const std::map<std::string, glm::mat4>& Pose<T>::getMatrices() const {$', 'action__path': 'modules/core/include/pose.h', 'kind': 'jump_list', 'abbr': 'getMatrices                @modules..ude/pose.h  const std::map<std::string, glm::mat4>& Pose<T>::getMatrices() const {', 'action__tagname': 'getMatrices'}, {'word': 'getMatrix', 'action__pattern': '\M^const glm::mat4& Pose<T>::getMatrix(const std::string& name) const {$', 'action__path': 'modules/core/include/pose.h', 'kind': 'jump_list', 'abbr': 'getMatrix                  @modules..ude/pose.h  const glm::mat4& Pose<T>::getMatrix(const std::string& name) const {', 'action__tagname': 'getMatrix'}, {'word': 'getMax', 'action__pattern': '\M^    inline int getMax() const {$', 'action__path': 'modules/core/include/histogram2d.h', 'kind': 'jump_list', 'abbr': 'getMax                     @modules..togram2d.h      inline int getMax() const {', 'action__tagname': 'getMax'}, {'word': 'getMeshFile', 'action__pattern': '\M^      const std::string& getMeshFile() const { return meshFile; }$', 'action__path': 'apps/bmvc_project/include/bmvc_options.h', 'kind': 'jump_list', 'abbr': 'getMeshFile                @apps/bm.._options.h        const std::string& getMeshFile() const { return meshFile; }', 'action__tagname': 'getMeshFile'}, {'word': 'getMeshFile', 'action__pattern': '\M^      const std::string& getMeshFile() const { return meshFile; }$', 'action__path': 'apps/depth_shader_viewer/include/depth_shader_viewer_options.h', 'kind': 'jump_list', 'abbr': 'getMeshFile                @apps/de.._options.h        const std::string& getMeshFile() const { return meshFile; }', 'action__tagname': 'getMeshFile'}, {'word': 'getMeshFile', 'action__pattern': '\M^      const std::string& getMeshFile() const { return meshFile; }$', 'action__path': 'apps/edge_shader_viewer/include/edge_shader_viewer_options.h', 'kind': 'jump_list', 'abbr': 'getMeshFile                @apps/ed.._options.h        const std::string& getMeshFile() const { return meshFile; }', 'action__tagname': 'getMeshFile'}, {'word': 'getMeshFile', 'action__pattern': '\M^      const std::string& getMeshFile() const { return meshFile; }$', 'action__path': 'apps/gbuffer_viewer/include/gbuffer_viewer_options.h', 'kind': 'jump_list', 'abbr': 'getMeshFile                @apps/gb.._options.h        const std::string& getMeshFile() const { return meshFile; }', 'action__tagname': 'getMeshFile'}, {'word': 'getMeshFile', 'action__pattern': '\M^      const std::string& getMeshFile() const { return meshFile; }$', 'action__path': 'apps/multicam_mesh_viewer/include/mc_mesh_viewer_options.h', 'kind': 'jump_list', 'abbr': 'getMeshFile                @apps/mu.._options.h        const std::string& getMeshFile() const { return meshFile; }', 'action__tagname': 'getMeshFile'}, {'word': 'getMeshFile', 'action__pattern': '\M^      const std::string& getMeshFile() const { return meshFile; }$', 'action__path': 'apps/pose_creator/include/pose_creator_options.h', 'kind': 'jump_list', 'abbr': 'getMeshFile                @apps/po.._options.h        const std::string& getMeshFile() const { return meshFile; }', 'action__tagname': 'getMeshFile'}, {'word': 'getMeshFile', 'action__pattern': '\M^    const std::string& getMeshFile() const { return meshFile; }$', 'action__path': 'apps/pose_renderer/include/pose_renderer_options.h', 'kind': 'jump_list', 'abbr': 'getMeshFile                @apps/po.._options.h      const std::string& getMeshFile() const { return meshFile; }', 'action__tagname': 'getMeshFile'}, {'word': 'getMeshFile', 'action__pattern': '\M^      const std::string& getMeshFile() const { return meshFile; }$', 'action__path': 'apps/pose_viewer/include/pose_viewer_options.h', 'kind': 'jump_list', 'abbr': 'getMeshFile                @apps/po.._options.h        const std::string& getMeshFile() const { return meshFile; }', 'action__tagname': 'getMeshFile'}, {'word': 'getName', 'action__pattern': '\M^inline const std::string& Joint::getName() const {$', 'action__path': 'modules/core/include/old_joint.h', 'kind': 'jump_list', 'abbr': 'getName                    @modules..ld_joint.h  inline const std::string& Joint::getName() const {', 'action__tagname': 'getName'}, {'word': 'getName', 'action__pattern': '\M^const std::string& Pose<T>::getName() const {$', 'action__path': 'modules/core/include/pose.h', 'kind': 'jump_list', 'abbr': 'getName                    @modules..ude/pose.h  const std::string& Pose<T>::getName() const {', 'action__tagname': 'getName'}, {'word': 'getName', 'action__pattern': '\M^const std::string& Bone::getName() const {$', 'action__path': 'modules/core/src/bone.cc', 'kind': 'jump_list', 'abbr': 'getName                    @modules..rc/bone.cc  const std::string& Bone::getName() const {', 'action__tagname': 'getName'}, {'word': 'getName', 'action__pattern': '\M^OffsetLeaf<Data, Labels...>::getName() const {$', 'action__path': 'modules/ml/include/offset_leaf.h', 'kind': 'jump_list', 'abbr': 'getName                    @modules..set_leaf.h  OffsetLeaf<Data, Labels...>::getName() const {', 'action__tagname': 'getName'}, {'word': 'getName', 'action__pattern': '\M^const std::string& LatentTreeNode::getName() const {$', 'action__path': 'modules/ml/src/latent_tree_node.cc', 'kind': 'jump_list', 'abbr': 'getName                    @modules..ee_node.cc  const std::string& LatentTreeNode::getName() const {', 'action__tagname': 'getName'}, {'word': 'getNearest', 'action__pattern': '\M^  const ParticleSwarm::Particle& ParticleSwarm::getNearest($', 'action__path': 'modules/optim/src/particle_swarm.cc', 'kind': 'jump_list', 'abbr': 'getNearest                 @modules..e_swarm.cc    const ParticleSwarm::Particle& ParticleSwarm::getNearest(', 'action__tagname': 'getNearest'}, {'word': 'getNearestOrth', 'action__pattern': '\M^  const ParticleSwarm::Particle& ParticleSwarm::getNearestOrth($', 'action__path': 'modules/optim/src/particle_swarm.cc', 'kind': 'jump_list', 'abbr': 'getNearestOrth             @modules..e_swarm.cc    const ParticleSwarm::Particle& ParticleSwarm::getNearestOrth(', 'action__tagname': 'getNearestOrth'}, {'word': 'getNextNonSplitNode', 'action__pattern': '\M^std::shared_ptr<Node> getNextNonSplitNode(const std::shared_ptr<Node>& tree, const Data& d) {$', 'action__path': 'modules/ml/include/latent_regression_tree.h', 'kind': 'jump_list', 'abbr': 'getNextNonSplitNode        @modules..ion_tree.h  std::shared_ptr<Node> getNextNonSplitNode(const std::shared_ptr<Node>& tree, const Data& d) {', 'action__tagname': 'getNextNonSplitNode'}, {'word': 'getNormal', 'action__pattern': '\M^      glm::vec3 getNormal(const glm::vec3& p1, const glm::vec3& p2,$', 'action__path': 'apps/skel_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'getNormal                  @apps/sk..rc/main.cc        glm::vec3 getNormal(const glm::vec3& p1, const glm::vec3& p2,', 'action__tagname': 'getNormal'}, {'word': 'getNormals', 'action__pattern': '\M^    const std::vector<glm::vec3>& getNormals() const {$', 'action__path': 'modules/gl/include/gl_sphere.h', 'kind': 'jump_list', 'abbr': 'getNormals                 @modules..l_sphere.h      const std::vector<glm::vec3>& getNormals() const {', 'action__tagname': 'getNormals'}, {'word': 'getNumCameras', 'action__pattern': '\M^inline unsigned int CameraCalibration::getNumCameras() {$', 'action__path': 'modules/core/include/camera_calibration.h', 'kind': 'jump_list', 'abbr': 'getNumCameras              @modules..ibration.h  inline unsigned int CameraCalibration::getNumCameras() {', 'action__tagname': 'getNumCameras'}, {'word': 'getNumColorChannels', 'action__pattern': '\M^static unsigned getNumColorChannels(LodePNGColorType colortype)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'getNumColorChannels        @ext/lod..odepng.cpp  static unsigned getNumColorChannels(LodePNGColorType colortype)', 'action__tagname': 'getNumColorChannels'}, {'word': 'getOutputDir', 'action__pattern': '\M^      const std::string& getOutputDir() const { return outputDir; }$', 'action__path': 'apps/bmvc_project/include/bmvc_options.h', 'kind': 'jump_list', 'abbr': 'getOutputDir               @apps/bm.._options.h        const std::string& getOutputDir() const { return outputDir; }', 'action__tagname': 'getOutputDir'}, {'word': 'getOutputDir', 'action__pattern': '\M^inline const std::string& PoseInterpolatorOptions::getOutputDir() const {$', 'action__path': 'apps/pose_interpolator/include/pose_interpolator_options.h', 'kind': 'jump_list', 'abbr': 'getOutputDir               @apps/po.._options.h  inline const std::string& PoseInterpolatorOptions::getOutputDir() const {', 'action__tagname': 'getOutputDir'}, {'word': 'getOutputDir', 'action__pattern': '\M^    const std::string& getOutputDir() const { return outputDir; }$', 'action__path': 'apps/pose_renderer/include/pose_renderer_options.h', 'kind': 'jump_list', 'abbr': 'getOutputDir               @apps/po.._options.h      const std::string& getOutputDir() const { return outputDir; }', 'action__tagname': 'getOutputDir'}, {'word': 'getOutputPose', 'action__pattern': '\M^      const std::string& getOutputPose() const { return outputPose; }$', 'action__path': 'apps/pose_creator/include/pose_creator_options.h', 'kind': 'jump_list', 'abbr': 'getOutputPose              @apps/po.._options.h        const std::string& getOutputPose() const { return outputPose; }', 'action__tagname': 'getOutputPose'}, {'word': 'getPaletteTranslucency', 'action__pattern': '\M^static unsigned getPaletteTranslucency(const unsigned char* palette, size_t palettesize)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'getPaletteTranslucency     @ext/lod..odepng.cpp  static unsigned getPaletteTranslucency(const unsigned char* palette, size_t palettesize)', 'action__tagname': 'getPaletteTranslucency'}, {'word': 'getParamPos', 'action__pattern': '\M^    inline unsigned int getParamPos(unsigned int digit, unsigned int offset)$', 'action__path': 'modules/gl/include/quadric_hand.h', 'kind': 'jump_list', 'abbr': 'getParamPos                @modules..ric_hand.h      inline unsigned int getParamPos(unsigned int digit, unsigned int offset)', 'action__tagname': 'getParamPos'}, {'word': 'getParent', 'action__pattern': '\M^inline const std::shared_ptr<Joint>& Joint::getParent() const {$', 'action__path': 'modules/core/include/old_joint.h', 'kind': 'jump_list', 'abbr': 'getParent                  @modules..ld_joint.h  inline const std::shared_ptr<Joint>& Joint::getParent() const {', 'action__tagname': 'getParent'}, {'word': 'getParent', 'action__pattern': '\M^const std::shared_ptr<Bone>& Bone::getParent() const {$', 'action__path': 'modules/core/src/bone.cc', 'kind': 'jump_list', 'abbr': 'getParent                  @modules..rc/bone.cc  const std::shared_ptr<Bone>& Bone::getParent() const {', 'action__tagname': 'getParent'}, {'word': 'getParent', 'action__pattern': '\M^const LatentTreeNode& LatentTreeNode::getParent() const {$', 'action__path': 'modules/ml/src/latent_tree_node.cc', 'kind': 'jump_list', 'abbr': 'getParent                  @modules..ee_node.cc  const LatentTreeNode& LatentTreeNode::getParent() const {', 'action__tagname': 'getParent'}, {'word': 'getParticles', 'action__pattern': '\M^      unsigned int getParticles() const { return numParticles; }$', 'action__path': 'apps/bmvc_project/include/bmvc_options.h', 'kind': 'jump_list', 'abbr': 'getParticles               @apps/bm.._options.h        unsigned int getParticles() const { return numParticles; }', 'action__tagname': 'getParticles'}, {'word': 'getParticles', 'action__pattern': '\M^ParticleSwarm::getParticles() const {$', 'action__path': 'modules/optim/include/particle_swarm.h', 'kind': 'jump_list', 'abbr': 'getParticles               @modules..le_swarm.h  ParticleSwarm::getParticles() const {', 'action__tagname': 'getParticles'}, {'word': 'getPerturbation', 'action__pattern': '\M^  ParticleSwarm::Particle ParticleSwarm::Particle::getPerturbation($', 'action__path': 'modules/optim/src/particle.cc', 'kind': 'jump_list', 'abbr': 'getPerturbation            @modules..article.cc    ParticleSwarm::Particle ParticleSwarm::Particle::getPerturbation(', 'action__tagname': 'getPerturbation'}, {'word': 'getPixelColorRGBA16', 'action__pattern': '\M^static unsigned getPixelColorRGBA16(unsigned short* r, unsigned short* g, unsigned short* b, unsigned short* a,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'getPixelColorRGBA16        @ext/lod..odepng.cpp  static unsigned getPixelColorRGBA16(unsigned short* r, unsigned short* g, unsigned short* b, unsigned short* a,', 'action__tagname': 'getPixelColorRGBA16'}, {'word': 'getPixelColorRGBA8', 'action__pattern': '\M^static unsigned getPixelColorRGBA8(unsigned char* r, unsigned char* g,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'getPixelColorRGBA8         @ext/lod..odepng.cpp  static unsigned getPixelColorRGBA8(unsigned char* r, unsigned char* g,', 'action__tagname': 'getPixelColorRGBA8'}, {'word': 'getPixelColorsRGBA8', 'action__pattern': '\M^static unsigned getPixelColorsRGBA8(unsigned char* buffer, size_t numpixels,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'getPixelColorsRGBA8        @ext/lod..odepng.cpp  static unsigned getPixelColorsRGBA8(unsigned char* buffer, size_t numpixels,', 'action__tagname': 'getPixelColorsRGBA8'}, {'word': 'getPoseCount', 'action__pattern': '\M^inline unsigned int PoseInterpolatorOptions::getPoseCount() const {$', 'action__path': 'apps/pose_interpolator/include/pose_interpolator_options.h', 'kind': 'jump_list', 'abbr': 'getPoseCount               @apps/po.._options.h  inline unsigned int PoseInterpolatorOptions::getPoseCount() const {', 'action__tagname': 'getPoseCount'}, {'word': 'getPoseFile', 'action__pattern': '\M^      const std::string& getPoseFile() const { return poseFile; }$', 'action__path': 'apps/bmvc_project/include/bmvc_options.h', 'kind': 'jump_list', 'abbr': 'getPoseFile                @apps/bm.._options.h        const std::string& getPoseFile() const { return poseFile; }', 'action__tagname': 'getPoseFile'}, {'word': 'getPoseFile', 'action__pattern': '\M^      const std::string& getPoseFile() const { return poseFile; }$', 'action__path': 'apps/depth_shader_viewer/include/depth_shader_viewer_options.h', 'kind': 'jump_list', 'abbr': 'getPoseFile                @apps/de.._options.h        const std::string& getPoseFile() const { return poseFile; }', 'action__tagname': 'getPoseFile'}, {'word': 'getPoseFile', 'action__pattern': '\M^      const std::string& getPoseFile() const { return poseFile; }$', 'action__path': 'apps/edge_shader_viewer/include/edge_shader_viewer_options.h', 'kind': 'jump_list', 'abbr': 'getPoseFile                @apps/ed.._options.h        const std::string& getPoseFile() const { return poseFile; }', 'action__tagname': 'getPoseFile'}, {'word': 'getPoseFile', 'action__pattern': '\M^      const std::string& getPoseFile() const { return poseFile; }$', 'action__path': 'apps/gbuffer_viewer/include/gbuffer_viewer_options.h', 'kind': 'jump_list', 'abbr': 'getPoseFile                @apps/gb.._options.h        const std::string& getPoseFile() const { return poseFile; }', 'action__tagname': 'getPoseFile'}, {'word': 'getPoseFile', 'action__pattern': '\M^      const std::string& getPoseFile() const { return poseFile; }$', 'action__path': 'apps/multicam_mesh_viewer/include/mc_mesh_viewer_options.h', 'kind': 'jump_list', 'abbr': 'getPoseFile                @apps/mu.._options.h        const std::string& getPoseFile() const { return poseFile; }', 'action__tagname': 'getPoseFile'}, {'word': 'getPoseFiles', 'action__pattern': '\M^      getPoseFiles() const { return poseFiles; }$', 'action__path': 'apps/pose_renderer/include/pose_renderer_options.h', 'kind': 'jump_list', 'abbr': 'getPoseFiles               @apps/po.._options.h        getPoseFiles() const { return poseFiles; }', 'action__tagname': 'getPoseFiles'}, {'word': 'getPoseName', 'action__pattern': '\M^const std::string& Pose::getPoseName() const {$', 'action__path': 'modules/core/src/old_pose.cc', 'kind': 'jump_list', 'abbr': 'getPoseName                @modules..ld_pose.cc  const std::string& Pose::getPoseName() const {', 'action__tagname': 'getPoseName'}, {'word': 'getPosedSpheres', 'action__pattern': '\M^const std::vector<geom::Sphere<double>>& SphereModel::getPosedSpheres() {$', 'action__path': 'modules/core/src/sphere_model.cc', 'kind': 'jump_list', 'abbr': 'getPosedSpheres            @modules..e_model.cc  const std::vector<geom::Sphere<double>>& SphereModel::getPosedSpheres() {', 'action__tagname': 'getPosedSpheres'}, {'word': 'getPoses', 'action__pattern': '\M^      const std::vector<std::string>& getPoses() const { return poses; }$', 'action__path': 'apps/pose_viewer/include/pose_viewer_options.h', 'kind': 'jump_list', 'abbr': 'getPoses                   @apps/po.._options.h        const std::vector<std::string>& getPoses() const { return poses; }', 'action__tagname': 'getPoses'}, {'word': 'getPosition', 'action__pattern': '\M^const glm::vec3& Sphere<T>::getPosition() const {$', 'action__path': 'modules/geom/include/sphere.h', 'kind': 'jump_list', 'abbr': 'getPosition                @modules..e/sphere.h  const glm::vec3& Sphere<T>::getPosition() const {', 'action__tagname': 'getPosition'}, {'word': 'getPosition', 'action__pattern': '\M^ParticleSwarm::Particle::getPosition() const {$', 'action__path': 'modules/optim/include/particle_swarm.h', 'kind': 'jump_list', 'abbr': 'getPosition                @modules..le_swarm.h  ParticleSwarm::Particle::getPosition() const {', 'action__tagname': 'getPosition'}, {'word': 'getPositions', 'action__pattern': '\M^    const std::vector<glm::vec3>& getPositions() const {$', 'action__path': 'modules/gl/include/gl_sphere.h', 'kind': 'jump_list', 'abbr': 'getPositions               @modules..l_sphere.h      const std::vector<glm::vec3>& getPositions() const {', 'action__tagname': 'getPositions'}, {'word': 'getPositions', 'action__pattern': '\M^const std::vector<glm::vec3>& Mesh::getPositions() const {$', 'action__path': 'modules/gl/src/mesh.cc', 'kind': 'jump_list', 'abbr': 'getPositions               @modules..rc/mesh.cc  const std::vector<glm::vec3>& Mesh::getPositions() const {', 'action__tagname': 'getPositions'}, {'word': 'getRadius', 'action__pattern': '\M^T Sphere<T>::getRadius() const {$', 'action__path': 'modules/geom/include/sphere.h', 'kind': 'jump_list', 'abbr': 'getRadius                  @modules..e/sphere.h  T Sphere<T>::getRadius() const {', 'action__tagname': 'getRadius'}, {'word': 'getRenderHeight', 'action__pattern': '\M^    int getRenderHeight() const { return height; }$', 'action__path': 'apps/pose_renderer/include/pose_renderer_options.h', 'kind': 'jump_list', 'abbr': 'getRenderHeight            @apps/po.._options.h      int getRenderHeight() const { return height; }', 'action__tagname': 'getRenderHeight'}, {'word': 'getRenderParams', 'action__pattern': '\M^    getRenderParams(const Pose& p, unsigned int c) {$', 'action__path': 'apps/bmvc_project/src/main.cc', 'kind': 'jump_list', 'abbr': 'getRenderParams            @apps/bm..rc/main.cc      getRenderParams(const Pose& p, unsigned int c) {', 'action__tagname': 'getRenderParams'}, {'word': 'getRenderWidth', 'action__pattern': '\M^    int getRenderWidth() const { return width; }$', 'action__path': 'apps/pose_renderer/include/pose_renderer_options.h', 'kind': 'jump_list', 'abbr': 'getRenderWidth             @apps/po.._options.h      int getRenderWidth() const { return width; }', 'action__tagname': 'getRenderWidth'}, {'word': 'getRestPose', 'action__pattern': '\M^      const std::string& getRestPose() const { return restPose; }$', 'action__path': 'apps/pose_viewer/include/pose_viewer_options.h', 'kind': 'jump_list', 'abbr': 'getRestPose                @apps/po.._options.h        const std::string& getRestPose() const { return restPose; }', 'action__tagname': 'getRestPose'}, {'word': 'getRight', 'action__pattern': '\M^const LatentTreeNode& LatentTreeNode::getRight() const {$', 'action__path': 'modules/ml/src/latent_tree_node.cc', 'kind': 'jump_list', 'abbr': 'getRight                   @modules..ee_node.cc  const LatentTreeNode& LatentTreeNode::getRight() const {', 'action__tagname': 'getRight'}, {'word': 'getRoot', 'action__pattern': '\M^const Joint& Pose::getRoot() const {$', 'action__path': 'modules/core/src/old_pose.cc', 'kind': 'jump_list', 'abbr': 'getRoot                    @modules..ld_pose.cc  const Joint& Pose::getRoot() const {', 'action__tagname': 'getRoot'}, {'word': 'getRoot', 'action__pattern': '\M^const Bone& Skeleton::getRoot() const {$', 'action__path': 'modules/core/src/skeleton.cc', 'kind': 'jump_list', 'abbr': 'getRoot                    @modules..keleton.cc  const Bone& Skeleton::getRoot() const {', 'action__tagname': 'getRoot'}, {'word': 'getRoot', 'action__pattern': '\M^LatentTreeNode& LatentTreeModel::getRoot() const {$', 'action__path': 'modules/ml/src/latent_tree_model.cc', 'kind': 'jump_list', 'abbr': 'getRoot                    @modules..e_model.cc  LatentTreeNode& LatentTreeModel::getRoot() const {', 'action__tagname': 'getRoot'}, {'word': 'getRootPosition', 'action__pattern': '\M^const glm::vec3& Pose<T>::getRootPosition() const {$', 'action__path': 'modules/core/include/pose.h', 'kind': 'jump_list', 'abbr': 'getRootPosition            @modules..ude/pose.h  const glm::vec3& Pose<T>::getRootPosition() const {', 'action__tagname': 'getRootPosition'}, {'word': 'getRootRotation', 'action__pattern': '\M^const glm::quat& Pose<T>::getRootRotation() const {$', 'action__path': 'modules/core/include/pose.h', 'kind': 'jump_list', 'abbr': 'getRootRotation            @modules..ude/pose.h  const glm::quat& Pose<T>::getRootRotation() const {', 'action__tagname': 'getRootRotation'}, {'word': 'getRootTransform', 'action__pattern': '\M^glm::mat4 Pose<T>::getRootTransform() const {$', 'action__path': 'modules/core/include/pose.h', 'kind': 'jump_list', 'abbr': 'getRootTransform           @modules..ude/pose.h  glm::mat4 Pose<T>::getRootTransform() const {', 'action__tagname': 'getRootTransform'}, {'word': 'getRotation', 'action__pattern': '\M^inline const glm::quat& Joint::getRotation() const {$', 'action__path': 'modules/core/include/old_joint.h', 'kind': 'jump_list', 'abbr': 'getRotation                @modules..ld_joint.h  inline const glm::quat& Joint::getRotation() const {', 'action__tagname': 'getRotation'}, {'word': 'getRows', 'action__pattern': '\M^    inline int getRows() const {$', 'action__path': 'modules/core/include/histogram2d.h', 'kind': 'jump_list', 'abbr': 'getRows                    @modules..togram2d.h      inline int getRows() const {', 'action__tagname': 'getRows'}, {'word': 'getRows', 'action__pattern': '\M^    unsigned int getRows() {$', 'action__path': 'modules/gl/include/tiler.h', 'kind': 'jump_list', 'abbr': 'getRows                    @modules..de/tiler.h      unsigned int getRows() {', 'action__tagname': 'getRows'}, {'word': 'getSilhouetteImage', 'action__pattern': '\M^const cv::Mat& CameraImage::getSilhouetteImage() const$', 'action__path': 'ext/objective_functions/xing/aig/camera_image.hpp', 'kind': 'jump_list', 'abbr': 'getSilhouetteImage         @ext/obj.._image.hpp  const cv::Mat& CameraImage::getSilhouetteImage() const', 'action__tagname': 'getSilhouetteImage'}, {'word': 'getSize', 'action__pattern': '\M^    inline std::size_t getSize() const$', 'action__path': 'ext/objective_functions/xing/aig/camera_image_evaluator.hpp', 'kind': 'jump_list', 'abbr': 'getSize                    @ext/obj..luator.hpp      inline std::size_t getSize() const', 'action__tagname': 'getSize'}, {'word': 'getSkeleton', 'action__pattern': '\M^const core::Skeleton& Mesh::getSkeleton() const {$', 'action__path': 'modules/gl/src/mesh.cc', 'kind': 'jump_list', 'abbr': 'getSkeleton                @modules..rc/mesh.cc  const core::Skeleton& Mesh::getSkeleton() const {', 'action__tagname': 'getSkeleton'}, {'word': 'getSkinFragShader', 'action__pattern': '\M^      const std::string& getSkinFragShader() const { return skinFrag; }$', 'action__path': 'apps/bmvc_project/include/bmvc_options.h', 'kind': 'jump_list', 'abbr': 'getSkinFragShader          @apps/bm.._options.h        const std::string& getSkinFragShader() const { return skinFrag; }', 'action__tagname': 'getSkinFragShader'}, {'word': 'getSkinRendering', 'action__pattern': '\M^    cv::Mat getSkinRendering(const std::vector<glm::mat4>& bones,$', 'action__path': 'apps/bmvc_project/src/main.cc', 'kind': 'jump_list', 'abbr': 'getSkinRendering           @apps/bm..rc/main.cc      cv::Mat getSkinRendering(const std::vector<glm::mat4>& bones,', 'action__tagname': 'getSkinRendering'}, {'word': 'getSkinRendering', 'action__pattern': '\M^cv::Mat PoseRenderer::getSkinRendering(const std::vector<glm::mat4>& bones,$', 'action__path': 'apps/pose_renderer/src/pose_renderer.cc', 'kind': 'jump_list', 'abbr': 'getSkinRendering           @apps/po..enderer.cc  cv::Mat PoseRenderer::getSkinRendering(const std::vector<glm::mat4>& bones,', 'action__tagname': 'getSkinRendering'}, {'word': 'getSkinVertShader', 'action__pattern': '\M^      const std::string& getSkinVertShader() const { return skinVert; }$', 'action__path': 'apps/bmvc_project/include/bmvc_options.h', 'kind': 'jump_list', 'abbr': 'getSkinVertShader          @apps/bm.._options.h        const std::string& getSkinVertShader() const { return skinVert; }', 'action__tagname': 'getSkinVertShader'}, {'word': 'getSpheres', 'action__pattern': '\M^const std::vector<geom::Sphere<double>>& SphereModel::getSpheres() {$', 'action__path': 'modules/core/src/sphere_model.cc', 'kind': 'jump_list', 'abbr': 'getSpheres                 @modules..e_model.cc  const std::vector<geom::Sphere<double>>& SphereModel::getSpheres() {', 'action__tagname': 'getSpheres'}, {'word': 'getSplitFunction', 'action__pattern': '\M^    std::shared_ptr<DepthSplitFunction> getSplitFunction() {$', 'action__path': 'modules/ml/include/depth_split_function_factory.h', 'kind': 'jump_list', 'abbr': 'getSplitFunction           @modules.._factory.h      std::shared_ptr<DepthSplitFunction> getSplitFunction() {', 'action__tagname': 'getSplitFunction'}, {'word': 'getSplitFunction', 'action__pattern': '\M^    std::shared_ptr<ScalarSplitFunction<DataType>> getSplitFunction() {$', 'action__path': 'modules/ml/include/scalar_split_function_factory.h', 'kind': 'jump_list', 'abbr': 'getSplitFunction           @modules.._factory.h      std::shared_ptr<ScalarSplitFunction<DataType>> getSplitFunction() {', 'action__tagname': 'getSplitFunction'}, {'word': 'getSplitFunction', 'action__pattern': '\M^    std::shared_ptr<SplitFunctionType> getSplitFunction() {$', 'action__path': 'modules/ml/include/split_function_factory.h', 'kind': 'jump_list', 'abbr': 'getSplitFunction           @modules.._factory.h      std::shared_ptr<SplitFunctionType> getSplitFunction() {', 'action__tagname': 'getSplitFunction'}, {'word': 'getStartPosition', 'action__pattern': '\M^inline const glm::vec3& Joint::getStartPosition() const {$', 'action__path': 'modules/core/include/old_joint.h', 'kind': 'jump_list', 'abbr': 'getStartPosition           @modules..ld_joint.h  inline const glm::vec3& Joint::getStartPosition() const {', 'action__tagname': 'getStartPosition'}, {'word': 'getTexcoords', 'action__pattern': '\M^    const std::vector<glm::vec2>& getTexcoords() const {$', 'action__path': 'modules/gl/include/gl_sphere.h', 'kind': 'jump_list', 'abbr': 'getTexcoords               @modules..l_sphere.h      const std::vector<glm::vec2>& getTexcoords() const {', 'action__tagname': 'getTexcoords'}, {'word': 'getTileTransformation', 'action__pattern': '\M^glm::mat4 Tiler::getTileTransformation(unsigned int tile) {$', 'action__path': 'modules/gl/src/tiler.cc', 'kind': 'jump_list', 'abbr': 'getTileTransformation      @modules..c/tiler.cc  glm::mat4 Tiler::getTileTransformation(unsigned int tile) {', 'action__tagname': 'getTileTransformation'}, {'word': 'getTotal', 'action__pattern': '\M^    inline unsigned long int getTotal() const {$', 'action__path': 'modules/core/include/histogram2d.h', 'kind': 'jump_list', 'abbr': 'getTotal                   @modules..togram2d.h      inline unsigned long int getTotal() const {', 'action__tagname': 'getTotal'}, {'word': 'getTransform', 'action__pattern': '\M^const glm::mat4& Bone::getTransform() const {$', 'action__path': 'modules/core/src/bone.cc', 'kind': 'jump_list', 'abbr': 'getTransform               @modules..rc/bone.cc  const glm::mat4& Bone::getTransform() const {', 'action__tagname': 'getTransform'}, {'word': 'getTreeInflateDynamic', 'action__pattern': '\M^static unsigned getTreeInflateDynamic(HuffmanTree* tree_ll, HuffmanTree* tree_d,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'getTreeInflateDynamic      @ext/lod..odepng.cpp  static unsigned getTreeInflateDynamic(HuffmanTree* tree_ll, HuffmanTree* tree_d,', 'action__tagname': 'getTreeInflateDynamic'}, {'word': 'getTreeInflateFixed', 'action__pattern': '\M^static void getTreeInflateFixed(HuffmanTree* tree_ll, HuffmanTree* tree_d)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'getTreeInflateFixed        @ext/lod..odepng.cpp  static void getTreeInflateFixed(HuffmanTree* tree_ll, HuffmanTree* tree_d)', 'action__tagname': 'getTreeInflateFixed'}, {'word': 'getUniformLocation', 'action__pattern': '\M^GLuint ShaderProgram::getUniformLocation(const std::string& uniform) {$', 'action__path': 'modules/gl/src/shader_program.cc', 'kind': 'jump_list', 'abbr': 'getUniformLocation         @modules..program.cc  GLuint ShaderProgram::getUniformLocation(const std::string& uniform) {', 'action__tagname': 'getUniformLocation'}, {'word': 'getV', 'action__pattern': '\M^glm::mat4 CalibratedCamera::getV() {$', 'action__path': 'modules/core/src/camera_calibration.cc', 'kind': 'jump_list', 'abbr': 'getV                       @modules..bration.cc  glm::mat4 CalibratedCamera::getV() {', 'action__tagname': 'getV'}, {'word': 'getVP', 'action__pattern': '\M^glm::mat4 getVP() {$', 'action__path': 'apps/sphere_model_renderer/src/main.cc', 'kind': 'jump_list', 'abbr': 'getVP                      @apps/sp..rc/main.cc  glm::mat4 getVP() {', 'action__tagname': 'getVP'}, {'word': 'getVP', 'action__pattern': '\M^glm::mat4 CalibratedCamera::getVP(const core::ImageSize& requestedSize,$', 'action__path': 'modules/core/src/camera_calibration.cc', 'kind': 'jump_list', 'abbr': 'getVP                      @modules..bration.cc  glm::mat4 CalibratedCamera::getVP(const core::ImageSize& requestedSize,', 'action__tagname': 'getVP'}, {'word': 'getVPTrans', 'action__pattern': '\M^    inline const glm::mat4& getVPTrans() {$', 'action__path': 'modules/gl/include/pipeline.h', 'kind': 'jump_list', 'abbr': 'getVPTrans                 @modules..pipeline.h      inline const glm::mat4& getVPTrans() {', 'action__tagname': 'getVPTrans'}, {'word': 'getVTrans', 'action__pattern': '\M^    inline const glm::mat4& getVTrans() {$', 'action__path': 'modules/gl/include/pipeline.h', 'kind': 'jump_list', 'abbr': 'getVTrans                  @modules..pipeline.h      inline const glm::mat4& getVTrans() {', 'action__tagname': 'getVTrans'}, {'word': 'getValue', 'action__pattern': '\M^    inline unsigned int getValue(int row, int col) const {$', 'action__path': 'modules/core/include/histogram2d.h', 'kind': 'jump_list', 'abbr': 'getValue                   @modules..togram2d.h      inline unsigned int getValue(int row, int col) const {', 'action__tagname': 'getValue'}, {'word': 'getValueRequiredBits', 'action__pattern': '\M^unsigned getValueRequiredBits(unsigned short value)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'getValueRequiredBits       @ext/lod..odepng.cpp  unsigned getValueRequiredBits(unsigned short value)', 'action__tagname': 'getValueRequiredBits'}, {'word': 'getVector', 'action__pattern': '\M^    const std::vector<double>& getVector() {$', 'action__path': 'modules/core/include/hand_pose_27_dof.h', 'kind': 'jump_list', 'abbr': 'getVector                  @modules..e_27_dof.h      const std::vector<double>& getVector() {', 'action__tagname': 'getVector'}, {'word': 'getVector', 'action__pattern': '\M^    const std::vector<double>& getVector() {$', 'action__path': 'modules/core/include/hand_pose_34_dof.h', 'kind': 'jump_list', 'abbr': 'getVector                  @modules..e_34_dof.h      const std::vector<double>& getVector() {', 'action__tagname': 'getVector'}, {'word': 'getVertShader', 'action__pattern': '\M^      const std::string& getVertShader() const { return vertShader; }$', 'action__path': 'apps/depth_shader_viewer/include/depth_shader_viewer_options.h', 'kind': 'jump_list', 'abbr': 'getVertShader              @apps/de.._options.h        const std::string& getVertShader() const { return vertShader; }', 'action__tagname': 'getVertShader'}, {'word': 'getVertShader', 'action__pattern': '\M^      const std::string& getVertShader() const { return vertShader; }$', 'action__path': 'apps/multicam_mesh_viewer/include/mc_mesh_viewer_options.h', 'kind': 'jump_list', 'abbr': 'getVertShader              @apps/mu.._options.h        const std::string& getVertShader() const { return vertShader; }', 'action__tagname': 'getVertShader'}, {'word': 'getVertShader', 'action__pattern': '\M^      const std::string& getVertShader() const { return vertShader; }$', 'action__path': 'apps/pose_viewer/include/pose_viewer_options.h', 'kind': 'jump_list', 'abbr': 'getVertShader              @apps/po.._options.h        const std::string& getVertShader() const { return vertShader; }', 'action__tagname': 'getVertShader'}, {'word': 'getVertexShaders', 'action__pattern': '\M^    const std::map<std::string, std::string>& getVertexShaders() const {$', 'action__path': 'apps/pose_renderer/include/pose_renderer_options.h', 'kind': 'jump_list', 'abbr': 'getVertexShaders           @apps/po.._options.h      const std::map<std::string, std::string>& getVertexShaders() const {', 'action__tagname': 'getVertexShaders'}, {'word': 'getViewMatrix', 'action__pattern': '\M^const glm::mat4& Camera::getViewMatrix() {$', 'action__path': 'modules/gl/src/camera.cc', 'kind': 'jump_list', 'abbr': 'getViewMatrix              @modules../camera.cc  const glm::mat4& Camera::getViewMatrix() {', 'action__tagname': 'getViewMatrix'}, {'word': 'getWeight', 'action__pattern': '\M^    inline double getWeight(std::size_t index) const$', 'action__path': 'ext/objective_functions/xing/aig/camera_image_evaluator.hpp', 'kind': 'jump_list', 'abbr': 'getWeight                  @ext/obj..luator.hpp      inline double getWeight(std::size_t index) const', 'action__tagname': 'getWeight'}, {'word': 'get_color_profile', 'action__pattern': '\M^static unsigned get_color_profile(ColorProfile* profile,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'get_color_profile          @ext/lod..odepng.cpp  static unsigned get_color_profile(ColorProfile* profile,', 'action__tagname': 'get_color_profile'}, {'word': 'get_mesh_bounds', 'action__pattern': '\M^void get_mesh_bounds(double& min_x, double& max_x,$', 'action__path': 'apps/sphere_model_optim/src/main.cc', 'kind': 'jump_list', 'abbr': 'get_mesh_bounds            @apps/sp..rc/main.cc  void get_mesh_bounds(double& min_x, double& max_x,', 'action__tagname': 'get_mesh_bounds'}, {'word': 'gl', 'action__pattern': '\M^namespace gl {$', 'action__path': 'modules/gl/include/background_drawer.h', 'kind': 'jump_list', 'abbr': 'gl                         @modules..d_drawer.h  namespace gl {', 'action__tagname': 'gl'}, {'word': 'gl', 'action__pattern': '\M^namespace gl {$', 'action__path': 'modules/gl/include/background_shader.h', 'kind': 'jump_list', 'abbr': 'gl                         @modules..d_shader.h  namespace gl {', 'action__tagname': 'gl'}, {'word': 'gl', 'action__pattern': '\M^namespace gl {$', 'action__path': 'modules/gl/include/camera.h', 'kind': 'jump_list', 'abbr': 'gl                         @modules..e/camera.h  namespace gl {', 'action__tagname': 'gl'}, {'word': 'gl', 'action__pattern': '\M^namespace gl {$', 'action__path': 'modules/gl/include/chessboard_drawer.h', 'kind': 'jump_list', 'abbr': 'gl                         @modules..d_drawer.h  namespace gl {', 'action__tagname': 'gl'}, {'word': 'gl', 'action__pattern': '\M^namespace gl {$', 'action__path': 'modules/gl/include/cone.h', 'kind': 'jump_list', 'abbr': 'gl                         @modules..ude/cone.h  namespace gl {', 'action__tagname': 'gl'}, {'word': 'gl', 'action__pattern': '\M^namespace gl {$', 'action__path': 'modules/gl/include/cuboid.h', 'kind': 'jump_list', 'abbr': 'gl                         @modules..e/cuboid.h  namespace gl {', 'action__tagname': 'gl'}, {'word': 'gl', 'action__pattern': '\M^namespace gl {$', 'action__path': 'modules/gl/include/gbuffer.h', 'kind': 'jump_list', 'abbr': 'gl                         @modules../gbuffer.h  namespace gl {', 'action__tagname': 'gl'}, {'word': 'gl', 'action__pattern': '\M^namespace gl {$', 'action__path': 'modules/gl/include/gl.h', 'kind': 'jump_list', 'abbr': 'gl                         @modules..clude/gl.h  namespace gl {', 'action__tagname': 'gl'}, {'word': 'gl', 'action__pattern': '\M^namespace gl {$', 'action__path': 'modules/gl/include/gl_sphere.h', 'kind': 'jump_list', 'abbr': 'gl                         @modules..l_sphere.h  namespace gl {', 'action__tagname': 'gl'}, {'word': 'gl', 'action__pattern': '\M^namespace gl {$', 'action__path': 'modules/gl/include/gl_utility.h', 'kind': 'jump_list', 'abbr': 'gl                         @modules.._utility.h  namespace gl {', 'action__tagname': 'gl'}, {'word': 'gl', 'action__pattern': '\M^namespace gl {$', 'action__path': 'modules/gl/include/instanced_mesh_renderer.h', 'kind': 'jump_list', 'abbr': 'gl                         @modules..renderer.h  namespace gl {', 'action__tagname': 'gl'}, {'word': 'gl', 'action__pattern': '\M^namespace gl {$', 'action__path': 'modules/gl/include/instanced_shape_renderer.h', 'kind': 'jump_list', 'abbr': 'gl                         @modules..renderer.h  namespace gl {', 'action__tagname': 'gl'}, {'word': 'gl', 'action__pattern': '\M^namespace gl {$', 'action__path': 'modules/gl/include/mesh.h', 'kind': 'jump_list', 'abbr': 'gl                         @modules..ude/mesh.h  namespace gl {', 'action__tagname': 'gl'}, {'word': 'gl', 'action__pattern': '\M^namespace gl {$', 'action__path': 'modules/gl/include/mesh_renderer.h', 'kind': 'jump_list', 'abbr': 'gl                         @modules..renderer.h  namespace gl {', 'action__tagname': 'gl'}, {'word': 'gl', 'action__pattern': '\M^namespace gl {$', 'action__path': 'modules/gl/include/offscreen_buffer.h', 'kind': 'jump_list', 'abbr': 'gl                         @modules..n_buffer.h  namespace gl {', 'action__tagname': 'gl'}, {'word': 'gl', 'action__pattern': '\M^namespace gl {$', 'action__path': 'modules/gl/include/pipeline.h', 'kind': 'jump_list', 'abbr': 'gl                         @modules..pipeline.h  namespace gl {', 'action__tagname': 'gl'}, {'word': 'gl', 'action__pattern': '\M^namespace gl {$', 'action__path': 'modules/gl/include/pose_shader.h', 'kind': 'jump_list', 'abbr': 'gl                         @modules..e_shader.h  namespace gl {', 'action__tagname': 'gl'}, {'word': 'gl', 'action__pattern': '\M^namespace gl {$', 'action__path': 'modules/gl/include/prism.h', 'kind': 'jump_list', 'abbr': 'gl                         @modules..de/prism.h  namespace gl {', 'action__tagname': 'gl'}, {'word': 'gl', 'action__pattern': '\M^namespace gl {$', 'action__path': 'modules/gl/include/quadric_hand.h', 'kind': 'jump_list', 'abbr': 'gl                         @modules..ric_hand.h  namespace gl {', 'action__tagname': 'gl'}, {'word': 'gl', 'action__pattern': '\M^namespace gl {$', 'action__path': 'modules/gl/include/shader.h', 'kind': 'jump_list', 'abbr': 'gl                         @modules..e/shader.h  namespace gl {', 'action__tagname': 'gl'}, {'word': 'gl', 'action__pattern': '\M^namespace gl {$', 'action__path': 'modules/gl/include/shader_program.h', 'kind': 'jump_list', 'abbr': 'gl                         @modules.._program.h  namespace gl {', 'action__tagname': 'gl'}, {'word': 'gl', 'action__pattern': '\M^namespace gl {$', 'action__path': 'modules/gl/include/shape_renderer.h', 'kind': 'jump_list', 'abbr': 'gl                         @modules..renderer.h  namespace gl {', 'action__tagname': 'gl'}, {'word': 'gl', 'action__pattern': '\M^namespace gl {$', 'action__path': 'modules/gl/include/sphere_model_maker.h', 'kind': 'jump_list', 'abbr': 'gl                         @modules..el_maker.h  namespace gl {', 'action__tagname': 'gl'}, {'word': 'gl', 'action__pattern': '\M^namespace gl {$', 'action__path': 'modules/gl/include/surface.h', 'kind': 'jump_list', 'abbr': 'gl                         @modules../surface.h  namespace gl {', 'action__tagname': 'gl'}, {'word': 'gl', 'action__pattern': '\M^namespace gl {$', 'action__path': 'modules/gl/include/texture.h', 'kind': 'jump_list', 'abbr': 'gl                         @modules../texture.h  namespace gl {', 'action__tagname': 'gl'}, {'word': 'gl', 'action__pattern': '\M^namespace gl {$', 'action__path': 'modules/gl/include/tiler.h', 'kind': 'jump_list', 'abbr': 'gl                         @modules..de/tiler.h  namespace gl {', 'action__tagname': 'gl'}, {'word': 'gl', 'action__pattern': '\M^namespace gl {$', 'action__path': 'modules/gl/src/background_drawer.cc', 'kind': 'jump_list', 'abbr': 'gl                         @modules.._drawer.cc  namespace gl {', 'action__tagname': 'gl'}, {'word': 'gl', 'action__pattern': '\M^namespace gl {$', 'action__path': 'modules/gl/src/background_shader.cc', 'kind': 'jump_list', 'abbr': 'gl                         @modules.._shader.cc  namespace gl {', 'action__tagname': 'gl'}, {'word': 'gl', 'action__pattern': '\M^namespace gl {$', 'action__path': 'modules/gl/src/camera.cc', 'kind': 'jump_list', 'abbr': 'gl                         @modules../camera.cc  namespace gl {', 'action__tagname': 'gl'}, {'word': 'gl', 'action__pattern': '\M^namespace gl {$', 'action__path': 'modules/gl/src/chessboard_drawer.cc', 'kind': 'jump_list', 'abbr': 'gl                         @modules.._drawer.cc  namespace gl {', 'action__tagname': 'gl'}, {'word': 'gl', 'action__pattern': '\M^namespace gl {$', 'action__path': 'modules/gl/src/gbuffer.cc', 'kind': 'jump_list', 'abbr': 'gl                         @modules..gbuffer.cc  namespace gl {', 'action__tagname': 'gl'}, {'word': 'gl', 'action__pattern': '\M^namespace gl {$', 'action__path': 'modules/gl/src/gl_sphere.cc', 'kind': 'jump_list', 'abbr': 'gl                         @modules.._sphere.cc  namespace gl {', 'action__tagname': 'gl'}, {'word': 'gl', 'action__pattern': '\M^namespace gl {$', 'action__path': 'modules/gl/src/instanced_mesh_renderer.cc', 'kind': 'jump_list', 'abbr': 'gl                         @modules..enderer.cc  namespace gl {', 'action__tagname': 'gl'}, {'word': 'gl', 'action__pattern': '\M^namespace gl {$', 'action__path': 'modules/gl/src/instanced_shape_renderer.cc', 'kind': 'jump_list', 'abbr': 'gl                         @modules..enderer.cc  namespace gl {', 'action__tagname': 'gl'}, {'word': 'gl', 'action__pattern': '\M^namespace gl {$', 'action__path': 'modules/gl/src/mesh.cc', 'kind': 'jump_list', 'abbr': 'gl                         @modules..rc/mesh.cc  namespace gl {', 'action__tagname': 'gl'}, {'word': 'gl', 'action__pattern': '\M^namespace gl {$', 'action__path': 'modules/gl/src/mesh_renderer.cc', 'kind': 'jump_list', 'abbr': 'gl                         @modules..enderer.cc  namespace gl {', 'action__tagname': 'gl'}, {'word': 'gl', 'action__pattern': '\M^namespace gl {$', 'action__path': 'modules/gl/src/offscreen_buffer.cc', 'kind': 'jump_list', 'abbr': 'gl                         @modules.._buffer.cc  namespace gl {', 'action__tagname': 'gl'}, {'word': 'gl', 'action__pattern': '\M^namespace gl {$', 'action__path': 'modules/gl/src/pipeline.cc', 'kind': 'jump_list', 'abbr': 'gl                         @modules..ipeline.cc  namespace gl {', 'action__tagname': 'gl'}, {'word': 'gl', 'action__pattern': '\M^namespace gl {$', 'action__path': 'modules/gl/src/pose_shader.cc', 'kind': 'jump_list', 'abbr': 'gl                         @modules.._shader.cc  namespace gl {', 'action__tagname': 'gl'}, {'word': 'gl', 'action__pattern': '\M^namespace gl {$', 'action__path': 'modules/gl/src/prism.cc', 'kind': 'jump_list', 'abbr': 'gl                         @modules..c/prism.cc  namespace gl {', 'action__tagname': 'gl'}, {'word': 'gl', 'action__pattern': '\M^namespace gl {$', 'action__path': 'modules/gl/src/quadric_hand.cc', 'kind': 'jump_list', 'abbr': 'gl                         @modules..ic_hand.cc  namespace gl {', 'action__tagname': 'gl'}, {'word': 'gl', 'action__pattern': '\M^namespace gl {$', 'action__path': 'modules/gl/src/shader.cc', 'kind': 'jump_list', 'abbr': 'gl                         @modules../shader.cc  namespace gl {', 'action__tagname': 'gl'}, {'word': 'gl', 'action__pattern': '\M^namespace gl {$', 'action__path': 'modules/gl/src/shader_program.cc', 'kind': 'jump_list', 'abbr': 'gl                         @modules..program.cc  namespace gl {', 'action__tagname': 'gl'}, {'word': 'gl', 'action__pattern': '\M^namespace gl {$', 'action__path': 'modules/gl/src/shape_renderer.cc', 'kind': 'jump_list', 'abbr': 'gl                         @modules..enderer.cc  namespace gl {', 'action__tagname': 'gl'}, {'word': 'gl', 'action__pattern': '\M^namespace gl {$', 'action__path': 'modules/gl/src/sphere_model_maker.cc', 'kind': 'jump_list', 'abbr': 'gl                         @modules..l_maker.cc  namespace gl {', 'action__tagname': 'gl'}, {'word': 'gl', 'action__pattern': '\M^namespace gl {$', 'action__path': 'modules/gl/src/surface.cc', 'kind': 'jump_list', 'abbr': 'gl                         @modules..surface.cc  namespace gl {', 'action__tagname': 'gl'}, {'word': 'gl', 'action__pattern': '\M^namespace gl {$', 'action__path': 'modules/gl/src/texture.cc', 'kind': 'jump_list', 'abbr': 'gl                         @modules..texture.cc  namespace gl {', 'action__tagname': 'gl'}, {'word': 'gl', 'action__pattern': '\M^namespace gl {$', 'action__path': 'modules/gl/src/tiler.cc', 'kind': 'jump_list', 'abbr': 'gl                         @modules..c/tiler.cc  namespace gl {', 'action__tagname': 'gl'}, {'word': 'globalInverseTransform', 'action__pattern': '\M^    glm::mat4 globalInverseTransform;$', 'action__path': 'modules/gl/include/mesh.h', 'kind': 'jump_list', 'abbr': 'globalInverseTransform     @modules..ude/mesh.h      glm::mat4 globalInverseTransform;', 'action__tagname': 'globalInverseTransform'}, {'word': 'globalInverseTransform', 'action__pattern': '\M^    glm::mat4 globalInverseTransform;$', 'action__path': 'modules/io/include/mesh_reader.h', 'kind': 'jump_list', 'abbr': 'globalInverseTransform     @modules..h_reader.h      glm::mat4 globalInverseTransform;', 'action__tagname': 'globalInverseTransform'}, {'word': 'greybits', 'action__pattern': '\M^  unsigned greybits; /*amount of bits required for greyscale (1, 2, 4, 8). Does not take 16 bit into account.*/$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'greybits                   @ext/lod..odepng.cpp    unsigned greybits; \/*amount of bits required for greyscale (1, 2, 4, 8). Does not take 16 bit into account.*\/', 'action__tagname': 'greybits'}, {'word': 'greybits_done', 'action__pattern': '\M^  unsigned char greybits_done;$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'greybits_done              @ext/lod..odepng.cpp    unsigned char greybits_done;', 'action__tagname': 'greybits_done'}, {'word': 'guessType', 'action__pattern': '\M^ImageSource CameraImage::guessType(const cv::Mat& img, ImageSource hint)$', 'action__path': 'ext/objective_functions/xing/aig/camera_image.cc', 'kind': 'jump_list', 'abbr': 'guessType                  @ext/obj..a_image.cc  ImageSource CameraImage::guessType(const cv::Mat& img, ImageSource hint)', 'action__tagname': 'guessType'}, {'word': 'hasBone', 'action__pattern': '\M^bool Skeleton::hasBone(const std::string& name) const {$', 'action__path': 'modules/core/src/skeleton.cc', 'kind': 'jump_list', 'abbr': 'hasBone                    @modules..keleton.cc  bool Skeleton::hasBone(const std::string& name) const {', 'action__tagname': 'hasBone'}, {'word': 'hasChild', 'action__pattern': '\M^bool Bone::hasChild(const std::string& name) const {$', 'action__path': 'modules/core/src/bone.cc', 'kind': 'jump_list', 'abbr': 'hasChild                   @modules..rc/bone.cc  bool Bone::hasChild(const std::string& name) const {', 'action__tagname': 'hasChild'}, {'word': 'hasJoint', 'action__pattern': '\M^bool Pose::hasJoint(const std::string& joint) const {$', 'action__path': 'modules/core/src/old_pose.cc', 'kind': 'jump_list', 'abbr': 'hasJoint                   @modules..ld_pose.cc  bool Pose::hasJoint(const std::string& joint) const {', 'action__tagname': 'hasJoint'}, {'word': 'hash_cleanup', 'action__pattern': '\M^static void hash_cleanup(Hash* hash)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'hash_cleanup               @ext/lod..odepng.cpp  static void hash_cleanup(Hash* hash)', 'action__tagname': 'hash_cleanup'}, {'word': 'hash_init', 'action__pattern': '\M^static unsigned hash_init(Hash* hash, unsigned windowsize)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'hash_init                  @ext/lod..odepng.cpp  static unsigned hash_init(Hash* hash, unsigned windowsize)', 'action__tagname': 'hash_init'}, {'word': 'head', 'action__pattern': '\M^  int* head; /*hash value to head circular pos*/$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'head                       @ext/lod..odepng.cpp    int* head; \/*hash value to head circular pos*\/', 'action__tagname': 'head'}, {'word': 'height', 'action__pattern': '\M^const unsigned int height = 240;$', 'action__path': 'apps/bmvc_project/src/main.cc', 'kind': 'jump_list', 'abbr': 'height                     @apps/bm..rc/main.cc  const unsigned int height = 240;', 'action__tagname': 'height'}, {'word': 'height', 'action__pattern': '\M^static unsigned int height = 480;$', 'action__path': 'apps/depth_shader_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'height                     @apps/de..rc/main.cc  static unsigned int height = 480;', 'action__tagname': 'height'}, {'word': 'height', 'action__pattern': '\M^static unsigned int height = 480;$', 'action__path': 'apps/edge_shader_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'height                     @apps/ed..rc/main.cc  static unsigned int height = 480;', 'action__tagname': 'height'}, {'word': 'height', 'action__pattern': '\M^static unsigned int height = 480;$', 'action__path': 'apps/gbuffer_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'height                     @apps/gb..rc/main.cc  static unsigned int height = 480;', 'action__tagname': 'height'}, {'word': 'height', 'action__pattern': '\M^const static unsigned int height = 480;$', 'action__path': 'apps/multicam_mesh_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'height                     @apps/mu..rc/main.cc  const static unsigned int height = 480;', 'action__tagname': 'height'}, {'word': 'height', 'action__pattern': '\M^int width, height;$', 'action__path': 'apps/particle_swarm_demo/src/main.cc', 'kind': 'jump_list', 'abbr': 'height                     @apps/pa..rc/main.cc  int width, height;', 'action__tagname': 'height'}, {'word': 'height', 'action__pattern': '\M^    int width, height;$', 'action__path': 'apps/pose_renderer/include/pose_renderer.h', 'kind': 'jump_list', 'abbr': 'height                     @apps/po..renderer.h      int width, height;', 'action__tagname': 'height'}, {'word': 'height', 'action__pattern': '\M^    int height, width;$', 'action__path': 'apps/pose_renderer/include/pose_renderer_options.h', 'kind': 'jump_list', 'abbr': 'height                     @apps/po.._options.h      int height, width;', 'action__tagname': 'height'}, {'word': 'height', 'action__pattern': '\M^  unsigned int width, height;$', 'action__path': 'modules/core/include/image.h', 'kind': 'jump_list', 'abbr': 'height                     @modules..de/image.h    unsigned int width, height;', 'action__tagname': 'height'}, {'word': 'height', 'action__pattern': '\M^    unsigned int width, height;$', 'action__path': 'modules/gl/include/offscreen_buffer.h', 'kind': 'jump_list', 'abbr': 'height                     @modules..n_buffer.h      unsigned int width, height;', 'action__tagname': 'height'}, {'word': 'homo', 'action__pattern': '\M^    std::vector<TrainingData<int>> homo, perfect, unhelpful, moreHelpful;$', 'action__path': 'modules/ml/test/discrete_information_gain_test.cc', 'kind': 'jump_list', 'abbr': 'homo                       @modules..in_test.cc      std::vector<TrainingData<int>> homo, perfect, unhelpful, moreHelpful;', 'action__tagname': 'homo'}, {'word': 'hour', 'action__pattern': '\M^  unsigned hour;    /*0-23*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'hour                       @ext/lod../lodepng.h    unsigned hour;    \/*0-23*\/', 'action__tagname': 'hour'}, {'word': 'huffmanDecodeSymbol', 'action__pattern': '\M^static unsigned huffmanDecodeSymbol(const unsigned char* in, size_t* bp,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'huffmanDecodeSymbol        @ext/lod..odepng.cpp  static unsigned huffmanDecodeSymbol(const unsigned char* in, size_t* bp,', 'action__tagname': 'huffmanDecodeSymbol'}, {'word': 'humanReadable', 'action__pattern': '\M^bool humanReadable = false;$', 'action__path': 'ext/objective_functions/prog/depthseg/main.cc', 'kind': 'jump_list', 'abbr': 'humanReadable              @ext/obj..eg/main.cc  bool humanReadable = false;', 'action__tagname': 'humanReadable'}, {'word': 'ids', 'action__pattern': '\M^      unsigned int ids[NUM_BONES_PER_VERTEX];$', 'action__path': 'modules/gl/include/mesh.h', 'kind': 'jump_list', 'abbr': 'ids                        @modules..ude/mesh.h        unsigned int ids[NUM_BONES_PER_VERTEX];', 'action__tagname': 'ids'}, {'word': 'ignore_adler32', 'action__pattern': '\M^  unsigned ignore_adler32; /*if 1, continue and don''t give an error message if the Adler32 checksum is corrupted*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'ignore_adler32             @ext/lod../lodepng.h    unsigned ignore_adler32; \/*if 1, continue and don''t give an error message if the Adler32 checksum is corrupted*\/', 'action__tagname': 'ignore_adler32'}, {'word': 'ignore_crc', 'action__pattern': '\M^  unsigned ignore_crc; /*ignore CRC checksums*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'ignore_crc                 @ext/lod../lodepng.h    unsigned ignore_crc; \/*ignore CRC checksums*\/', 'action__tagname': 'ignore_crc'}, {'word': 'image', 'action__pattern': '\M^cv::Mat image;$', 'action__path': 'ext/objective_functions/prog/showedge/main.cc', 'kind': 'jump_list', 'abbr': 'image                      @ext/obj..ge/main.cc  cv::Mat image;', 'action__tagname': 'image'}, {'word': 'imageDir', 'action__pattern': '\M^      std::string configFile, meshFile, imageDir, inputPose, outputPose;$', 'action__path': 'apps/pose_creator/include/pose_creator_options.h', 'kind': 'jump_list', 'abbr': 'imageDir                   @apps/po.._options.h        std::string configFile, meshFile, imageDir, inputPose, outputPose;', 'action__tagname': 'imageDir'}, {'word': 'imageDir', 'action__pattern': '\M^char *imageDir = nullptr;$', 'action__path': 'ext/objective_functions/prog/colour-detect/main.cc', 'kind': 'jump_list', 'abbr': 'imageDir                   @ext/obj..ct/main.cc  char *imageDir = nullptr;', 'action__tagname': 'imageDir'}, {'word': 'imageFilename', 'action__pattern': '\M^std::vector<std::string> imageFilename;$', 'action__path': 'ext/objective_functions/prog/segimage/main.cc', 'kind': 'jump_list', 'abbr': 'imageFilename              @ext/obj..ge/main.cc  std::vector<std::string> imageFilename;', 'action__tagname': 'imageFilename'}, {'word': 'imageFiles', 'action__pattern': '\M^std::vector<std::string> imageFiles;$', 'action__path': 'ext/objective_functions/prog/depthseg/main.cc', 'kind': 'jump_list', 'abbr': 'imageFiles                 @ext/obj..eg/main.cc  std::vector<std::string> imageFiles;', 'action__tagname': 'imageFiles'}, {'word': 'imageFiles', 'action__pattern': '\M^std::vector<std::string> imageFiles;$', 'action__path': 'ext/objective_functions/prog/erolation/main.cc', 'kind': 'jump_list', 'abbr': 'imageFiles                 @ext/obj..on/main.cc  std::vector<std::string> imageFiles;', 'action__tagname': 'imageFiles'}, {'word': 'imageNames', 'action__pattern': '\M^std::vector<std::string> imageNames;$', 'action__path': 'ext/objective_functions/prog/showedge/main.cc', 'kind': 'jump_list', 'abbr': 'imageNames                 @ext/obj..ge/main.cc  std::vector<std::string> imageNames;', 'action__tagname': 'imageNames'}, {'word': 'images', 'action__pattern': '\M^      std::vector<std::vector<std::string>> images;$', 'action__path': 'apps/pose_viewer/include/pose_viewer_options.h', 'kind': 'jump_list', 'abbr': 'images                     @apps/po.._options.h        std::vector<std::vector<std::string>> images;', 'action__tagname': 'images'}, {'word': 'importer', 'action__pattern': '\M^    Assimp::Importer importer;$', 'action__path': 'modules/io/include/mesh_reader.h', 'kind': 'jump_list', 'abbr': 'importer                   @modules..h_reader.h      Assimp::Importer importer;', 'action__tagname': 'importer'}, {'word': 'index', 'action__pattern': '\M^  int index; /*the payload. Only has a meaningful value if this is in the last level*/$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'index                      @ext/lod..odepng.cpp    int index; \/*the payload. Only has a meaningful value if this is in the last level*\/', 'action__tagname': 'index'}, {'word': 'indexBuffer', 'action__pattern': '\M^    const unsigned int indexBuffer = 0;$', 'action__path': 'modules/gl/include/instanced_mesh_renderer.h', 'kind': 'jump_list', 'abbr': 'indexBuffer                @modules..renderer.h      const unsigned int indexBuffer = 0;', 'action__tagname': 'indexBuffer'}, {'word': 'indexBuffer', 'action__pattern': '\M^    const unsigned int indexBuffer = 0;$', 'action__path': 'modules/gl/include/instanced_shape_renderer.h', 'kind': 'jump_list', 'abbr': 'indexBuffer                @modules..renderer.h      const unsigned int indexBuffer = 0;', 'action__tagname': 'indexBuffer'}, {'word': 'indexBuffer', 'action__pattern': '\M^    const unsigned int indexBuffer = 0;$', 'action__path': 'modules/gl/include/mesh_renderer.h', 'kind': 'jump_list', 'abbr': 'indexBuffer                @modules..renderer.h      const unsigned int indexBuffer = 0;', 'action__tagname': 'indexBuffer'}, {'word': 'indexBuffer', 'action__pattern': '\M^    const unsigned int indexBuffer = 0;$', 'action__path': 'modules/gl/include/shape_renderer.h', 'kind': 'jump_list', 'abbr': 'indexBuffer                @modules..renderer.h      const unsigned int indexBuffer = 0;', 'action__tagname': 'indexBuffer'}, {'word': 'indices', 'action__pattern': '\M^    std::vector<unsigned int> indices;$', 'action__path': 'modules/gl/include/gl_sphere.h', 'kind': 'jump_list', 'abbr': 'indices                    @modules..l_sphere.h      std::vector<unsigned int> indices;', 'action__tagname': 'indices'}, {'word': 'indices', 'action__pattern': '\M^    std::vector<unsigned int> indices;$', 'action__path': 'modules/gl/include/mesh.h', 'kind': 'jump_list', 'abbr': 'indices                    @modules..ude/mesh.h      std::vector<unsigned int> indices;', 'action__tagname': 'indices'}, {'word': 'indices', 'action__pattern': '\M^    std::vector<unsigned int> indices;$', 'action__path': 'modules/gl/include/prism.h', 'kind': 'jump_list', 'abbr': 'indices                    @modules..de/prism.h      std::vector<unsigned int> indices;', 'action__tagname': 'indices'}, {'word': 'indices', 'action__pattern': '\M^    std::vector<unsigned int> indices;$', 'action__path': 'modules/gl/include/surface.h', 'kind': 'jump_list', 'abbr': 'indices                    @modules../surface.h      std::vector<unsigned int> indices;', 'action__tagname': 'indices'}, {'word': 'inflate', 'action__pattern': '\M^static unsigned inflate(unsigned char** out, size_t* outsize,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'inflate                    @ext/lod..odepng.cpp  static unsigned inflate(unsigned char** out, size_t* outsize,', 'action__tagname': 'inflate'}, {'word': 'inflateHuffmanBlock', 'action__pattern': '\M^static unsigned inflateHuffmanBlock(ucvector* out, const unsigned char* in, size_t* bp,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'inflateHuffmanBlock        @ext/lod..odepng.cpp  static unsigned inflateHuffmanBlock(ucvector* out, const unsigned char* in, size_t* bp,', 'action__tagname': 'inflateHuffmanBlock'}, {'word': 'inflateNoCompression', 'action__pattern': '\M^static unsigned inflateNoCompression(ucvector* out, const unsigned char* in, size_t* bp, size_t* pos, size_t inlength)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'inflateNoCompression       @ext/lod..odepng.cpp  static unsigned inflateNoCompression(ucvector* out, const unsigned char* in, size_t* bp, size_t* pos, size_t inlength)', 'action__tagname': 'inflateNoCompression'}, {'word': 'info_arch', 'action__pattern': '\M^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'kind': 'jump_list', 'abbr': 'info_arch                  @build/C..mpilerId.c  char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";', 'action__tagname': 'info_arch'}, {'word': 'info_arch', 'action__pattern': '\M^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'kind': 'jump_list', 'abbr': 'info_arch                  @build/C..ilerId.cpp  char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";', 'action__tagname': 'info_arch'}, {'word': 'info_arch', 'action__pattern': '\M^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'kind': 'jump_list', 'abbr': 'info_arch                  @ext/obj..mpilerId.c  char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";', 'action__tagname': 'info_arch'}, {'word': 'info_arch', 'action__pattern': '\M^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'kind': 'jump_list', 'abbr': 'info_arch                  @ext/obj..ilerId.cpp  char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";', 'action__tagname': 'info_arch'}, {'word': 'info_compiler', 'action__pattern': '\M^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'kind': 'jump_list', 'abbr': 'info_compiler              @build/C..mpilerId.c  char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";', 'action__tagname': 'info_compiler'}, {'word': 'info_compiler', 'action__pattern': '\M^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'kind': 'jump_list', 'abbr': 'info_compiler              @build/C..ilerId.cpp  char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";', 'action__tagname': 'info_compiler'}, {'word': 'info_compiler', 'action__pattern': '\M^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'kind': 'jump_list', 'abbr': 'info_compiler              @ext/obj..mpilerId.c  char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";', 'action__tagname': 'info_compiler'}, {'word': 'info_compiler', 'action__pattern': '\M^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'kind': 'jump_list', 'abbr': 'info_compiler              @ext/obj..ilerId.cpp  char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";', 'action__tagname': 'info_compiler'}, {'word': 'info_platform', 'action__pattern': '\M^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'kind': 'jump_list', 'abbr': 'info_platform              @build/C..mpilerId.c  char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";', 'action__tagname': 'info_platform'}, {'word': 'info_platform', 'action__pattern': '\M^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'kind': 'jump_list', 'abbr': 'info_platform              @build/C..ilerId.cpp  char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";', 'action__tagname': 'info_platform'}, {'word': 'info_platform', 'action__pattern': '\M^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'kind': 'jump_list', 'abbr': 'info_platform              @ext/obj..mpilerId.c  char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";', 'action__tagname': 'info_platform'}, {'word': 'info_platform', 'action__pattern': '\M^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'kind': 'jump_list', 'abbr': 'info_platform              @ext/obj..ilerId.cpp  char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";', 'action__tagname': 'info_platform'}, {'word': 'info_png', 'action__pattern': '\M^  LodePNGInfo info_png; /*info of the PNG image obtained after decoding*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'info_png                   @ext/lod../lodepng.h    LodePNGInfo info_png; \/*info of the PNG image obtained after decoding*\/', 'action__tagname': 'info_png'}, {'word': 'info_raw', 'action__pattern': '\M^  LodePNGColorMode info_raw; /*specifies the format in which you would like to get the raw pixel buffer*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'info_raw                   @ext/lod../lodepng.h    LodePNGColorMode info_raw; \/*specifies the format in which you would like to get the raw pixel buffer*\/', 'action__tagname': 'info_raw'}, {'word': 'info_version', 'action__pattern': '\M^char const info_version[] = {$', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'kind': 'jump_list', 'abbr': 'info_version               @build/C..mpilerId.c  char const info_version[] = {', 'action__tagname': 'info_version'}, {'word': 'info_version', 'action__pattern': '\M^char const info_version[] = {$', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'kind': 'jump_list', 'abbr': 'info_version               @build/C..ilerId.cpp  char const info_version[] = {', 'action__tagname': 'info_version'}, {'word': 'info_version', 'action__pattern': '\M^char const info_version[] = {$', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'kind': 'jump_list', 'abbr': 'info_version               @ext/obj..mpilerId.c  char const info_version[] = {', 'action__tagname': 'info_version'}, {'word': 'info_version', 'action__pattern': '\M^char const info_version[] = {$', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'kind': 'jump_list', 'abbr': 'info_version               @ext/obj..ilerId.cpp  char const info_version[] = {', 'action__tagname': 'info_version'}, {'word': 'init', 'action__pattern': '\M^      void init() {$', 'action__path': 'apps/particle_swarm_demo/src/main.cc', 'kind': 'jump_list', 'abbr': 'init                       @apps/pa..rc/main.cc        void init() {', 'action__tagname': 'init'}, {'word': 'init', 'action__pattern': '\M^void InstancedShapeRenderer<Shape>::init(const Shape& s) {$', 'action__path': 'modules/gl/include/instanced_shape_renderer.h', 'kind': 'jump_list', 'abbr': 'init                       @modules..renderer.h  void InstancedShapeRenderer<Shape>::init(const Shape& s) {', 'action__tagname': 'init'}, {'word': 'init', 'action__pattern': '\M^void GLSphere::init(double radius, unsigned int rings, unsigned int slices) {$', 'action__path': 'modules/gl/src/gl_sphere.cc', 'kind': 'jump_list', 'abbr': 'init                       @modules.._sphere.cc  void GLSphere::init(double radius, unsigned int rings, unsigned int slices) {', 'action__tagname': 'init'}, {'word': 'init', 'action__pattern': '\M^void InstancedMeshRenderer::init(const Mesh& m) {$', 'action__path': 'modules/gl/src/instanced_mesh_renderer.cc', 'kind': 'jump_list', 'abbr': 'init                       @modules..enderer.cc  void InstancedMeshRenderer::init(const Mesh& m) {', 'action__tagname': 'init'}, {'word': 'init', 'action__pattern': '\M^void MeshRenderer::init(const Mesh& m) {$', 'action__path': 'modules/gl/src/mesh_renderer.cc', 'kind': 'jump_list', 'abbr': 'init                       @modules..enderer.cc  void MeshRenderer::init(const Mesh& m) {', 'action__tagname': 'init'}, {'word': 'init', 'action__pattern': '\M^void Prism::init(double radius, double height, unsigned int sides) {$', 'action__path': 'modules/gl/src/prism.cc', 'kind': 'jump_list', 'abbr': 'init                       @modules..c/prism.cc  void Prism::init(double radius, double height, unsigned int sides) {', 'action__tagname': 'init'}, {'word': 'init', 'action__pattern': '\M^void ShapeRenderer<Shape>::init(const Shape& s) {$', 'action__path': 'modules/gl/src/shape_renderer.cc', 'kind': 'jump_list', 'abbr': 'init                       @modules..enderer.cc  void ShapeRenderer<Shape>::init(const Shape& s) {', 'action__tagname': 'init'}, {'word': 'init', 'action__pattern': '\M^void Surface::init(unsigned int rows, unsigned int cols,$', 'action__path': 'modules/gl/src/surface.cc', 'kind': 'jump_list', 'abbr': 'init                       @modules..surface.cc  void Surface::init(unsigned int rows, unsigned int cols,', 'action__tagname': 'init'}, {'word': 'init', 'action__pattern': '\M^void Texture::init(const std::string& filename, unsigned int type) {$', 'action__path': 'modules/gl/src/texture.cc', 'kind': 'jump_list', 'abbr': 'init                       @modules..texture.cc  void Texture::init(const std::string& filename, unsigned int type) {', 'action__tagname': 'init'}, {'word': 'initBones', 'action__pattern': '\M^void Mesh::initBones(unsigned int meshIndex,$', 'action__path': 'modules/gl/src/mesh.cc', 'kind': 'jump_list', 'abbr': 'initBones                  @modules..rc/mesh.cc  void Mesh::initBones(unsigned int meshIndex,', 'action__tagname': 'initBones'}, {'word': 'initBuffers', 'action__pattern': '\M^void BackgroundDrawer::initBuffers() {$', 'action__path': 'modules/gl/src/background_drawer.cc', 'kind': 'jump_list', 'abbr': 'initBuffers                @modules.._drawer.cc  void BackgroundDrawer::initBuffers() {', 'action__tagname': 'initBuffers'}, {'word': 'initEmpty', 'action__pattern': '\M^void Texture::initEmpty(core::ImageType type,$', 'action__path': 'modules/gl/src/texture.cc', 'kind': 'jump_list', 'abbr': 'initEmpty                  @modules..texture.cc  void Texture::initEmpty(core::ImageType type,', 'action__tagname': 'initEmpty'}, {'word': 'initFromScene', 'action__pattern': '\M^void Mesh::initFromScene(const aiScene* scene) {$', 'action__path': 'modules/gl/src/mesh.cc', 'kind': 'jump_list', 'abbr': 'initFromScene              @modules..rc/mesh.cc  void Mesh::initFromScene(const aiScene* scene) {', 'action__tagname': 'initFromScene'}, {'word': 'initMesh', 'action__pattern': '\M^void Mesh::initMesh(unsigned int meshIndex,$', 'action__path': 'modules/gl/src/mesh.cc', 'kind': 'jump_list', 'abbr': 'initMesh                   @modules..rc/mesh.cc  void Mesh::initMesh(unsigned int meshIndex,', 'action__tagname': 'initMesh'}, {'word': 'initOptions', 'action__pattern': '\M^po::options_description initOptions() {$', 'action__path': 'apps/lrt_tester/src/main.cc', 'kind': 'jump_list', 'abbr': 'initOptions                @apps/lr..rc/main.cc  po::options_description initOptions() {', 'action__tagname': 'initOptions'}, {'word': 'initOptions', 'action__pattern': '\M^po::options_description initOptions() {$', 'action__path': 'apps/sph_renderer/src/main.cc', 'kind': 'jump_list', 'abbr': 'initOptions                @apps/sp..rc/main.cc  po::options_description initOptions() {', 'action__tagname': 'initOptions'}, {'word': 'initOptions', 'action__pattern': '\M^po::options_description initOptions() {$', 'action__path': 'apps/sphere_model_maker/src/main.cc', 'kind': 'jump_list', 'abbr': 'initOptions                @apps/sp..rc/main.cc  po::options_description initOptions() {', 'action__tagname': 'initOptions'}, {'word': 'initOptions', 'action__pattern': '\M^po::options_description initOptions() {$', 'action__path': 'apps/sphere_model_optim/src/main.cc', 'kind': 'jump_list', 'abbr': 'initOptions                @apps/sp..rc/main.cc  po::options_description initOptions() {', 'action__tagname': 'initOptions'}, {'word': 'initOptions', 'action__pattern': '\M^po::options_description initOptions() {$', 'action__path': 'apps/sphere_model_renderer/src/main.cc', 'kind': 'jump_list', 'abbr': 'initOptions                @apps/sp..rc/main.cc  po::options_description initOptions() {', 'action__tagname': 'initOptions'}, {'word': 'initOptions', 'action__pattern': '\M^po::options_description initOptions() {$', 'action__path': 'apps/tang_lrf/src/main.cc', 'kind': 'jump_list', 'abbr': 'initOptions                @apps/ta..rc/main.cc  po::options_description initOptions() {', 'action__tagname': 'initOptions'}, {'word': 'init_coins', 'action__pattern': '\M^static void init_coins(Coin* coins, size_t num)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'init_coins                 @ext/lod..odepng.cpp  static void init_coins(Coin* coins, size_t num)', 'action__tagname': 'init_coins'}, {'word': 'initialiseFinger', 'action__pattern': '\M^void QuadricHand::initialiseFinger($', 'action__path': 'modules/gl/src/quadric_hand.cc', 'kind': 'jump_list', 'abbr': 'initialiseFinger           @modules..ic_hand.cc  void QuadricHand::initialiseFinger(', 'action__tagname': 'initialiseFinger'}, {'word': 'initialiseHand', 'action__pattern': '\M^void QuadricHand::initialiseHand(const std::vector<double>& params)$', 'action__path': 'modules/gl/src/quadric_hand.cc', 'kind': 'jump_list', 'abbr': 'initialiseHand             @modules..ic_hand.cc  void QuadricHand::initialiseHand(const std::vector<double>& params)', 'action__tagname': 'initialiseHand'}, {'word': 'initialiseJoint', 'action__pattern': '\M^glm::mat4 QuadricHand::initialiseJoint($', 'action__path': 'modules/gl/src/quadric_hand.cc', 'kind': 'jump_list', 'abbr': 'initialiseJoint            @modules..ic_hand.cc  glm::mat4 QuadricHand::initialiseJoint(', 'action__tagname': 'initialiseJoint'}, {'word': 'initialisePalm', 'action__pattern': '\M^void QuadricHand::initialisePalm(const glm::mat4& start)$', 'action__path': 'modules/gl/src/quadric_hand.cc', 'kind': 'jump_list', 'abbr': 'initialisePalm             @modules..ic_hand.cc  void QuadricHand::initialisePalm(const glm::mat4& start)', 'action__tagname': 'initialisePalm'}, {'word': 'initialiseThumb', 'action__pattern': '\M^void QuadricHand::initialiseThumb($', 'action__path': 'modules/gl/src/quadric_hand.cc', 'kind': 'jump_list', 'abbr': 'initialiseThumb            @modules..ic_hand.cc  void QuadricHand::initialiseThumb(', 'action__tagname': 'initialiseThumb'}, {'word': 'inputDir', 'action__pattern': '\M^      std::string logfile, configFile, meshFile, outputDir, inputDir, poseFile,$', 'action__path': 'apps/bmvc_project/include/bmvc_options.h', 'kind': 'jump_list', 'abbr': 'inputDir                   @apps/bm.._options.h        std::string logfile, configFile, meshFile, outputDir, inputDir, poseFile,', 'action__tagname': 'inputDir'}, {'word': 'inputDir', 'action__pattern': '\M^    std::string inputDir, outputDir;$', 'action__path': 'apps/pose_interpolator/include/pose_interpolator_options.h', 'kind': 'jump_list', 'abbr': 'inputDir                   @apps/po.._options.h      std::string inputDir, outputDir;', 'action__tagname': 'inputDir'}, {'word': 'inputPose', 'action__pattern': '\M^      std::string configFile, meshFile, imageDir, inputPose, outputPose;$', 'action__path': 'apps/pose_creator/include/pose_creator_options.h', 'kind': 'jump_list', 'abbr': 'inputPose                  @apps/po.._options.h        std::string configFile, meshFile, imageDir, inputPose, outputPose;', 'action__tagname': 'inputPose'}, {'word': 'inputPoseFiles', 'action__pattern': '\M^    std::vector<std::string> inputPoseFiles;$', 'action__path': 'apps/pose_interpolator/include/pose_interpolator_options.h', 'kind': 'jump_list', 'abbr': 'inputPoseFiles             @apps/po.._options.h      std::vector<std::string> inputPoseFiles;', 'action__tagname': 'inputPoseFiles'}, {'word': 'intDis', 'action__pattern': '\M^    std::uniform_int_distribution<> intDis;$', 'action__path': 'modules/ml/include/scalar_split_function_factory.h', 'kind': 'jump_list', 'abbr': 'intDis                     @modules.._factory.h      std::uniform_int_distribution<> intDis;', 'action__tagname': 'intDis'}, {'word': 'intDis', 'action__pattern': '\M^    std::uniform_int_distribution<> intDis;$', 'action__path': 'modules/ml/include/split_function_factory.h', 'kind': 'jump_list', 'abbr': 'intDis                     @modules.._factory.h      std::uniform_int_distribution<> intDis;', 'action__tagname': 'intDis'}, {'word': 'intensity', 'action__pattern': '\M^    const static unsigned int intensity = CV_LOAD_IMAGE_GRAYSCALE;$', 'action__path': 'modules/gl/include/texture.h', 'kind': 'jump_list', 'abbr': 'intensity                  @modules../texture.h      const static unsigned int intensity = CV_LOAD_IMAGE_GRAYSCALE;', 'action__tagname': 'intensity'}, {'word': 'interlace_method', 'action__pattern': '\M^  unsigned interlace_method;  /*interlace method of the original file*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'interlace_method           @ext/lod../lodepng.h    unsigned interlace_method;  \/*interlace method of the original file*\/', 'action__tagname': 'interlace_method'}, {'word': 'interpolate', 'action__pattern': '\M^std::vector<Pose<glm::quat>> PoseInterpolator::interpolate($', 'action__path': 'apps/pose_interpolator/src/main.cc', 'kind': 'jump_list', 'abbr': 'interpolate                @apps/po..rc/main.cc  std::vector<Pose<glm::quat>> PoseInterpolator::interpolate(', 'action__tagname': 'interpolate'}, {'word': 'interpolationType', 'action__pattern': '\M^    InterpolationType interpolationType;$', 'action__path': 'apps/pose_interpolator/include/pose_interpolator_options.h', 'kind': 'jump_list', 'abbr': 'interpolationType          @apps/po.._options.h      InterpolationType interpolationType;', 'action__tagname': 'interpolationType'}, {'word': 'io', 'action__pattern': '\M^namespace io {$', 'action__path': 'modules/core/include/sphere_model.h', 'kind': 'jump_list', 'abbr': 'io                         @modules..re_model.h  namespace io {', 'action__tagname': 'io'}, {'word': 'io', 'action__pattern': '\M^namespace io {$', 'action__path': 'modules/io/include/humaneva_pose_reader.h', 'kind': 'jump_list', 'abbr': 'io                         @modules..e_reader.h  namespace io {', 'action__tagname': 'io'}, {'word': 'io', 'action__pattern': '\M^namespace io {$', 'action__path': 'modules/io/include/io.h', 'kind': 'jump_list', 'abbr': 'io                         @modules..clude/io.h  namespace io {', 'action__tagname': 'io'}, {'word': 'io', 'action__pattern': '\M^namespace io {$', 'action__path': 'modules/io/include/json_pose_reader.h', 'kind': 'jump_list', 'abbr': 'io                         @modules..e_reader.h  namespace io {', 'action__tagname': 'io'}, {'word': 'io', 'action__pattern': '\M^namespace io {$', 'action__path': 'modules/io/include/json_pose_writer.h', 'kind': 'jump_list', 'abbr': 'io                         @modules..e_writer.h  namespace io {', 'action__tagname': 'io'}, {'word': 'io', 'action__pattern': '\M^namespace io {$', 'action__path': 'modules/io/include/mesh_reader.h', 'kind': 'jump_list', 'abbr': 'io                         @modules..h_reader.h  namespace io {', 'action__tagname': 'io'}, {'word': 'io', 'action__pattern': '\M^namespace io {$', 'action__path': 'modules/io/include/pose_reader.h', 'kind': 'jump_list', 'abbr': 'io                         @modules..e_reader.h  namespace io {', 'action__tagname': 'io'}, {'word': 'io', 'action__pattern': '\M^namespace io {$', 'action__path': 'modules/io/include/sph_reader.h', 'kind': 'jump_list', 'abbr': 'io                         @modules..h_reader.h  namespace io {', 'action__tagname': 'io'}, {'word': 'io', 'action__pattern': '\M^namespace io {$', 'action__path': 'modules/io/include/sphere_model_reader.h', 'kind': 'jump_list', 'abbr': 'io                         @modules..l_reader.h  namespace io {', 'action__tagname': 'io'}, {'word': 'io', 'action__pattern': '\M^namespace io {$', 'action__path': 'modules/io/include/sphere_model_writer.h', 'kind': 'jump_list', 'abbr': 'io                         @modules..l_writer.h  namespace io {', 'action__tagname': 'io'}, {'word': 'io', 'action__pattern': '\M^namespace io {$', 'action__path': 'modules/io/include/tang_pose_reader.h', 'kind': 'jump_list', 'abbr': 'io                         @modules..e_reader.h  namespace io {', 'action__tagname': 'io'}, {'word': 'io', 'action__pattern': '\M^namespace io {$', 'action__path': 'modules/io/include/wenping_pose_reader.h', 'kind': 'jump_list', 'abbr': 'io                         @modules..e_reader.h  namespace io {', 'action__tagname': 'io'}, {'word': 'io', 'action__pattern': '\M^namespace io {$', 'action__path': 'modules/io/src/humaneva_pose_reader.cc', 'kind': 'jump_list', 'abbr': 'io                         @modules.._reader.cc  namespace io {', 'action__tagname': 'io'}, {'word': 'io', 'action__pattern': '\M^namespace io {$', 'action__path': 'modules/io/src/json_pose_reader.cc', 'kind': 'jump_list', 'abbr': 'io                         @modules.._reader.cc  namespace io {', 'action__tagname': 'io'}, {'word': 'io', 'action__pattern': '\M^namespace io {$', 'action__path': 'modules/io/src/json_pose_writer.cc', 'kind': 'jump_list', 'abbr': 'io                         @modules.._writer.cc  namespace io {', 'action__tagname': 'io'}, {'word': 'io', 'action__pattern': '\M^namespace io {$', 'action__path': 'modules/io/src/sph_reader.cc', 'kind': 'jump_list', 'abbr': 'io                         @modules.._reader.cc  namespace io {', 'action__tagname': 'io'}, {'word': 'io', 'action__pattern': '\M^namespace io {$', 'action__path': 'modules/io/src/sphere_model_reader.cc', 'kind': 'jump_list', 'abbr': 'io                         @modules.._reader.cc  namespace io {', 'action__tagname': 'io'}, {'word': 'io', 'action__pattern': '\M^namespace io {$', 'action__path': 'modules/io/src/sphere_model_writer.cc', 'kind': 'jump_list', 'abbr': 'io                         @modules.._writer.cc  namespace io {', 'action__tagname': 'io'}, {'word': 'io', 'action__pattern': '\M^namespace io {$', 'action__path': 'modules/io/src/tang_pose_reader.cc', 'kind': 'jump_list', 'abbr': 'io                         @modules.._reader.cc  namespace io {', 'action__tagname': 'io'}, {'word': 'io', 'action__pattern': '\M^namespace io {$', 'action__path': 'modules/io/src/wenping_pose_reader.cc', 'kind': 'jump_list', 'abbr': 'io                         @modules.._reader.cc  namespace io {', 'action__tagname': 'io'}, {'word': 'isCompiled', 'action__pattern': '\M^    bool isCompiled() const { return compiled; }$', 'action__path': 'modules/gl/include/shader.h', 'kind': 'jump_list', 'abbr': 'isCompiled                 @modules..e/shader.h      bool isCompiled() const { return compiled; }', 'action__tagname': 'isCompiled'}, {'word': 'isEmpty', 'action__pattern': '\M^    bool isEmpty() const {$', 'action__path': 'modules/gl/include/texture.h', 'kind': 'jump_list', 'abbr': 'isEmpty                    @modules../texture.h      bool isEmpty() const {', 'action__tagname': 'isEmpty'}, {'word': 'isLatentNode', 'action__pattern': '\M^bool LatentTreeNode::isLatentNode() const {$', 'action__path': 'modules/ml/src/latent_tree_node.cc', 'kind': 'jump_list', 'abbr': 'isLatentNode               @modules..ee_node.cc  bool LatentTreeNode::isLatentNode() const {', 'action__tagname': 'isLatentNode'}, {'word': 'isParent', 'action__pattern': '\M^bool Bone::isParent(const std::string& name) const {$', 'action__path': 'modules/core/src/bone.cc', 'kind': 'jump_list', 'abbr': 'isParent                   @modules..rc/bone.cc  bool Bone::isParent(const std::string& name) const {', 'action__tagname': 'isParent'}, {'word': 'isPositive', 'action__pattern': '\M^double ColourDetector::isPositive(std::uint8_t r,$', 'action__path': 'ext/objective_functions/xing/aig/colour_detector.cc', 'kind': 'jump_list', 'abbr': 'isPositive                 @ext/obj..etector.cc  double ColourDetector::isPositive(std::uint8_t r,', 'action__tagname': 'isPositive'}, {'word': 'itext_keys', 'action__pattern': '\M^  char** itext_keys; /*the English keyword of the text chunk (e.g. "Comment")*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'itext_keys                 @ext/lod../lodepng.h    char** itext_keys; \/*the English keyword of the text chunk (e.g. "Comment")*\/', 'action__tagname': 'itext_keys'}, {'word': 'itext_langtags', 'action__pattern': '\M^  char** itext_langtags; /*language tag for this text''s language, ISO/IEC 646 string, e.g. ISO 639 language tag*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'itext_langtags             @ext/lod../lodepng.h    char** itext_langtags; \/*language tag for this text''s language, ISO\/IEC 646 string, e.g. ISO 639 language tag*\/', 'action__tagname': 'itext_langtags'}, {'word': 'itext_num', 'action__pattern': '\M^  size_t itext_num; /*the amount of international texts in this PNG*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'itext_num                  @ext/lod../lodepng.h    size_t itext_num; \/*the amount of international texts in this PNG*\/', 'action__tagname': 'itext_num'}, {'word': 'itext_strings', 'action__pattern': '\M^  char** itext_strings; /*the actual international text - UTF-8 string*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'itext_strings              @ext/lod../lodepng.h    char** itext_strings; \/*the actual international text - UTF-8 string*\/', 'action__tagname': 'itext_strings'}, {'word': 'itext_transkeys', 'action__pattern': '\M^  char** itext_transkeys; /*keyword translated to the international language - UTF-8 string*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'itext_transkeys            @ext/lod../lodepng.h    char** itext_transkeys; \/*keyword translated to the international language - UTF-8 string*\/', 'action__tagname': 'itext_transkeys'}, {'word': 'j', 'action__pattern': '\M^    Joint& operator=(const Joint& j) = default;$', 'action__path': 'modules/core/include/old_joint.h', 'kind': 'jump_list', 'abbr': 'j                          @modules..ld_joint.h      Joint& operator=(const Joint& j) = default;', 'action__tagname': 'j'}, {'word': 'j', 'action__pattern': '\M^    Joint(Joint&& j) = default;$', 'action__path': 'modules/core/include/old_joint.h', 'kind': 'jump_list', 'abbr': 'j                          @modules..ld_joint.h      Joint(Joint&& j) = default;', 'action__tagname': 'j'}, {'word': 'j', 'action__pattern': '\M^    Joint(const Joint& j) = default;$', 'action__path': 'modules/core/include/old_joint.h', 'kind': 'jump_list', 'abbr': 'j                          @modules..ld_joint.h      Joint(const Joint& j) = default;', 'action__tagname': 'j'}, {'word': 'jointList', 'action__pattern': '\M^    std::vector<std::string> jointList;$', 'action__path': 'modules/core/include/old_pose.h', 'kind': 'jump_list', 'abbr': 'jointList                  @modules..old_pose.h      std::vector<std::string> jointList;', 'action__tagname': 'jointList'}, {'word': 'joints', 'action__pattern': '\M^    std::unordered_map<std::string, std::shared_ptr<Joint>> joints;$', 'action__path': 'modules/core/include/old_pose.h', 'kind': 'jump_list', 'abbr': 'joints                     @modules..old_pose.h      std::unordered_map<std::string, std::shared_ptr<Joint>> joints;', 'action__tagname': 'joints'}, {'word': 'joints', 'action__pattern': '\M^    std::vector<std::string> joints;$', 'action__path': 'modules/core/include/pose.h', 'kind': 'jump_list', 'abbr': 'joints                     @modules..ude/pose.h      std::vector<std::string> joints;', 'action__tagname': 'joints'}, {'word': 'jsonGetJoint', 'action__pattern': '\M^glm::quat jsonGetJoint(const Json::Value& node) {$', 'action__path': 'modules/io/src/json_reader_utils.cc', 'kind': 'jump_list', 'abbr': 'jsonGetJoint               @modules..r_utils.cc  glm::quat jsonGetJoint(const Json::Value& node) {', 'action__tagname': 'jsonGetJoint'}, {'word': 'jsonGetJoint', 'action__pattern': '\M^glm::vec3 jsonGetJoint(const Json::Value& node) {$', 'action__path': 'modules/io/src/json_reader_utils.cc', 'kind': 'jump_list', 'abbr': 'jsonGetJoint               @modules..r_utils.cc  glm::vec3 jsonGetJoint(const Json::Value& node) {', 'action__tagname': 'jsonGetJoint'}, {'word': 'jsonGetMatrix', 'action__pattern': '\M^glm::mat4 jsonGetMatrix(const Json::Value& json) {$', 'action__path': 'modules/io/src/json_reader_utils.cc', 'kind': 'jump_list', 'abbr': 'jsonGetMatrix              @modules..r_utils.cc  glm::mat4 jsonGetMatrix(const Json::Value& json) {', 'action__tagname': 'jsonGetMatrix'}, {'word': 'jsonGetPosition', 'action__pattern': '\M^glm::vec3 jsonGetPosition(const Json::Value& json) {$', 'action__path': 'modules/io/src/json_reader_utils.cc', 'kind': 'jump_list', 'abbr': 'jsonGetPosition            @modules..r_utils.cc  glm::vec3 jsonGetPosition(const Json::Value& json) {', 'action__tagname': 'jsonGetPosition'}, {'word': 'jsonGetRotation', 'action__pattern': '\M^glm::quat jsonGetRotation(const Json::Value& json) {$', 'action__path': 'modules/io/src/json_reader_utils.cc', 'kind': 'jump_list', 'abbr': 'jsonGetRotation            @modules..r_utils.cc  glm::quat jsonGetRotation(const Json::Value& json) {', 'action__tagname': 'jsonGetRotation'}, {'word': 'jsonGetSkeleton', 'action__pattern': '\M^core::Skeleton jsonGetSkeleton(const Json::Value& json) {$', 'action__path': 'modules/io/src/json_reader_utils.cc', 'kind': 'jump_list', 'abbr': 'jsonGetSkeleton            @modules..r_utils.cc  core::Skeleton jsonGetSkeleton(const Json::Value& json) {', 'action__tagname': 'jsonGetSkeleton'}, {'word': 'jsonSetJoint', 'action__pattern': '\M^Json::Value jsonSetJoint(const std::string& name,$', 'action__path': 'modules/io/src/json_writer_utils.cc', 'kind': 'jump_list', 'abbr': 'jsonSetJoint               @modules..r_utils.cc  Json::Value jsonSetJoint(const std::string& name,', 'action__tagname': 'jsonSetJoint'}, {'word': 'jsonSetMatrix', 'action__pattern': '\M^Json::Value jsonSetMatrix(const glm::mat4& mat) {$', 'action__path': 'modules/io/src/json_writer_utils.cc', 'kind': 'jump_list', 'abbr': 'jsonSetMatrix              @modules..r_utils.cc  Json::Value jsonSetMatrix(const glm::mat4& mat) {', 'action__tagname': 'jsonSetMatrix'}, {'word': 'jsonSetPosition', 'action__pattern': '\M^Json::Value jsonSetPosition(const glm::vec3& pos) {$', 'action__path': 'modules/io/src/json_writer_utils.cc', 'kind': 'jump_list', 'abbr': 'jsonSetPosition            @modules..r_utils.cc  Json::Value jsonSetPosition(const glm::vec3& pos) {', 'action__tagname': 'jsonSetPosition'}, {'word': 'jsonSetRotation', 'action__pattern': '\M^Json::Value jsonSetRotation(const glm::quat& rot) {$', 'action__path': 'modules/io/src/json_writer_utils.cc', 'kind': 'jump_list', 'abbr': 'jsonSetRotation            @modules..r_utils.cc  Json::Value jsonSetRotation(const glm::quat& rot) {', 'action__tagname': 'jsonSetRotation'}, {'word': 'jsonSetSkeleton', 'action__pattern': '\M^Json::Value jsonSetSkeleton(const core::Skeleton& skeleton) {$', 'action__path': 'modules/io/src/json_writer_utils.cc', 'kind': 'jump_list', 'abbr': 'jsonSetSkeleton            @modules..r_utils.cc  Json::Value jsonSetSkeleton(const core::Skeleton& skeleton) {', 'action__tagname': 'jsonSetSkeleton'}, {'word': 'k', 'action__pattern': '\M^double k(double phi) {$', 'action__path': 'apps/bmvc_project/src/main.cc', 'kind': 'jump_list', 'abbr': 'k                          @apps/bm..rc/main.cc  double k(double phi) {', 'action__tagname': 'k'}, {'word': 'k', 'action__pattern': '\M^double k(double phi) {$', 'action__path': 'apps/particle_swarm_demo/src/main.cc', 'kind': 'jump_list', 'abbr': 'k                          @apps/pa..rc/main.cc  double k(double phi) {', 'action__tagname': 'k'}, {'word': 'k', 'action__pattern': '\M^        double c1, c2, k;$', 'action__path': 'modules/optim/include/particle_swarm.h', 'kind': 'jump_list', 'abbr': 'k                          @modules..le_swarm.h          double c1, c2, k;', 'action__tagname': 'k'}, {'word': 'key', 'action__pattern': '\M^  unsigned char key; /*a color key is required, or more*/$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'key                        @ext/lod..odepng.cpp    unsigned char key; \/*a color key is required, or more*\/', 'action__tagname': 'key'}, {'word': 'keyCallback', 'action__pattern': '\M^void keyCallback(GLFWwindow* window, int key, int scancode,$', 'action__path': 'apps/bmvc_project/src/main.cc', 'kind': 'jump_list', 'abbr': 'keyCallback                @apps/bm..rc/main.cc  void keyCallback(GLFWwindow* window, int key, int scancode,', 'action__tagname': 'keyCallback'}, {'word': 'keyCallback', 'action__pattern': '\M^void keyCallback(GLFWwindow* window, int key, int scancode,$', 'action__path': 'apps/depth_shader_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'keyCallback                @apps/de..rc/main.cc  void keyCallback(GLFWwindow* window, int key, int scancode,', 'action__tagname': 'keyCallback'}, {'word': 'keyCallback', 'action__pattern': '\M^void keyCallback(GLFWwindow* window, int key, int scancode,$', 'action__path': 'apps/edge_shader_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'keyCallback                @apps/ed..rc/main.cc  void keyCallback(GLFWwindow* window, int key, int scancode,', 'action__tagname': 'keyCallback'}, {'word': 'keyCallback', 'action__pattern': '\M^void keyCallback(GLFWwindow* window, int key, int scancode,$', 'action__path': 'apps/gbuffer_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'keyCallback                @apps/gb..rc/main.cc  void keyCallback(GLFWwindow* window, int key, int scancode,', 'action__tagname': 'keyCallback'}, {'word': 'keyCallback', 'action__pattern': '\M^void keyCallback(GLFWwindow* window, int key, int scancode,$', 'action__path': 'apps/multicam_mesh_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'keyCallback                @apps/mu..rc/main.cc  void keyCallback(GLFWwindow* window, int key, int scancode,', 'action__tagname': 'keyCallback'}, {'word': 'keyCallback', 'action__pattern': '\M^void keyCallback(GLFWwindow* window, int key, int scancode,$', 'action__path': 'apps/particle_swarm_demo/src/main.cc', 'kind': 'jump_list', 'abbr': 'keyCallback                @apps/pa..rc/main.cc  void keyCallback(GLFWwindow* window, int key, int scancode,', 'action__tagname': 'keyCallback'}, {'word': 'keyCallback', 'action__pattern': '\M^void keyCallback(GLFWwindow* window, int key, int scancode,$', 'action__path': 'apps/pose_creator/src/main.cc', 'kind': 'jump_list', 'abbr': 'keyCallback                @apps/po..rc/main.cc  void keyCallback(GLFWwindow* window, int key, int scancode,', 'action__tagname': 'keyCallback'}, {'word': 'keyCallback', 'action__pattern': '\M^void keyCallback(GLFWwindow* window, int key, int scancode,$', 'action__path': 'apps/pose_renderer/src/main.cc', 'kind': 'jump_list', 'abbr': 'keyCallback                @apps/po..rc/main.cc  void keyCallback(GLFWwindow* window, int key, int scancode,', 'action__tagname': 'keyCallback'}, {'word': 'keyCallback', 'action__pattern': '\M^void keyCallback(GLFWwindow* window, int key, int scancode,$', 'action__path': 'apps/pose_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'keyCallback                @apps/po..rc/main.cc  void keyCallback(GLFWwindow* window, int key, int scancode,', 'action__tagname': 'keyCallback'}, {'word': 'keyCallback', 'action__pattern': '\M^void keyCallback(GLFWwindow* window, int key, int scancode,$', 'action__path': 'apps/skel_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'keyCallback                @apps/sk..rc/main.cc  void keyCallback(GLFWwindow* window, int key, int scancode,', 'action__tagname': 'keyCallback'}, {'word': 'keyCallback', 'action__pattern': '\M^void keyCallback(GLFWwindow* window, int key, int scancode,$', 'action__path': 'apps/sph_renderer/src/main.cc', 'kind': 'jump_list', 'abbr': 'keyCallback                @apps/sp..rc/main.cc  void keyCallback(GLFWwindow* window, int key, int scancode,', 'action__tagname': 'keyCallback'}, {'word': 'keyCallback', 'action__pattern': '\M^void keyCallback(GLFWwindow* window, int key, int scancode,$', 'action__path': 'apps/sphere_model_optim/src/main.cc', 'kind': 'jump_list', 'abbr': 'keyCallback                @apps/sp..rc/main.cc  void keyCallback(GLFWwindow* window, int key, int scancode,', 'action__tagname': 'keyCallback'}, {'word': 'keyCallback', 'action__pattern': '\M^void keyCallback(GLFWwindow* window, int key, int scancode,$', 'action__path': 'apps/sphere_model_renderer/src/main.cc', 'kind': 'jump_list', 'abbr': 'keyCallback                @apps/sp..rc/main.cc  void keyCallback(GLFWwindow* window, int key, int scancode,', 'action__tagname': 'keyCallback'}, {'word': 'key_b', 'action__pattern': '\M^  unsigned short key_b;$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'key_b                      @ext/lod..odepng.cpp    unsigned short key_b;', 'action__tagname': 'key_b'}, {'word': 'key_b', 'action__pattern': '\M^  unsigned key_b;       /*blue component of color key*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'key_b                      @ext/lod../lodepng.h    unsigned key_b;       \/*blue component of color key*\/', 'action__tagname': 'key_b'}, {'word': 'key_defined', 'action__pattern': '\M^  unsigned key_defined; /*is a transparent color key given? 0 = false, 1 = true*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'key_defined                @ext/lod../lodepng.h    unsigned key_defined; \/*is a transparent color key given? 0 = false, 1 = true*\/', 'action__tagname': 'key_defined'}, {'word': 'key_g', 'action__pattern': '\M^  unsigned short key_g;$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'key_g                      @ext/lod..odepng.cpp    unsigned short key_g;', 'action__tagname': 'key_g'}, {'word': 'key_g', 'action__pattern': '\M^  unsigned key_g;       /*green component of color key*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'key_g                      @ext/lod../lodepng.h    unsigned key_g;       \/*green component of color key*\/', 'action__tagname': 'key_g'}, {'word': 'key_r', 'action__pattern': '\M^  unsigned short key_r; /*these values are always in 16-bit bitdepth in the profile*/$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'key_r                      @ext/lod..odepng.cpp    unsigned short key_r; \/*these values are always in 16-bit bitdepth in the profile*\/', 'action__tagname': 'key_r'}, {'word': 'key_r', 'action__pattern': '\M^  unsigned key_r;       /*red/greyscale component of color key*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'key_r                      @ext/lod../lodepng.h    unsigned key_r;       \/*red\/greyscale component of color key*\/', 'action__tagname': 'key_r'}, {'word': 'kill', 'action__pattern': '\M^void kill(const char message[])$', 'action__path': 'ext/objective_functions/prog/erolation/main.cc', 'kind': 'jump_list', 'abbr': 'kill                       @ext/obj..on/main.cc  void kill(const char message[])', 'action__tagname': 'kill'}, {'word': 'labels', 'action__pattern': '\M^    std::tuple<LabelTypes...> labels;$', 'action__path': 'modules/ml/include/training_data.h', 'kind': 'jump_list', 'abbr': 'labels                     @modules..ing_data.h      std::tuple<LabelTypes...> labels;', 'action__tagname': 'labels'}, {'word': 'lazymatching', 'action__pattern': '\M^  unsigned lazymatching; /*use lazy matching: better compression but a bit slower. Default: true*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'lazymatching               @ext/lod../lodepng.h    unsigned lazymatching; \/*use lazy matching: better compression but a bit slower. Default: true*\/', 'action__tagname': 'lazymatching'}, {'word': 'leaf', 'action__pattern': '\M^    std::vector<glm::vec3> leaf;$', 'action__path': 'modules/ml/include/offset_leaf.h', 'kind': 'jump_list', 'abbr': 'leaf                       @modules..set_leaf.h      std::vector<glm::vec3> leaf;', 'action__tagname': 'leaf'}, {'word': 'leaf', 'action__pattern': '\M^  std::shared_ptr<Leaf> leaf;$', 'action__path': 'modules/ml/include/tree_node.h', 'kind': 'jump_list', 'abbr': 'leaf                       @modules..ree_node.h    std::shared_ptr<Leaf> leaf;', 'action__tagname': 'leaf'}, {'word': 'leafType', 'action__pattern': '\M^    typedef Leaf leafType;$', 'action__path': 'modules/ml/include/leaf_factory.h', 'kind': 'jump_list', 'abbr': 'leafType                   @modules.._factory.h      typedef Leaf leafType;', 'action__tagname': 'leafType'}, {'word': 'left', 'action__pattern': '\M^    std::shared_ptr<LatentTreeNode> left;$', 'action__path': 'modules/ml/include/latent_tree_node.h', 'kind': 'jump_list', 'abbr': 'left                       @modules..ree_node.h      std::shared_ptr<LatentTreeNode> left;', 'action__tagname': 'left'}, {'word': 'left', 'action__pattern': '\M^    std::vector<glm::vec3> left;$', 'action__path': 'modules/ml/include/offset_leaf.h', 'kind': 'jump_list', 'abbr': 'left                       @modules..set_leaf.h      std::vector<glm::vec3> left;', 'action__tagname': 'left'}, {'word': 'left', 'action__pattern': '\M^  std::shared_ptr<TreeNode<Leaf, SplitFunction>> left;$', 'action__path': 'modules/ml/include/tree_node.h', 'kind': 'jump_list', 'abbr': 'left                       @modules..ree_node.h    std::shared_ptr<TreeNode<Leaf, SplitFunction>> left;', 'action__tagname': 'left'}, {'word': 'len', 'action__pattern': '\M^    unsigned int len, current;$', 'action__path': 'modules/ml/include/energy_function_chooser.h', 'kind': 'jump_list', 'abbr': 'len                        @modules.._chooser.h      unsigned int len, current;', 'action__tagname': 'len'}, {'word': 'len', 'action__pattern': '\M^    unsigned int len;$', 'action__path': 'modules/ml/include/energy_function_chooser.h', 'kind': 'jump_list', 'abbr': 'len                        @modules.._chooser.h      unsigned int len;', 'action__tagname': 'len'}, {'word': 'length', 'action__pattern': '\M^    double length;$', 'action__path': 'modules/core/include/old_joint.h', 'kind': 'jump_list', 'abbr': 'length                     @modules..ld_joint.h      double length;', 'action__tagname': 'length'}, {'word': 'lengths', 'action__pattern': '\M^  unsigned* lengths; /*the lengths of the codes of the 1d-tree*/$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lengths                    @ext/lod..odepng.cpp    unsigned* lengths; \/*the lengths of the codes of the 1d-tree*\/', 'action__tagname': 'lengths'}, {'word': 'lengths', 'action__pattern': '\M^    const static double lengths[5];$', 'action__path': 'modules/gl/include/quadric_hand.h', 'kind': 'jump_list', 'abbr': 'lengths                    @modules..ric_hand.h      const static double lengths[5];', 'action__tagname': 'lengths'}, {'word': 'lengths', 'action__pattern': '\M^const double QuadricHand::lengths[] = {39.0, 44.0, 40.0, 29.0, 34.0};$', 'action__path': 'modules/gl/src/quadric_hand.cc', 'kind': 'jump_list', 'abbr': 'lengths                    @modules..ic_hand.cc  const double QuadricHand::lengths[] = {39.0, 44.0, 40.0, 29.0, 34.0};', 'action__tagname': 'lengths'}, {'word': 'linear', 'action__pattern': '\M^      linear = ''l'',$', 'action__path': 'apps/pose_interpolator/include/pose_interpolator_options.h', 'kind': 'jump_list', 'abbr': 'linear                     @apps/po.._options.h        linear = ''l'',', 'action__tagname': 'linear'}, {'word': 'linearInterpolate', 'action__pattern': '\M^std::vector<core::Pose<glm::quat>> linearInterpolate($', 'action__path': 'apps/pose_interpolator/src/main.cc', 'kind': 'jump_list', 'abbr': 'linearInterpolate          @apps/po..rc/main.cc  std::vector<core::Pose<glm::quat>> linearInterpolate(', 'action__tagname': 'linearInterpolate'}, {'word': 'linkProgram', 'action__pattern': '\M^GLuint ShaderProgram::linkProgram(std::vector<Shader>& shaders) {$', 'action__path': 'modules/gl/src/shader_program.cc', 'kind': 'jump_list', 'abbr': 'linkProgram                @modules..program.cc  GLuint ShaderProgram::linkProgram(std::vector<Shader>& shaders) {', 'action__tagname': 'linkProgram'}, {'word': 'load', 'action__pattern': '\M^void load(ColourDetector& model)$', 'action__path': 'ext/objective_functions/prog/colour-detect/main.cc', 'kind': 'jump_list', 'abbr': 'load                       @ext/obj..ct/main.cc  void load(ColourDetector& model)', 'action__tagname': 'load'}, {'word': 'load', 'action__pattern': '\M^void load(Archive & archive, std::shared_ptr<Type> & value, const unsigned int /*version*/)$', 'action__path': 'modules/io/include/shared_ptr_serialisation.h', 'kind': 'jump_list', 'abbr': 'load                       @modules..lisation.h  void load(Archive & archive, std::shared_ptr<Type> & value, const unsigned int \/*version*\/)', 'action__tagname': 'load'}, {'word': 'loadMaterials', 'action__pattern': '\M^void Mesh::loadMaterials(const std::string& filename, const aiScene* scene) {$', 'action__path': 'modules/gl/src/mesh.cc', 'kind': 'jump_list', 'abbr': 'loadMaterials              @modules..rc/mesh.cc  void Mesh::loadMaterials(const std::string& filename, const aiScene* scene) {', 'action__tagname': 'loadMaterials'}, {'word': 'load_file', 'action__pattern': '\M^void load_file(std::vector<unsigned char>& buffer, const std::string& filename)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'load_file                  @ext/lod..odepng.cpp  void load_file(std::vector<unsigned char>& buffer, const std::string& filename)', 'action__tagname': 'load_file'}, {'word': 'lodepng', 'action__pattern': '\M^namespace lodepng$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng                    @ext/lod..odepng.cpp  namespace lodepng', 'action__tagname': 'lodepng'}, {'word': 'lodepng', 'action__pattern': '\M^namespace lodepng$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'lodepng                    @ext/lod../lodepng.h  namespace lodepng', 'action__tagname': 'lodepng'}, {'word': 'lodepng_add32bitInt', 'action__pattern': '\M^static void lodepng_add32bitInt(ucvector* buffer, unsigned value)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_add32bitInt        @ext/lod..odepng.cpp  static void lodepng_add32bitInt(ucvector* buffer, unsigned value)', 'action__tagname': 'lodepng_add32bitInt'}, {'word': 'lodepng_add_itext', 'action__pattern': '\M^unsigned lodepng_add_itext(LodePNGInfo* info, const char* key, const char* langtag,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_add_itext          @ext/lod..odepng.cpp  unsigned lodepng_add_itext(LodePNGInfo* info, const char* key, const char* langtag,', 'action__tagname': 'lodepng_add_itext'}, {'word': 'lodepng_add_text', 'action__pattern': '\M^unsigned lodepng_add_text(LodePNGInfo* info, const char* key, const char* str)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_add_text           @ext/lod..odepng.cpp  unsigned lodepng_add_text(LodePNGInfo* info, const char* key, const char* str)', 'action__tagname': 'lodepng_add_text'}, {'word': 'lodepng_auto_choose_color', 'action__pattern': '\M^unsigned lodepng_auto_choose_color(LodePNGColorMode* mode_out,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_auto_choose_color  @ext/lod..odepng.cpp  unsigned lodepng_auto_choose_color(LodePNGColorMode* mode_out,', 'action__tagname': 'lodepng_auto_choose_color'}, {'word': 'lodepng_can_have_alpha', 'action__pattern': '\M^unsigned lodepng_can_have_alpha(const LodePNGColorMode* info)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_can_have_alpha     @ext/lod..odepng.cpp  unsigned lodepng_can_have_alpha(const LodePNGColorMode* info)', 'action__tagname': 'lodepng_can_have_alpha'}, {'word': 'lodepng_chunk_ancillary', 'action__pattern': '\M^unsigned char lodepng_chunk_ancillary(const unsigned char* chunk)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_chunk_ancillary    @ext/lod..odepng.cpp  unsigned char lodepng_chunk_ancillary(const unsigned char* chunk)', 'action__tagname': 'lodepng_chunk_ancillary'}, {'word': 'lodepng_chunk_append', 'action__pattern': '\M^unsigned lodepng_chunk_append(unsigned char** out, size_t* outlength, const unsigned char* chunk)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_chunk_append       @ext/lod..odepng.cpp  unsigned lodepng_chunk_append(unsigned char** out, size_t* outlength, const unsigned char* chunk)', 'action__tagname': 'lodepng_chunk_append'}, {'word': 'lodepng_chunk_check_crc', 'action__pattern': '\M^unsigned lodepng_chunk_check_crc(const unsigned char* chunk)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_chunk_check_crc    @ext/lod..odepng.cpp  unsigned lodepng_chunk_check_crc(const unsigned char* chunk)', 'action__tagname': 'lodepng_chunk_check_crc'}, {'word': 'lodepng_chunk_create', 'action__pattern': '\M^unsigned lodepng_chunk_create(unsigned char** out, size_t* outlength, unsigned length,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_chunk_create       @ext/lod..odepng.cpp  unsigned lodepng_chunk_create(unsigned char** out, size_t* outlength, unsigned length,', 'action__tagname': 'lodepng_chunk_create'}, {'word': 'lodepng_chunk_data', 'action__pattern': '\M^unsigned char* lodepng_chunk_data(unsigned char* chunk)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_chunk_data         @ext/lod..odepng.cpp  unsigned char* lodepng_chunk_data(unsigned char* chunk)', 'action__tagname': 'lodepng_chunk_data'}, {'word': 'lodepng_chunk_data_const', 'action__pattern': '\M^const unsigned char* lodepng_chunk_data_const(const unsigned char* chunk)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_chunk_data_const   @ext/lod..odepng.cpp  const unsigned char* lodepng_chunk_data_const(const unsigned char* chunk)', 'action__tagname': 'lodepng_chunk_data_const'}, {'word': 'lodepng_chunk_generate_crc', 'action__pattern': '\M^void lodepng_chunk_generate_crc(unsigned char* chunk)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_..nk_generate_crc  @ext/lod..odepng.cpp  void lodepng_chunk_generate_crc(unsigned char* chunk)', 'action__tagname': 'lodepng_chunk_generate_crc'}, {'word': 'lodepng_chunk_length', 'action__pattern': '\M^unsigned lodepng_chunk_length(const unsigned char* chunk)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_chunk_length       @ext/lod..odepng.cpp  unsigned lodepng_chunk_length(const unsigned char* chunk)', 'action__tagname': 'lodepng_chunk_length'}, {'word': 'lodepng_chunk_next', 'action__pattern': '\M^unsigned char* lodepng_chunk_next(unsigned char* chunk)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_chunk_next         @ext/lod..odepng.cpp  unsigned char* lodepng_chunk_next(unsigned char* chunk)', 'action__tagname': 'lodepng_chunk_next'}, {'word': 'lodepng_chunk_next_const', 'action__pattern': '\M^const unsigned char* lodepng_chunk_next_const(const unsigned char* chunk)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_chunk_next_const   @ext/lod..odepng.cpp  const unsigned char* lodepng_chunk_next_const(const unsigned char* chunk)', 'action__tagname': 'lodepng_chunk_next_const'}, {'word': 'lodepng_chunk_private', 'action__pattern': '\M^unsigned char lodepng_chunk_private(const unsigned char* chunk)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_chunk_private      @ext/lod..odepng.cpp  unsigned char lodepng_chunk_private(const unsigned char* chunk)', 'action__tagname': 'lodepng_chunk_private'}, {'word': 'lodepng_chunk_safetocopy', 'action__pattern': '\M^unsigned char lodepng_chunk_safetocopy(const unsigned char* chunk)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_chunk_safetocopy   @ext/lod..odepng.cpp  unsigned char lodepng_chunk_safetocopy(const unsigned char* chunk)', 'action__tagname': 'lodepng_chunk_safetocopy'}, {'word': 'lodepng_chunk_type', 'action__pattern': '\M^void lodepng_chunk_type(char type[5], const unsigned char* chunk)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_chunk_type         @ext/lod..odepng.cpp  void lodepng_chunk_type(char type[5], const unsigned char* chunk)', 'action__tagname': 'lodepng_chunk_type'}, {'word': 'lodepng_chunk_type_equals', 'action__pattern': '\M^unsigned char lodepng_chunk_type_equals(const unsigned char* chunk, const char* type)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_chunk_type_equals  @ext/lod..odepng.cpp  unsigned char lodepng_chunk_type_equals(const unsigned char* chunk, const char* type)', 'action__tagname': 'lodepng_chunk_type_equals'}, {'word': 'lodepng_clear_itext', 'action__pattern': '\M^void lodepng_clear_itext(LodePNGInfo* info)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_clear_itext        @ext/lod..odepng.cpp  void lodepng_clear_itext(LodePNGInfo* info)', 'action__tagname': 'lodepng_clear_itext'}, {'word': 'lodepng_clear_text', 'action__pattern': '\M^void lodepng_clear_text(LodePNGInfo* info)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_clear_text         @ext/lod..odepng.cpp  void lodepng_clear_text(LodePNGInfo* info)', 'action__tagname': 'lodepng_clear_text'}, {'word': 'lodepng_color_mode_cleanup', 'action__pattern': '\M^void lodepng_color_mode_cleanup(LodePNGColorMode* info)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_..or_mode_cleanup  @ext/lod..odepng.cpp  void lodepng_color_mode_cleanup(LodePNGColorMode* info)', 'action__tagname': 'lodepng_color_mode_cleanup'}, {'word': 'lodepng_color_mode_copy', 'action__pattern': '\M^unsigned lodepng_color_mode_copy(LodePNGColorMode* dest, const LodePNGColorMode* source)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_color_mode_copy    @ext/lod..odepng.cpp  unsigned lodepng_color_mode_copy(LodePNGColorMode* dest, const LodePNGColorMode* source)', 'action__tagname': 'lodepng_color_mode_copy'}, {'word': 'lodepng_color_mode_equal', 'action__pattern': '\M^static int lodepng_color_mode_equal(const LodePNGColorMode* a, const LodePNGColorMode* b)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_color_mode_equal   @ext/lod..odepng.cpp  static int lodepng_color_mode_equal(const LodePNGColorMode* a, const LodePNGColorMode* b)', 'action__tagname': 'lodepng_color_mode_equal'}, {'word': 'lodepng_color_mode_init', 'action__pattern': '\M^void lodepng_color_mode_init(LodePNGColorMode* info)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_color_mode_init    @ext/lod..odepng.cpp  void lodepng_color_mode_init(LodePNGColorMode* info)', 'action__tagname': 'lodepng_color_mode_init'}, {'word': 'lodepng_compress_settings_init', 'action__pattern': '\M^void lodepng_compress_settings_init(LodePNGCompressSettings* settings)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_..s_settings_init  @ext/lod..odepng.cpp  void lodepng_compress_settings_init(LodePNGCompressSettings* settings)', 'action__tagname': 'lodepng_compress_settings_init'}, {'word': 'lodepng_convert', 'action__pattern': '\M^unsigned lodepng_convert(unsigned char* out, const unsigned char* in,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_convert            @ext/lod..odepng.cpp  unsigned lodepng_convert(unsigned char* out, const unsigned char* in,', 'action__tagname': 'lodepng_convert'}, {'word': 'lodepng_crc32', 'action__pattern': '\M^unsigned lodepng_crc32(const unsigned char* buf, size_t len)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_crc32              @ext/lod..odepng.cpp  unsigned lodepng_crc32(const unsigned char* buf, size_t len)', 'action__tagname': 'lodepng_crc32'}, {'word': 'lodepng_crc32_table', 'action__pattern': '\M^static unsigned lodepng_crc32_table[256] = {$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_crc32_table        @ext/lod..odepng.cpp  static unsigned lodepng_crc32_table[256] = {', 'action__tagname': 'lodepng_crc32_table'}, {'word': 'lodepng_decode', 'action__pattern': '\M^unsigned lodepng_decode(unsigned char** out, unsigned* w, unsigned* h,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_decode             @ext/lod..odepng.cpp  unsigned lodepng_decode(unsigned char** out, unsigned* w, unsigned* h,', 'action__tagname': 'lodepng_decode'}, {'word': 'lodepng_decode24', 'action__pattern': '\M^unsigned lodepng_decode24(unsigned char** out, unsigned* w, unsigned* h, const unsigned char* in, size_t insize)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_decode24           @ext/lod..odepng.cpp  unsigned lodepng_decode24(unsigned char** out, unsigned* w, unsigned* h, const unsigned char* in, size_t insize)', 'action__tagname': 'lodepng_decode24'}, {'word': 'lodepng_decode24_file', 'action__pattern': '\M^unsigned lodepng_decode24_file(unsigned char** out, unsigned* w, unsigned* h, const char* filename)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_decode24_file      @ext/lod..odepng.cpp  unsigned lodepng_decode24_file(unsigned char** out, unsigned* w, unsigned* h, const char* filename)', 'action__tagname': 'lodepng_decode24_file'}, {'word': 'lodepng_decode32', 'action__pattern': '\M^unsigned lodepng_decode32(unsigned char** out, unsigned* w, unsigned* h, const unsigned char* in, size_t insize)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_decode32           @ext/lod..odepng.cpp  unsigned lodepng_decode32(unsigned char** out, unsigned* w, unsigned* h, const unsigned char* in, size_t insize)', 'action__tagname': 'lodepng_decode32'}, {'word': 'lodepng_decode32_file', 'action__pattern': '\M^unsigned lodepng_decode32_file(unsigned char** out, unsigned* w, unsigned* h, const char* filename)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_decode32_file      @ext/lod..odepng.cpp  unsigned lodepng_decode32_file(unsigned char** out, unsigned* w, unsigned* h, const char* filename)', 'action__tagname': 'lodepng_decode32_file'}, {'word': 'lodepng_decode_file', 'action__pattern': '\M^unsigned lodepng_decode_file(unsigned char** out, unsigned* w, unsigned* h, const char* filename,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_decode_file        @ext/lod..odepng.cpp  unsigned lodepng_decode_file(unsigned char** out, unsigned* w, unsigned* h, const char* filename,', 'action__tagname': 'lodepng_decode_file'}, {'word': 'lodepng_decode_memory', 'action__pattern': '\M^unsigned lodepng_decode_memory(unsigned char** out, unsigned* w, unsigned* h, const unsigned char* in,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_decode_memory      @ext/lod..odepng.cpp  unsigned lodepng_decode_memory(unsigned char** out, unsigned* w, unsigned* h, const unsigned char* in,', 'action__tagname': 'lodepng_decode_memory'}, {'word': 'lodepng_decoder_settings_init', 'action__pattern': '\M^void lodepng_decoder_settings_init(LodePNGDecoderSettings* settings)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_..r_settings_init  @ext/lod..odepng.cpp  void lodepng_decoder_settings_init(LodePNGDecoderSettings* settings)', 'action__tagname': 'lodepng_decoder_settings_init'}, {'word': 'lodepng_decompress_settings_init', 'action__pattern': '\M^void lodepng_decompress_settings_init(LodePNGDecompressSettings* settings)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_..s_settings_init  @ext/lod..odepng.cpp  void lodepng_decompress_settings_init(LodePNGDecompressSettings* settings)', 'action__tagname': 'lodepng_decompress_settings_init'}, {'word': 'lodepng_default_compress_settings', 'action__pattern': '\M^const LodePNGCompressSettings lodepng_default_compress_settings = {2, 1, DEFAULT_WINDOWSIZE, 3, 128, 1, 0, 0, 0};$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_..mpress_settings  @ext/lod..odepng.cpp  const LodePNGCompressSettings lodepng_default_compress_settings = {2, 1, DEFAULT_WINDOWSIZE, 3, 128, 1, 0, 0, 0};', 'action__tagname': 'lodepng_default_compress_settings'}, {'word': 'lodepng_default_decompress_settings', 'action__pattern': '\M^const LodePNGDecompressSettings lodepng_default_decompress_settings = {0, 0, 0, 0};$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_..mpress_settings  @ext/lod..odepng.cpp  const LodePNGDecompressSettings lodepng_default_decompress_settings = {0, 0, 0, 0};', 'action__tagname': 'lodepng_default_decompress_settings'}, {'word': 'lodepng_deflate', 'action__pattern': '\M^unsigned lodepng_deflate(unsigned char** out, size_t* outsize,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_deflate            @ext/lod..odepng.cpp  unsigned lodepng_deflate(unsigned char** out, size_t* outsize,', 'action__tagname': 'lodepng_deflate'}, {'word': 'lodepng_deflatev', 'action__pattern': '\M^static unsigned lodepng_deflatev(ucvector* out, const unsigned char* in, size_t insize,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_deflatev           @ext/lod..odepng.cpp  static unsigned lodepng_deflatev(ucvector* out, const unsigned char* in, size_t insize,', 'action__tagname': 'lodepng_deflatev'}, {'word': 'lodepng_encode', 'action__pattern': '\M^unsigned lodepng_encode(unsigned char** out, size_t* outsize,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_encode             @ext/lod..odepng.cpp  unsigned lodepng_encode(unsigned char** out, size_t* outsize,', 'action__tagname': 'lodepng_encode'}, {'word': 'lodepng_encode24', 'action__pattern': '\M^unsigned lodepng_encode24(unsigned char** out, size_t* outsize, const unsigned char* image, unsigned w, unsigned h)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_encode24           @ext/lod..odepng.cpp  unsigned lodepng_encode24(unsigned char** out, size_t* outsize, const unsigned char* image, unsigned w, unsigned h)', 'action__tagname': 'lodepng_encode24'}, {'word': 'lodepng_encode24_file', 'action__pattern': '\M^unsigned lodepng_encode24_file(const char* filename, const unsigned char* image, unsigned w, unsigned h)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_encode24_file      @ext/lod..odepng.cpp  unsigned lodepng_encode24_file(const char* filename, const unsigned char* image, unsigned w, unsigned h)', 'action__tagname': 'lodepng_encode24_file'}, {'word': 'lodepng_encode32', 'action__pattern': '\M^unsigned lodepng_encode32(unsigned char** out, size_t* outsize, const unsigned char* image, unsigned w, unsigned h)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_encode32           @ext/lod..odepng.cpp  unsigned lodepng_encode32(unsigned char** out, size_t* outsize, const unsigned char* image, unsigned w, unsigned h)', 'action__tagname': 'lodepng_encode32'}, {'word': 'lodepng_encode32_file', 'action__pattern': '\M^unsigned lodepng_encode32_file(const char* filename, const unsigned char* image, unsigned w, unsigned h)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_encode32_file      @ext/lod..odepng.cpp  unsigned lodepng_encode32_file(const char* filename, const unsigned char* image, unsigned w, unsigned h)', 'action__tagname': 'lodepng_encode32_file'}, {'word': 'lodepng_encode_file', 'action__pattern': '\M^unsigned lodepng_encode_file(const char* filename, const unsigned char* image, unsigned w, unsigned h,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_encode_file        @ext/lod..odepng.cpp  unsigned lodepng_encode_file(const char* filename, const unsigned char* image, unsigned w, unsigned h,', 'action__tagname': 'lodepng_encode_file'}, {'word': 'lodepng_encode_memory', 'action__pattern': '\M^unsigned lodepng_encode_memory(unsigned char** out, size_t* outsize, const unsigned char* image,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_encode_memory      @ext/lod..odepng.cpp  unsigned lodepng_encode_memory(unsigned char** out, size_t* outsize, const unsigned char* image,', 'action__tagname': 'lodepng_encode_memory'}, {'word': 'lodepng_encoder_settings_init', 'action__pattern': '\M^void lodepng_encoder_settings_init(LodePNGEncoderSettings* settings)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_..r_settings_init  @ext/lod..odepng.cpp  void lodepng_encoder_settings_init(LodePNGEncoderSettings* settings)', 'action__tagname': 'lodepng_encoder_settings_init'}, {'word': 'lodepng_error_text', 'action__pattern': '\M^const char* lodepng_error_text(unsigned code)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_error_text         @ext/lod..odepng.cpp  const char* lodepng_error_text(unsigned code)', 'action__tagname': 'lodepng_error_text'}, {'word': 'lodepng_free', 'action__pattern': '\M^static void lodepng_free(void* ptr)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_free               @ext/lod..odepng.cpp  static void lodepng_free(void* ptr)', 'action__tagname': 'lodepng_free'}, {'word': 'lodepng_get_bpp', 'action__pattern': '\M^unsigned lodepng_get_bpp(const LodePNGColorMode* info)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_get_bpp            @ext/lod..odepng.cpp  unsigned lodepng_get_bpp(const LodePNGColorMode* info)', 'action__tagname': 'lodepng_get_bpp'}, {'word': 'lodepng_get_bpp_lct', 'action__pattern': '\M^static unsigned lodepng_get_bpp_lct(LodePNGColorType colortype, unsigned bitdepth)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_get_bpp_lct        @ext/lod..odepng.cpp  static unsigned lodepng_get_bpp_lct(LodePNGColorType colortype, unsigned bitdepth)', 'action__tagname': 'lodepng_get_bpp_lct'}, {'word': 'lodepng_get_channels', 'action__pattern': '\M^unsigned lodepng_get_channels(const LodePNGColorMode* info)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_get_channels       @ext/lod..odepng.cpp  unsigned lodepng_get_channels(const LodePNGColorMode* info)', 'action__tagname': 'lodepng_get_channels'}, {'word': 'lodepng_get_raw_size', 'action__pattern': '\M^size_t lodepng_get_raw_size(unsigned w, unsigned h, const LodePNGColorMode* color)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_get_raw_size       @ext/lod..odepng.cpp  size_t lodepng_get_raw_size(unsigned w, unsigned h, const LodePNGColorMode* color)', 'action__tagname': 'lodepng_get_raw_size'}, {'word': 'lodepng_get_raw_size_lct', 'action__pattern': '\M^size_t lodepng_get_raw_size_lct(unsigned w, unsigned h, LodePNGColorType colortype, unsigned bitdepth)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_get_raw_size_lct   @ext/lod..odepng.cpp  size_t lodepng_get_raw_size_lct(unsigned w, unsigned h, LodePNGColorType colortype, unsigned bitdepth)', 'action__tagname': 'lodepng_get_raw_size_lct'}, {'word': 'lodepng_has_palette_alpha', 'action__pattern': '\M^unsigned lodepng_has_palette_alpha(const LodePNGColorMode* info)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_has_palette_alpha  @ext/lod..odepng.cpp  unsigned lodepng_has_palette_alpha(const LodePNGColorMode* info)', 'action__tagname': 'lodepng_has_palette_alpha'}, {'word': 'lodepng_huffman_code_lengths', 'action__pattern': '\M^unsigned lodepng_huffman_code_lengths(unsigned* lengths, const unsigned* frequencies,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_..an_code_lengths  @ext/lod..odepng.cpp  unsigned lodepng_huffman_code_lengths(unsigned* lengths, const unsigned* frequencies,', 'action__tagname': 'lodepng_huffman_code_lengths'}, {'word': 'lodepng_inflate', 'action__pattern': '\M^unsigned lodepng_inflate(unsigned char** out, size_t* outsize,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_inflate            @ext/lod..odepng.cpp  unsigned lodepng_inflate(unsigned char** out, size_t* outsize,', 'action__tagname': 'lodepng_inflate'}, {'word': 'lodepng_inflatev', 'action__pattern': '\M^static unsigned lodepng_inflatev(ucvector* out,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_inflatev           @ext/lod..odepng.cpp  static unsigned lodepng_inflatev(ucvector* out,', 'action__tagname': 'lodepng_inflatev'}, {'word': 'lodepng_info_cleanup', 'action__pattern': '\M^void lodepng_info_cleanup(LodePNGInfo* info)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_info_cleanup       @ext/lod..odepng.cpp  void lodepng_info_cleanup(LodePNGInfo* info)', 'action__tagname': 'lodepng_info_cleanup'}, {'word': 'lodepng_info_copy', 'action__pattern': '\M^unsigned lodepng_info_copy(LodePNGInfo* dest, const LodePNGInfo* source)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_info_copy          @ext/lod..odepng.cpp  unsigned lodepng_info_copy(LodePNGInfo* dest, const LodePNGInfo* source)', 'action__tagname': 'lodepng_info_copy'}, {'word': 'lodepng_info_init', 'action__pattern': '\M^void lodepng_info_init(LodePNGInfo* info)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_info_init          @ext/lod..odepng.cpp  void lodepng_info_init(LodePNGInfo* info)', 'action__tagname': 'lodepng_info_init'}, {'word': 'lodepng_info_swap', 'action__pattern': '\M^void lodepng_info_swap(LodePNGInfo* a, LodePNGInfo* b)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_info_swap          @ext/lod..odepng.cpp  void lodepng_info_swap(LodePNGInfo* a, LodePNGInfo* b)', 'action__tagname': 'lodepng_info_swap'}, {'word': 'lodepng_inspect', 'action__pattern': '\M^unsigned lodepng_inspect(unsigned* w, unsigned* h, LodePNGState* state,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_inspect            @ext/lod..odepng.cpp  unsigned lodepng_inspect(unsigned* w, unsigned* h, LodePNGState* state,', 'action__tagname': 'lodepng_inspect'}, {'word': 'lodepng_is_alpha_type', 'action__pattern': '\M^unsigned lodepng_is_alpha_type(const LodePNGColorMode* info)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_is_alpha_type      @ext/lod..odepng.cpp  unsigned lodepng_is_alpha_type(const LodePNGColorMode* info)', 'action__tagname': 'lodepng_is_alpha_type'}, {'word': 'lodepng_is_greyscale_type', 'action__pattern': '\M^unsigned lodepng_is_greyscale_type(const LodePNGColorMode* info)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_is_greyscale_type  @ext/lod..odepng.cpp  unsigned lodepng_is_greyscale_type(const LodePNGColorMode* info)', 'action__tagname': 'lodepng_is_greyscale_type'}, {'word': 'lodepng_is_palette_type', 'action__pattern': '\M^unsigned lodepng_is_palette_type(const LodePNGColorMode* info)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_is_palette_type    @ext/lod..odepng.cpp  unsigned lodepng_is_palette_type(const LodePNGColorMode* info)', 'action__tagname': 'lodepng_is_palette_type'}, {'word': 'lodepng_load_file', 'action__pattern': '\M^unsigned lodepng_load_file(unsigned char** out, size_t* outsize, const char* filename)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_load_file          @ext/lod..odepng.cpp  unsigned lodepng_load_file(unsigned char** out, size_t* outsize, const char* filename)', 'action__tagname': 'lodepng_load_file'}, {'word': 'lodepng_malloc', 'action__pattern': '\M^static void* lodepng_malloc(size_t size)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_malloc             @ext/lod..odepng.cpp  static void* lodepng_malloc(size_t size)', 'action__tagname': 'lodepng_malloc'}, {'word': 'lodepng_palette_add', 'action__pattern': '\M^unsigned lodepng_palette_add(LodePNGColorMode* info,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_palette_add        @ext/lod..odepng.cpp  unsigned lodepng_palette_add(LodePNGColorMode* info,', 'action__tagname': 'lodepng_palette_add'}, {'word': 'lodepng_palette_clear', 'action__pattern': '\M^void lodepng_palette_clear(LodePNGColorMode* info)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_palette_clear      @ext/lod..odepng.cpp  void lodepng_palette_clear(LodePNGColorMode* info)', 'action__tagname': 'lodepng_palette_clear'}, {'word': 'lodepng_read32bitInt', 'action__pattern': '\M^unsigned lodepng_read32bitInt(const unsigned char* buffer)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_read32bitInt       @ext/lod..odepng.cpp  unsigned lodepng_read32bitInt(const unsigned char* buffer)', 'action__tagname': 'lodepng_read32bitInt'}, {'word': 'lodepng_realloc', 'action__pattern': '\M^static void* lodepng_realloc(void* ptr, size_t new_size)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_realloc            @ext/lod..odepng.cpp  static void* lodepng_realloc(void* ptr, size_t new_size)', 'action__tagname': 'lodepng_realloc'}, {'word': 'lodepng_save_file', 'action__pattern': '\M^unsigned lodepng_save_file(const unsigned char* buffer, size_t buffersize, const char* filename)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_save_file          @ext/lod..odepng.cpp  unsigned lodepng_save_file(const unsigned char* buffer, size_t buffersize, const char* filename)', 'action__tagname': 'lodepng_save_file'}, {'word': 'lodepng_set32bitInt', 'action__pattern': '\M^static void lodepng_set32bitInt(unsigned char* buffer, unsigned value)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_set32bitInt        @ext/lod..odepng.cpp  static void lodepng_set32bitInt(unsigned char* buffer, unsigned value)', 'action__tagname': 'lodepng_set32bitInt'}, {'word': 'lodepng_state_cleanup', 'action__pattern': '\M^void lodepng_state_cleanup(LodePNGState* state)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_state_cleanup      @ext/lod..odepng.cpp  void lodepng_state_cleanup(LodePNGState* state)', 'action__tagname': 'lodepng_state_cleanup'}, {'word': 'lodepng_state_copy', 'action__pattern': '\M^void lodepng_state_copy(LodePNGState* dest, const LodePNGState* source)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_state_copy         @ext/lod..odepng.cpp  void lodepng_state_copy(LodePNGState* dest, const LodePNGState* source)', 'action__tagname': 'lodepng_state_copy'}, {'word': 'lodepng_state_init', 'action__pattern': '\M^void lodepng_state_init(LodePNGState* state)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_state_init         @ext/lod..odepng.cpp  void lodepng_state_init(LodePNGState* state)', 'action__tagname': 'lodepng_state_init'}, {'word': 'lodepng_zlib_compress', 'action__pattern': '\M^unsigned lodepng_zlib_compress(unsigned char** out, size_t* outsize, const unsigned char* in,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_zlib_compress      @ext/lod..odepng.cpp  unsigned lodepng_zlib_compress(unsigned char** out, size_t* outsize, const unsigned char* in,', 'action__tagname': 'lodepng_zlib_compress'}, {'word': 'lodepng_zlib_decompress', 'action__pattern': '\M^unsigned lodepng_zlib_decompress(unsigned char** out, size_t* outsize, const unsigned char* in,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'lodepng_zlib_decompress    @ext/lod..odepng.cpp  unsigned lodepng_zlib_decompress(unsigned char** out, size_t* outsize, const unsigned char* in,', 'action__tagname': 'lodepng_zlib_decompress'}, {'word': 'logfile', 'action__pattern': '\M^      std::string logfile, configFile, meshFile, outputDir, inputDir, poseFile,$', 'action__path': 'apps/bmvc_project/include/bmvc_options.h', 'kind': 'jump_list', 'abbr': 'logfile                    @apps/bm.._options.h        std::string logfile, configFile, meshFile, outputDir, inputDir, poseFile,', 'action__tagname': 'logfile'}, {'word': 'ltn', 'action__pattern': '\M^    const LatentTreeNode& ltn;$', 'action__path': 'modules/ml/include/offset_leaf.h', 'kind': 'jump_list', 'abbr': 'ltn                        @modules..set_leaf.h      const LatentTreeNode& ltn;', 'action__tagname': 'ltn'}, {'word': 'main', 'action__pattern': '\M^int main(int argc, char* argv[]) {$', 'action__path': 'apps/34dof_to_json/src/main.cc', 'kind': 'jump_list', 'abbr': 'main                       @apps/34..rc/main.cc  int main(int argc, char* argv[]) {', 'action__tagname': 'main'}, {'word': 'main', 'action__pattern': '\M^int main(int argc, char *argv[]) {$', 'action__path': 'apps/abalone_forest/src/main.cc', 'kind': 'jump_list', 'abbr': 'main                       @apps/ab..rc/main.cc  int main(int argc, char *argv[]) {', 'action__tagname': 'main'}, {'word': 'main', 'action__pattern': '\M^int main(int argc, char* argv[]) {$', 'action__path': 'apps/bmvc_project/src/main.cc', 'kind': 'jump_list', 'abbr': 'main                       @apps/bm..rc/main.cc  int main(int argc, char* argv[]) {', 'action__tagname': 'main'}, {'word': 'main', 'action__pattern': '\M^int main(int argc, char* argv[]) {$', 'action__path': 'apps/compare_poses/src/main.cc', 'kind': 'jump_list', 'abbr': 'main                       @apps/co..rc/main.cc  int main(int argc, char* argv[]) {', 'action__tagname': 'main'}, {'word': 'main', 'action__pattern': '\M^int main(int argc, char* argv[]) {$', 'action__path': 'apps/depth_shader_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'main                       @apps/de..rc/main.cc  int main(int argc, char* argv[]) {', 'action__tagname': 'main'}, {'word': 'main', 'action__pattern': '\M^int main(int argc, char* argv[]) {$', 'action__path': 'apps/edge_shader_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'main                       @apps/ed..rc/main.cc  int main(int argc, char* argv[]) {', 'action__tagname': 'main'}, {'word': 'main', 'action__pattern': '\M^int main(int argc, char* argv[]) {$', 'action__path': 'apps/gbuffer_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'main                       @apps/gb..rc/main.cc  int main(int argc, char* argv[]) {', 'action__tagname': 'main'}, {'word': 'main', 'action__pattern': '\M^int main(int argc, char* argv[]) {$', 'action__path': 'apps/lrt_tester/src/main.cc', 'kind': 'jump_list', 'abbr': 'main                       @apps/lr..rc/main.cc  int main(int argc, char* argv[]) {', 'action__tagname': 'main'}, {'word': 'main', 'action__pattern': '\M^int main(int argc, char* argv[]) {$', 'action__path': 'apps/multicam_mesh_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'main                       @apps/mu..rc/main.cc  int main(int argc, char* argv[]) {', 'action__tagname': 'main'}, {'word': 'main', 'action__pattern': '\M^int main(int argc, char** argv)$', 'action__path': 'apps/particle_swarm_demo/src/main.cc', 'kind': 'jump_list', 'abbr': 'main                       @apps/pa..rc/main.cc  int main(int argc, char** argv)', 'action__tagname': 'main'}, {'word': 'main', 'action__pattern': '\M^int main(int argc, char* argv[]) {$', 'action__path': 'apps/pose_creator/src/main.cc', 'kind': 'jump_list', 'abbr': 'main                       @apps/po..rc/main.cc  int main(int argc, char* argv[]) {', 'action__tagname': 'main'}, {'word': 'main', 'action__pattern': '\M^int main(int argc, char* argv[]) {$', 'action__path': 'apps/pose_interpolator/src/main.cc', 'kind': 'jump_list', 'abbr': 'main                       @apps/po..rc/main.cc  int main(int argc, char* argv[]) {', 'action__tagname': 'main'}, {'word': 'main', 'action__pattern': '\M^int main(int argc, char* argv[])$', 'action__path': 'apps/pose_renderer/src/main.cc', 'kind': 'jump_list', 'abbr': 'main                       @apps/po..rc/main.cc  int main(int argc, char* argv[])', 'action__tagname': 'main'}, {'word': 'main', 'action__pattern': '\M^int main(int argc, char* argv[]) {$', 'action__path': 'apps/pose_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'main                       @apps/po..rc/main.cc  int main(int argc, char* argv[]) {', 'action__tagname': 'main'}, {'word': 'main', 'action__pattern': '\M^int main(int argc, char** argv)$', 'action__path': 'apps/skel_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'main                       @apps/sk..rc/main.cc  int main(int argc, char** argv)', 'action__tagname': 'main'}, {'word': 'main', 'action__pattern': '\M^int main(int argc, char* argv[]) {$', 'action__path': 'apps/sph_renderer/src/main.cc', 'kind': 'jump_list', 'abbr': 'main                       @apps/sp..rc/main.cc  int main(int argc, char* argv[]) {', 'action__tagname': 'main'}, {'word': 'main', 'action__pattern': '\M^int main(int argc, char* argv[]) {$', 'action__path': 'apps/sphere_model_maker/src/main.cc', 'kind': 'jump_list', 'abbr': 'main                       @apps/sp..rc/main.cc  int main(int argc, char* argv[]) {', 'action__tagname': 'main'}, {'word': 'main', 'action__pattern': '\M^int main(int argc, char* argv[]) {$', 'action__path': 'apps/sphere_model_optim/src/main.cc', 'kind': 'jump_list', 'abbr': 'main                       @apps/sp..rc/main.cc  int main(int argc, char* argv[]) {', 'action__tagname': 'main'}, {'word': 'main', 'action__pattern': '\M^int main(int argc, char* argv[]) {$', 'action__path': 'apps/sphere_model_renderer/src/main.cc', 'kind': 'jump_list', 'abbr': 'main                       @apps/sp..rc/main.cc  int main(int argc, char* argv[]) {', 'action__tagname': 'main'}, {'word': 'main', 'action__pattern': '\M^int main(int argc, char* argv[]) {$', 'action__path': 'apps/tang_lrf/src/main.cc', 'kind': 'jump_list', 'abbr': 'main                       @apps/ta..rc/main.cc  int main(int argc, char* argv[]) {', 'action__tagname': 'main'}, {'word': 'main', 'action__pattern': '\M^int main(int argc, char* argv[])$', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'kind': 'jump_list', 'abbr': 'main                       @build/C..mpilerId.c  int main(int argc, char* argv[])', 'action__tagname': 'main'}, {'word': 'main', 'action__pattern': '\M^void main() {}$', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'kind': 'jump_list', 'abbr': 'main                       @build/C..mpilerId.c  void main() {}', 'action__tagname': 'main'}, {'word': 'main', 'action__pattern': '\M^int main(int argc, char* argv[])$', 'action__path': 'build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'kind': 'jump_list', 'abbr': 'main                       @build/C..ilerId.cpp  int main(int argc, char* argv[])', 'action__tagname': 'main'}, {'word': 'main', 'action__pattern': '\M^int main(int argc, char* argv[])$', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'kind': 'jump_list', 'abbr': 'main                       @ext/obj..mpilerId.c  int main(int argc, char* argv[])', 'action__tagname': 'main'}, {'word': 'main', 'action__pattern': '\M^void main() {}$', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c', 'kind': 'jump_list', 'abbr': 'main                       @ext/obj..mpilerId.c  void main() {}', 'action__tagname': 'main'}, {'word': 'main', 'action__pattern': '\M^int main(int argc, char* argv[])$', 'action__path': 'ext/objective_functions/build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp', 'kind': 'jump_list', 'abbr': 'main                       @ext/obj..ilerId.cpp  int main(int argc, char* argv[])', 'action__tagname': 'main'}, {'word': 'main', 'action__pattern': '\M^int main(int argc, char** argv)$', 'action__path': 'ext/objective_functions/prog/colour-detect/main.cc', 'kind': 'jump_list', 'abbr': 'main                       @ext/obj..ct/main.cc  int main(int argc, char** argv)', 'action__tagname': 'main'}, {'word': 'main', 'action__pattern': '\M^int main(int argc, char* argv[])$', 'action__path': 'ext/objective_functions/prog/depthseg/main.cc', 'kind': 'jump_list', 'abbr': 'main                       @ext/obj..eg/main.cc  int main(int argc, char* argv[])', 'action__tagname': 'main'}, {'word': 'main', 'action__pattern': '\M^int main(int argc, char* argv[])$', 'action__path': 'ext/objective_functions/prog/erolation/main.cc', 'kind': 'jump_list', 'abbr': 'main                       @ext/obj..on/main.cc  int main(int argc, char* argv[])', 'action__tagname': 'main'}, {'word': 'main', 'action__pattern': '\M^int main(int argc, char* argv[])$', 'action__path': 'ext/objective_functions/prog/segimage/main.cc', 'kind': 'jump_list', 'abbr': 'main                       @ext/obj..ge/main.cc  int main(int argc, char* argv[])', 'action__tagname': 'main'}, {'word': 'main', 'action__pattern': '\M^int main(int argc, char* argv[])$', 'action__path': 'ext/objective_functions/prog/showedge/main.cc', 'kind': 'jump_list', 'abbr': 'main                       @ext/obj..ge/main.cc  int main(int argc, char* argv[])', 'action__tagname': 'main'}, {'word': 'main', 'action__pattern': '\M^int main(int argc, char *argv[]) {$', 'action__path': 'modules/io/test/test_pose_reader.cc', 'kind': 'jump_list', 'abbr': 'main                       @modules.._reader.cc  int main(int argc, char *argv[]) {', 'action__tagname': 'main'}, {'word': 'main', 'action__pattern': '\M^int main(int argc, char *argv[]) {$', 'action__path': 'modules/io/test/test_pose_writer.cc', 'kind': 'jump_list', 'abbr': 'main                       @modules.._writer.cc  int main(int argc, char *argv[]) {', 'action__tagname': 'main'}, {'word': 'main', 'action__pattern': '\M^int main(int argc, char *argv[]) {$', 'action__path': 'modules/ml/test/discrete_entropy_test.cc', 'kind': 'jump_list', 'abbr': 'main                       @modules..py_test.cc  int main(int argc, char *argv[]) {', 'action__tagname': 'main'}, {'word': 'main', 'action__pattern': '\M^int main(int argc, char *argv[]) {$', 'action__path': 'modules/ml/test/discrete_information_gain_test.cc', 'kind': 'jump_list', 'abbr': 'main                       @modules..in_test.cc  int main(int argc, char *argv[]) {', 'action__tagname': 'main'}, {'word': 'main', 'action__pattern': '\M^int main() {$', 'action__path': 'modules/ml/test/latent_tree_model_test.cc', 'kind': 'jump_list', 'abbr': 'main                       @modules..el_test.cc  int main() {', 'action__tagname': 'main'}, {'word': 'main', 'action__pattern': '\M^int main(int argc, char *argv[]) {$', 'action__path': 'modules/optim/test/test_particle_swarm.cc', 'kind': 'jump_list', 'abbr': 'main                       @modules..e_swarm.cc  int main(int argc, char *argv[]) {', 'action__tagname': 'main'}, {'word': 'main', 'action__pattern': '\M^def main():$', 'action__path': 'scripts/compare_poses.py', 'kind': 'jump_list', 'abbr': 'main                       @scripts..e_poses.py  def main():', 'action__tagname': 'main'}, {'word': 'makeDepth', 'action__pattern': '\M^cv::Mat makeDepth()$', 'action__path': 'ext/objective_functions/test/aig/test_camera_image.cc', 'kind': 'jump_list', 'abbr': 'makeDepth                  @ext/obj..a_image.cc  cv::Mat makeDepth()', 'action__tagname': 'makeDepth'}, {'word': 'makeLatentPose', 'action__pattern': '\M^void makeLatentPose(const ml::LatentTreeNode& node,$', 'action__path': 'apps/tang_lrf/src/main.cc', 'kind': 'jump_list', 'abbr': 'makeLatentPose             @apps/ta..rc/main.cc  void makeLatentPose(const ml::LatentTreeNode& node,', 'action__tagname': 'makeLatentPose'}, {'word': 'makeRGB', 'action__pattern': '\M^cv::Mat makeRGB()$', 'action__path': 'ext/objective_functions/test/aig/test_camera_image.cc', 'kind': 'jump_list', 'abbr': 'makeRGB                    @ext/obj..a_image.cc  cv::Mat makeRGB()', 'action__tagname': 'makeRGB'}, {'word': 'makeSphereModel', 'action__pattern': '\M^core::SphereModel makeSphereModel($', 'action__path': 'modules/gl/src/sphere_model_maker.cc', 'kind': 'jump_list', 'abbr': 'makeSphereModel            @modules..l_maker.cc  core::SphereModel makeSphereModel(', 'action__tagname': 'makeSphereModel'}, {'word': 'makeTangLTM', 'action__pattern': '\M^LatentTreeModel makeTangLTM() {$', 'action__path': 'modules/ml/src/latent_tree_model.cc', 'kind': 'jump_list', 'abbr': 'makeTangLTM                @modules..e_model.cc  LatentTreeModel makeTangLTM() {', 'action__tagname': 'makeTangLTM'}, {'word': 'makeTrainingData', 'action__pattern': '\M^TrainingData<DataType, LabelTypes...> makeTrainingData($', 'action__path': 'modules/ml/include/training_data.h', 'kind': 'jump_list', 'abbr': 'makeTrainingData           @modules..ing_data.h  TrainingData<DataType, LabelTypes...> makeTrainingData(', 'action__tagname': 'makeTrainingData'}, {'word': 'make_function', 'action__pattern': '\M^std::function<T> make_function(T* t) {$', 'action__path': 'modules/ml/include/energy_function_chooser.h', 'kind': 'jump_list', 'abbr': 'make_function              @modules.._chooser.h  std::function<T> make_function(T* t) {', 'action__tagname': 'make_function'}, {'word': 'mask', 'action__pattern': '\M^  mask          = CV_8UC1$', 'action__path': 'modules/core/include/image.h', 'kind': 'jump_list', 'abbr': 'mask                       @modules..de/image.h    mask          = CV_8UC1', 'action__tagname': 'mask'}, {'word': 'maskDir', 'action__pattern': '\M^char *maskDir = nullptr;$', 'action__path': 'ext/objective_functions/prog/colour-detect/main.cc', 'kind': 'jump_list', 'abbr': 'maskDir                    @ext/obj..ct/main.cc  char *maskDir = nullptr;', 'action__tagname': 'maskDir'}, {'word': 'maskDir', 'action__pattern': '\M^std::string maskDir;$', 'action__path': 'ext/objective_functions/prog/segimage/main.cc', 'kind': 'jump_list', 'abbr': 'maskDir                    @ext/obj..ge/main.cc  std::string maskDir;', 'action__tagname': 'maskDir'}, {'word': 'maskedImages', 'action__pattern': '\M^    std::vector<cv::Mat> maskedImages;$', 'action__path': 'apps/bmvc_project/src/main.cc', 'kind': 'jump_list', 'abbr': 'maskedImages               @apps/bm..rc/main.cc      std::vector<cv::Mat> maskedImages;', 'action__tagname': 'maskedImages'}, {'word': 'matToTexture', 'action__pattern': '\M^void Texture::matToTexture(const cv::Mat& mat)$', 'action__path': 'modules/gl/src/texture.cc', 'kind': 'jump_list', 'abbr': 'matToTexture               @modules..texture.cc  void Texture::matToTexture(const cv::Mat& mat)', 'action__tagname': 'matToTexture'}, {'word': 'materialIndex', 'action__pattern': '\M^      unsigned int materialIndex;$', 'action__path': 'modules/gl/include/mesh.h', 'kind': 'jump_list', 'abbr': 'materialIndex              @modules..ude/mesh.h        unsigned int materialIndex;', 'action__tagname': 'materialIndex'}, {'word': 'math', 'action__pattern': '\M^namespace math {$', 'action__path': 'modules/core/include/mymath.h', 'kind': 'jump_list', 'abbr': 'math                       @modules..e/mymath.h  namespace math {', 'action__tagname': 'math'}, {'word': 'matrices', 'action__pattern': '\M^    std::map<std::string, glm::mat4> matrices;$', 'action__path': 'modules/core/include/pose.h', 'kind': 'jump_list', 'abbr': 'matrices                   @modules..ude/pose.h      std::map<std::string, glm::mat4> matrices;', 'action__tagname': 'matrices'}, {'word': 'max', 'action__pattern': '\M^    unsigned int max;$', 'action__path': 'modules/core/include/histogram2d.h', 'kind': 'jump_list', 'abbr': 'max                        @modules..togram2d.h      unsigned int max;', 'action__tagname': 'max'}, {'word': 'maxDistance_', 'action__pattern': '\M^    double maxDistance_;$', 'action__path': 'ext/objective_functions/xing/aig/depth_overlap_evaluator.hpp', 'kind': 'jump_list', 'abbr': 'maxDistance_               @ext/obj..luator.hpp      double maxDistance_;', 'action__tagname': 'maxDistance_'}, {'word': 'maxbitlen', 'action__pattern': '\M^  unsigned maxbitlen; /*maximum number of bits a single code can get*/$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'maxbitlen                  @ext/lod..odepng.cpp    unsigned maxbitlen; \/*maximum number of bits a single code can get*\/', 'action__tagname': 'maxbitlen'}, {'word': 'maxnumcolors', 'action__pattern': '\M^  unsigned maxnumcolors; /*if more than that amount counted*/$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'maxnumcolors               @ext/lod..odepng.cpp    unsigned maxnumcolors; \/*if more than that amount counted*\/', 'action__tagname': 'maxnumcolors'}, {'word': 'medianClass', 'action__pattern': '\M^    int medianClass;$', 'action__path': 'modules/ml/include/classifier_leaf.h', 'kind': 'jump_list', 'abbr': 'medianClass                @modules..ier_leaf.h      int medianClass;', 'action__tagname': 'medianClass'}, {'word': 'mesh', 'action__pattern': '\M^    Mesh mesh;$', 'action__path': 'apps/bmvc_project/src/main.cc', 'kind': 'jump_list', 'abbr': 'mesh                       @apps/bm..rc/main.cc      Mesh mesh;', 'action__tagname': 'mesh'}, {'word': 'mesh', 'action__pattern': '\M^    Mesh mesh;$', 'action__path': 'apps/depth_shader_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'mesh                       @apps/de..rc/main.cc      Mesh mesh;', 'action__tagname': 'mesh'}, {'word': 'mesh', 'action__pattern': '\M^    Mesh mesh;$', 'action__path': 'apps/edge_shader_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'mesh                       @apps/ed..rc/main.cc      Mesh mesh;', 'action__tagname': 'mesh'}, {'word': 'mesh', 'action__pattern': '\M^    Mesh mesh;$', 'action__path': 'apps/gbuffer_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'mesh                       @apps/gb..rc/main.cc      Mesh mesh;', 'action__tagname': 'mesh'}, {'word': 'mesh', 'action__pattern': '\M^    Mesh mesh;$', 'action__path': 'apps/multicam_mesh_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'mesh                       @apps/mu..rc/main.cc      Mesh mesh;', 'action__tagname': 'mesh'}, {'word': 'mesh', 'action__pattern': '\M^    Mesh mesh;$', 'action__path': 'apps/pose_creator/src/main.cc', 'kind': 'jump_list', 'abbr': 'mesh                       @apps/po..rc/main.cc      Mesh mesh;', 'action__tagname': 'mesh'}, {'word': 'mesh', 'action__pattern': '\M^    gl::Mesh mesh;$', 'action__path': 'apps/pose_renderer/include/pose_renderer.h', 'kind': 'jump_list', 'abbr': 'mesh                       @apps/po..renderer.h      gl::Mesh mesh;', 'action__tagname': 'mesh'}, {'word': 'mesh', 'action__pattern': '\M^    Mesh mesh;$', 'action__path': 'apps/pose_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'mesh                       @apps/po..rc/main.cc      Mesh mesh;', 'action__tagname': 'mesh'}, {'word': 'mesh', 'action__pattern': '\M^    const Mesh& mesh;$', 'action__path': 'modules/gl/include/instanced_mesh_renderer.h', 'kind': 'jump_list', 'abbr': 'mesh                       @modules..renderer.h      const Mesh& mesh;', 'action__tagname': 'mesh'}, {'word': 'mesh', 'action__pattern': '\M^    const Mesh& mesh;$', 'action__path': 'modules/gl/include/mesh_renderer.h', 'kind': 'jump_list', 'abbr': 'mesh                       @modules..renderer.h      const Mesh& mesh;', 'action__tagname': 'mesh'}, {'word': 'meshFile', 'action__pattern': '\M^      std::string logfile, configFile, meshFile, outputDir, inputDir, poseFile,$', 'action__path': 'apps/bmvc_project/include/bmvc_options.h', 'kind': 'jump_list', 'abbr': 'meshFile                   @apps/bm.._options.h        std::string logfile, configFile, meshFile, outputDir, inputDir, poseFile,', 'action__tagname': 'meshFile'}, {'word': 'meshFile', 'action__pattern': '\M^                  meshFile,$', 'action__path': 'apps/depth_shader_viewer/include/depth_shader_viewer_options.h', 'kind': 'jump_list', 'abbr': 'meshFile                   @apps/de.._options.h                    meshFile,', 'action__tagname': 'meshFile'}, {'word': 'meshFile', 'action__pattern': '\M^                  meshFile,$', 'action__path': 'apps/edge_shader_viewer/include/edge_shader_viewer_options.h', 'kind': 'jump_list', 'abbr': 'meshFile                   @apps/ed.._options.h                    meshFile,', 'action__tagname': 'meshFile'}, {'word': 'meshFile', 'action__pattern': '\M^                  meshFile,$', 'action__path': 'apps/gbuffer_viewer/include/gbuffer_viewer_options.h', 'kind': 'jump_list', 'abbr': 'meshFile                   @apps/gb.._options.h                    meshFile,', 'action__tagname': 'meshFile'}, {'word': 'meshFile', 'action__pattern': '\M^      std::string configFile, meshFile, poseFile, fragShader, vertShader;$', 'action__path': 'apps/multicam_mesh_viewer/include/mc_mesh_viewer_options.h', 'kind': 'jump_list', 'abbr': 'meshFile                   @apps/mu.._options.h        std::string configFile, meshFile, poseFile, fragShader, vertShader;', 'action__tagname': 'meshFile'}, {'word': 'meshFile', 'action__pattern': '\M^      std::string configFile, meshFile, imageDir, inputPose, outputPose;$', 'action__path': 'apps/pose_creator/include/pose_creator_options.h', 'kind': 'jump_list', 'abbr': 'meshFile                   @apps/po.._options.h        std::string configFile, meshFile, imageDir, inputPose, outputPose;', 'action__tagname': 'meshFile'}, {'word': 'meshFile', 'action__pattern': '\M^    std::string configFile, meshFile, outputDir, shaderDir, shaderList;$', 'action__path': 'apps/pose_renderer/include/pose_renderer_options.h', 'kind': 'jump_list', 'abbr': 'meshFile                   @apps/po.._options.h      std::string configFile, meshFile, outputDir, shaderDir, shaderList;', 'action__tagname': 'meshFile'}, {'word': 'meshFile', 'action__pattern': '\M^      std::string configFile, meshFile, fragShader, vertShader, restPose;$', 'action__path': 'apps/pose_viewer/include/pose_viewer_options.h', 'kind': 'jump_list', 'abbr': 'meshFile                   @apps/po.._options.h        std::string configFile, meshFile, fragShader, vertShader, restPose;', 'action__tagname': 'meshFile'}, {'word': 'meshRenderer', 'action__pattern': '\M^    MeshRenderer meshRenderer;$', 'action__path': 'apps/bmvc_project/src/main.cc', 'kind': 'jump_list', 'abbr': 'meshRenderer               @apps/bm..rc/main.cc      MeshRenderer meshRenderer;', 'action__tagname': 'meshRenderer'}, {'word': 'meshRenderer', 'action__pattern': '\M^    MeshRenderer meshRenderer;$', 'action__path': 'apps/depth_shader_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'meshRenderer               @apps/de..rc/main.cc      MeshRenderer meshRenderer;', 'action__tagname': 'meshRenderer'}, {'word': 'meshRenderer', 'action__pattern': '\M^    MeshRenderer meshRenderer;$', 'action__path': 'apps/pose_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'meshRenderer               @apps/po..rc/main.cc      MeshRenderer meshRenderer;', 'action__tagname': 'meshRenderer'}, {'word': 'meshRot', 'action__pattern': '\M^static float meshRot;$', 'action__path': 'apps/depth_shader_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'meshRot                    @apps/de..rc/main.cc  static float meshRot;', 'action__tagname': 'meshRot'}, {'word': 'meshRot', 'action__pattern': '\M^static float meshRot;$', 'action__path': 'apps/edge_shader_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'meshRot                    @apps/ed..rc/main.cc  static float meshRot;', 'action__tagname': 'meshRot'}, {'word': 'meshRot', 'action__pattern': '\M^static float meshRot;$', 'action__path': 'apps/gbuffer_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'meshRot                    @apps/gb..rc/main.cc  static float meshRot;', 'action__tagname': 'meshRot'}, {'word': 'meshRot', 'action__pattern': '\M^static float meshRot;$', 'action__path': 'apps/multicam_mesh_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'meshRot                    @apps/mu..rc/main.cc  static float meshRot;', 'action__tagname': 'meshRot'}, {'word': 'mesh_renderer', 'action__pattern': '\M^    MeshRenderer mesh_renderer;$', 'action__path': 'apps/edge_shader_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'mesh_renderer              @apps/ed..rc/main.cc      MeshRenderer mesh_renderer;', 'action__tagname': 'mesh_renderer'}, {'word': 'mesh_renderer', 'action__pattern': '\M^    MeshRenderer mesh_renderer;$', 'action__path': 'apps/gbuffer_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'mesh_renderer              @apps/gb..rc/main.cc      MeshRenderer mesh_renderer;', 'action__tagname': 'mesh_renderer'}, {'word': 'mesh_renderer', 'action__pattern': '\M^    MeshRenderer mesh_renderer;$', 'action__path': 'apps/multicam_mesh_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'mesh_renderer              @apps/mu..rc/main.cc      MeshRenderer mesh_renderer;', 'action__tagname': 'mesh_renderer'}, {'word': 'mesh_renderer', 'action__pattern': '\M^    MeshRenderer mesh_renderer;$', 'action__path': 'apps/pose_creator/src/main.cc', 'kind': 'jump_list', 'abbr': 'mesh_renderer              @apps/po..rc/main.cc      MeshRenderer mesh_renderer;', 'action__tagname': 'mesh_renderer'}, {'word': 'minmatch', 'action__pattern': '\M^  unsigned minmatch; /*mininum lz77 length. 3 is normally best, 6 can be better for some PNGs. Default: 0*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'minmatch                   @ext/lod../lodepng.h    unsigned minmatch; \/*mininum lz77 length. 3 is normally best, 6 can be better for some PNGs. Default: 0*\/', 'action__tagname': 'minmatch'}, {'word': 'minute', 'action__pattern': '\M^  unsigned minute;  /*0-59*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'minute                     @ext/lod../lodepng.h    unsigned minute;  \/*0-59*\/', 'action__tagname': 'minute'}, {'word': 'ml', 'action__pattern': '\M^namespace ml {$', 'action__path': 'modules/ml/include/bayes_classifier.h', 'kind': 'jump_list', 'abbr': 'ml                         @modules..assifier.h  namespace ml {', 'action__tagname': 'ml'}, {'word': 'ml', 'action__pattern': '\M^namespace ml {$', 'action__path': 'modules/ml/include/classifier_leaf.h', 'kind': 'jump_list', 'abbr': 'ml                         @modules..ier_leaf.h  namespace ml {', 'action__tagname': 'ml'}, {'word': 'ml', 'action__pattern': '\M^namespace ml {$', 'action__path': 'modules/ml/include/decision_tree.h', 'kind': 'jump_list', 'abbr': 'ml                         @modules..ion_tree.h  namespace ml {', 'action__tagname': 'ml'}, {'word': 'ml', 'action__pattern': '\M^namespace ml {$', 'action__path': 'modules/ml/include/depth_split_function.h', 'kind': 'jump_list', 'abbr': 'ml                         @modules..function.h  namespace ml {', 'action__tagname': 'ml'}, {'word': 'ml', 'action__pattern': '\M^namespace ml {$', 'action__path': 'modules/ml/include/depth_split_function_factory.h', 'kind': 'jump_list', 'abbr': 'ml                         @modules.._factory.h  namespace ml {', 'action__tagname': 'ml'}, {'word': 'ml', 'action__pattern': '\M^namespace ml {$', 'action__path': 'modules/ml/include/discrete_information_gain.h', 'kind': 'jump_list', 'abbr': 'ml                         @modules..ion_gain.h  namespace ml {', 'action__tagname': 'ml'}, {'word': 'ml', 'action__pattern': '\M^namespace ml {$', 'action__path': 'modules/ml/include/energy_function_chooser.h', 'kind': 'jump_list', 'abbr': 'ml                         @modules.._chooser.h  namespace ml {', 'action__tagname': 'ml'}, {'word': 'ml', 'action__pattern': '\M^namespace ml {$', 'action__path': 'modules/ml/include/latent_regression_forest.h', 'kind': 'jump_list', 'abbr': 'ml                         @modules..n_forest.h  namespace ml {', 'action__tagname': 'ml'}, {'word': 'ml', 'action__pattern': '\M^namespace ml {$', 'action__path': 'modules/ml/include/latent_regression_tree.h', 'kind': 'jump_list', 'abbr': 'ml                         @modules..ion_tree.h  namespace ml {', 'action__tagname': 'ml'}, {'word': 'ml', 'action__pattern': '\M^namespace ml {$', 'action__path': 'modules/ml/include/latent_tree_information_gain.h', 'kind': 'jump_list', 'abbr': 'ml                         @modules..ion_gain.h  namespace ml {', 'action__tagname': 'ml'}, {'word': 'ml', 'action__pattern': '\M^namespace ml {$', 'action__path': 'modules/ml/include/latent_tree_leaf.h', 'kind': 'jump_list', 'abbr': 'ml                         @modules..ree_leaf.h  namespace ml {', 'action__tagname': 'ml'}, {'word': 'ml', 'action__pattern': '\M^namespace ml {$', 'action__path': 'modules/ml/include/latent_tree_model.h', 'kind': 'jump_list', 'abbr': 'ml                         @modules..ee_model.h  namespace ml {', 'action__tagname': 'ml'}, {'word': 'ml', 'action__pattern': '\M^namespace ml {$', 'action__path': 'modules/ml/include/latent_tree_node.h', 'kind': 'jump_list', 'abbr': 'ml                         @modules..ree_node.h  namespace ml {', 'action__tagname': 'ml'}, {'word': 'ml', 'action__pattern': '\M^namespace ml {$', 'action__path': 'modules/ml/include/leaf_factory.h', 'kind': 'jump_list', 'abbr': 'ml                         @modules.._factory.h  namespace ml {', 'action__tagname': 'ml'}, {'word': 'ml', 'action__pattern': '\M^namespace ml {$', 'action__path': 'modules/ml/include/offset_leaf.h', 'kind': 'jump_list', 'abbr': 'ml                         @modules..set_leaf.h  namespace ml {', 'action__tagname': 'ml'}, {'word': 'ml', 'action__pattern': '\M^namespace ml {$', 'action__path': 'modules/ml/include/pose_ml.h', 'kind': 'jump_list', 'abbr': 'ml                         @modules../pose_ml.h  namespace ml {', 'action__tagname': 'ml'}, {'word': 'ml', 'action__pattern': '\M^namespace ml {$', 'action__path': 'modules/ml/include/scalar_split_function.h', 'kind': 'jump_list', 'abbr': 'ml                         @modules..function.h  namespace ml {', 'action__tagname': 'ml'}, {'word': 'ml', 'action__pattern': '\M^namespace ml {$', 'action__path': 'modules/ml/include/scalar_split_function_factory.h', 'kind': 'jump_list', 'abbr': 'ml                         @modules.._factory.h  namespace ml {', 'action__tagname': 'ml'}, {'word': 'ml', 'action__pattern': '\M^namespace ml {$', 'action__path': 'modules/ml/include/split_function.h', 'kind': 'jump_list', 'abbr': 'ml                         @modules..function.h  namespace ml {', 'action__tagname': 'ml'}, {'word': 'ml', 'action__pattern': '\M^namespace ml {$', 'action__path': 'modules/ml/include/split_function_chooser.h', 'kind': 'jump_list', 'abbr': 'ml                         @modules.._chooser.h  namespace ml {', 'action__tagname': 'ml'}, {'word': 'ml', 'action__pattern': '\M^namespace ml {$', 'action__path': 'modules/ml/include/split_function_factory.h', 'kind': 'jump_list', 'abbr': 'ml                         @modules.._factory.h  namespace ml {', 'action__tagname': 'ml'}, {'word': 'ml', 'action__pattern': '\M^namespace ml {$', 'action__path': 'modules/ml/include/tang_energy_function.h', 'kind': 'jump_list', 'abbr': 'ml                         @modules..function.h  namespace ml {', 'action__tagname': 'ml'}, {'word': 'ml', 'action__pattern': '\M^namespace ml {$', 'action__path': 'modules/ml/include/training_data.h', 'kind': 'jump_list', 'abbr': 'ml                         @modules..ing_data.h  namespace ml {', 'action__tagname': 'ml'}, {'word': 'ml', 'action__pattern': '\M^namespace ml {$', 'action__path': 'modules/ml/include/tree_node.h', 'kind': 'jump_list', 'abbr': 'ml                         @modules..ree_node.h  namespace ml {', 'action__tagname': 'ml'}, {'word': 'ml', 'action__pattern': '\M^namespace ml {$', 'action__path': 'modules/ml/src/bayes_classifier.cc', 'kind': 'jump_list', 'abbr': 'ml                         @modules..ssifier.cc  namespace ml {', 'action__tagname': 'ml'}, {'word': 'ml', 'action__pattern': '\M^namespace ml {$', 'action__path': 'modules/ml/src/depth_split_function.cc', 'kind': 'jump_list', 'abbr': 'ml                         @modules..unction.cc  namespace ml {', 'action__tagname': 'ml'}, {'word': 'ml', 'action__pattern': '\M^namespace ml {$', 'action__path': 'modules/ml/src/latent_tree_model.cc', 'kind': 'jump_list', 'abbr': 'ml                         @modules..e_model.cc  namespace ml {', 'action__tagname': 'ml'}, {'word': 'ml', 'action__pattern': '\M^namespace ml {$', 'action__path': 'modules/ml/src/latent_tree_node.cc', 'kind': 'jump_list', 'abbr': 'ml                         @modules..ee_node.cc  namespace ml {', 'action__tagname': 'ml'}, {'word': 'modelFile', 'action__pattern': '\M^char *modelFile = nullptr;$', 'action__path': 'ext/objective_functions/prog/colour-detect/main.cc', 'kind': 'jump_list', 'abbr': 'modelFile                  @ext/obj..ct/main.cc  char *modelFile = nullptr;', 'action__tagname': 'modelFile'}, {'word': 'month', 'action__pattern': '\M^  unsigned month;   /*1-12*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'month                      @ext/lod../lodepng.h    unsigned month;   \/*1-12*\/', 'action__tagname': 'month'}, {'word': 'moreHelpful', 'action__pattern': '\M^    std::vector<TrainingData<int>> homo, perfect, unhelpful, moreHelpful;$', 'action__path': 'modules/ml/test/discrete_information_gain_test.cc', 'kind': 'jump_list', 'abbr': 'moreHelpful                @modules..in_test.cc      std::vector<TrainingData<int>> homo, perfect, unhelpful, moreHelpful;', 'action__tagname': 'moreHelpful'}, {'word': 'move', 'action__pattern': '\M^    compiled(std::move(other.compiled)) {$', 'action__path': 'modules/gl/src/shader.cc', 'kind': 'jump_list', 'abbr': 'move                       @modules../shader.cc      compiled(std::move(other.compiled)) {', 'action__tagname': 'move'}, {'word': 'move', 'action__pattern': '\M^  void ParticleSwarm::Particle::move(const std::vector<double>& newPos) {$', 'action__path': 'modules/optim/src/particle.cc', 'kind': 'jump_list', 'abbr': 'move                       @modules..article.cc    void ParticleSwarm::Particle::move(const std::vector<double>& newPos) {', 'action__tagname': 'move'}, {'word': 'moveBackward', 'action__pattern': '\M^void Camera::moveBackward(double step) {$', 'action__path': 'modules/gl/src/camera.cc', 'kind': 'jump_list', 'abbr': 'moveBackward               @modules../camera.cc  void Camera::moveBackward(double step) {', 'action__tagname': 'moveBackward'}, {'word': 'moveForward', 'action__pattern': '\M^void Camera::moveForward(double step) {$', 'action__path': 'modules/gl/src/camera.cc', 'kind': 'jump_list', 'abbr': 'moveForward                @modules../camera.cc  void Camera::moveForward(double step) {', 'action__tagname': 'moveForward'}, {'word': 'moveLeft', 'action__pattern': '\M^void Camera::moveLeft(double step) {$', 'action__path': 'modules/gl/src/camera.cc', 'kind': 'jump_list', 'abbr': 'moveLeft                   @modules../camera.cc  void Camera::moveLeft(double step) {', 'action__tagname': 'moveLeft'}, {'word': 'moveRight', 'action__pattern': '\M^void Camera::moveRight(double step) {$', 'action__path': 'modules/gl/src/camera.cc', 'kind': 'jump_list', 'abbr': 'moveRight                  @modules../camera.cc  void Camera::moveRight(double step) {', 'action__tagname': 'moveRight'}, {'word': 'mutex', 'action__pattern': '\M^    std::mutex mutex;$', 'action__path': 'modules/ml/include/depth_split_function_factory.h', 'kind': 'jump_list', 'abbr': 'mutex                      @modules.._factory.h      std::mutex mutex;', 'action__tagname': 'mutex'}, {'word': 'mutex', 'action__pattern': '\M^    std::mutex mutex;$', 'action__path': 'modules/ml/include/energy_function_chooser.h', 'kind': 'jump_list', 'abbr': 'mutex                      @modules.._chooser.h      std::mutex mutex;', 'action__tagname': 'mutex'}, {'word': 'name', 'action__pattern': '\M^    std::string name;$', 'action__path': 'modules/core/include/bone.h', 'kind': 'jump_list', 'abbr': 'name                       @modules..ude/bone.h      std::string name;', 'action__tagname': 'name'}, {'word': 'name', 'action__pattern': '\M^    std::string name;$', 'action__path': 'modules/core/include/old_joint.h', 'kind': 'jump_list', 'abbr': 'name                       @modules..ld_joint.h      std::string name;', 'action__tagname': 'name'}, {'word': 'name', 'action__pattern': '\M^    std::string name;$', 'action__path': 'modules/core/include/old_pose.h', 'kind': 'jump_list', 'abbr': 'name                       @modules..old_pose.h      std::string name;', 'action__tagname': 'name'}, {'word': 'name', 'action__pattern': '\M^    std::string name;$', 'action__path': 'modules/core/include/pose.h', 'kind': 'jump_list', 'abbr': 'name                       @modules..ude/pose.h      std::string name;', 'action__tagname': 'name'}, {'word': 'name', 'action__pattern': '\M^    std::string name;$', 'action__path': 'modules/ml/include/latent_tree_leaf.h', 'kind': 'jump_list', 'abbr': 'name                       @modules..ree_leaf.h      std::string name;', 'action__tagname': 'name'}, {'word': 'name', 'action__pattern': '\M^    std::string name;$', 'action__path': 'modules/ml/include/latent_tree_node.h', 'kind': 'jump_list', 'abbr': 'name                       @modules..ree_node.h      std::string name;', 'action__tagname': 'name'}, {'word': 'near', 'action__pattern': '\M^std::uint16_t near = 0, far = 1000;$', 'action__path': 'ext/objective_functions/prog/depthseg/main.cc', 'kind': 'jump_list', 'abbr': 'near                       @ext/obj..eg/main.cc  std::uint16_t near = 0, far = 1000;', 'action__tagname': 'near'}, {'word': 'nicematch', 'action__pattern': '\M^  unsigned nicematch; /*stop searching if >= this length found. Set to 258 for best compression. Default: 128*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'nicematch                  @ext/lod../lodepng.h    unsigned nicematch; \/*stop searching if >= this length found. Set to 258 for best compression. Default: 128*\/', 'action__tagname': 'nicematch'}, {'word': 'noexcept', 'action__pattern': '\M^    Shader& operator=(Shader&& other) noexcept;$', 'action__path': 'modules/gl/include/shader.h', 'kind': 'jump_list', 'abbr': 'noexcept                   @modules..e/shader.h      Shader& operator=(Shader&& other) noexcept;', 'action__tagname': 'noexcept'}, {'word': 'noexcept', 'action__pattern': '\M^    Shader(Shader&& other) noexcept;$', 'action__path': 'modules/gl/include/shader.h', 'kind': 'jump_list', 'abbr': 'noexcept                   @modules..e/shader.h      Shader(Shader&& other) noexcept;', 'action__tagname': 'noexcept'}, {'word': 'none', 'action__pattern': '\M^      none = ''0''$', 'action__path': 'apps/pose_interpolator/include/pose_interpolator_options.h', 'kind': 'jump_list', 'abbr': 'none                       @apps/po.._options.h        none = ''0''', 'action__tagname': 'none'}, {'word': 'normalBuffer', 'action__pattern': '\M^    const unsigned int normalBuffer = 2;$', 'action__path': 'modules/gl/include/instanced_mesh_renderer.h', 'kind': 'jump_list', 'abbr': 'normalBuffer               @modules..renderer.h      const unsigned int normalBuffer = 2;', 'action__tagname': 'normalBuffer'}, {'word': 'normalBuffer', 'action__pattern': '\M^    const unsigned int normalBuffer = 2;$', 'action__path': 'modules/gl/include/instanced_shape_renderer.h', 'kind': 'jump_list', 'abbr': 'normalBuffer               @modules..renderer.h      const unsigned int normalBuffer = 2;', 'action__tagname': 'normalBuffer'}, {'word': 'normalBuffer', 'action__pattern': '\M^    const unsigned int normalBuffer = 2;$', 'action__path': 'modules/gl/include/mesh_renderer.h', 'kind': 'jump_list', 'abbr': 'normalBuffer               @modules..renderer.h      const unsigned int normalBuffer = 2;', 'action__tagname': 'normalBuffer'}, {'word': 'normalBuffer', 'action__pattern': '\M^    const unsigned int normalBuffer = 2;$', 'action__path': 'modules/gl/include/shape_renderer.h', 'kind': 'jump_list', 'abbr': 'normalBuffer               @modules..renderer.h      const unsigned int normalBuffer = 2;', 'action__tagname': 'normalBuffer'}, {'word': 'normalFrag', 'action__pattern': '\M^    const static std::string depthFrag, textureFrag, colourFrag, normalFrag,$', 'action__path': 'modules/gl/include/pose_shader.h', 'kind': 'jump_list', 'abbr': 'normalFrag                 @modules..e_shader.h      const static std::string depthFrag, textureFrag, colourFrag, normalFrag,', 'action__tagname': 'normalFrag'}, {'word': 'normalFrag', 'action__pattern': '\M^const std::string PoseShader::normalFrag = "                    \\n\\$', 'action__path': 'modules/gl/src/pose_shader.cc', 'kind': 'jump_list', 'abbr': 'normalFrag                 @modules.._shader.cc  const std::string PoseShader::normalFrag = "                    \\n\\', 'action__tagname': 'normalFrag'}, {'word': 'normalLocation', 'action__pattern': '\M^    const unsigned int normalLocation = 1;$', 'action__path': 'modules/gl/include/instanced_mesh_renderer.h', 'kind': 'jump_list', 'abbr': 'normalLocation             @modules..renderer.h      const unsigned int normalLocation = 1;', 'action__tagname': 'normalLocation'}, {'word': 'normalLocation', 'action__pattern': '\M^    const unsigned int normalLocation = 1;$', 'action__path': 'modules/gl/include/instanced_shape_renderer.h', 'kind': 'jump_list', 'abbr': 'normalLocation             @modules..renderer.h      const unsigned int normalLocation = 1;', 'action__tagname': 'normalLocation'}, {'word': 'normalLocation', 'action__pattern': '\M^    const unsigned int normalLocation = 1;$', 'action__path': 'modules/gl/include/mesh_renderer.h', 'kind': 'jump_list', 'abbr': 'normalLocation             @modules..renderer.h      const unsigned int normalLocation = 1;', 'action__tagname': 'normalLocation'}, {'word': 'normalLocation', 'action__pattern': '\M^    const unsigned int normalLocation = 1;$', 'action__path': 'modules/gl/include/shape_renderer.h', 'kind': 'jump_list', 'abbr': 'normalLocation             @modules..renderer.h      const unsigned int normalLocation = 1;', 'action__tagname': 'normalLocation'}, {'word': 'normalise', 'action__pattern': '\M^Pose Pose::normalise() const {$', 'action__path': 'modules/core/src/old_pose.cc', 'kind': 'jump_list', 'abbr': 'normalise                  @modules..ld_pose.cc  Pose Pose::normalise() const {', 'action__tagname': 'normalise'}, {'word': 'normals', 'action__pattern': '\M^      positions = 0, normals, texcoords, colours, depth$', 'action__path': 'modules/gl/include/gbuffer.h', 'kind': 'jump_list', 'abbr': 'normals                    @modules../gbuffer.h        positions = 0, normals, texcoords, colours, depth', 'action__tagname': 'normals'}, {'word': 'normals', 'action__pattern': '\M^    std::vector<glm::vec3> normals;$', 'action__path': 'modules/gl/include/gl_sphere.h', 'kind': 'jump_list', 'abbr': 'normals                    @modules..l_sphere.h      std::vector<glm::vec3> normals;', 'action__tagname': 'normals'}, {'word': 'normals', 'action__pattern': '\M^    std::vector<glm::vec3> normals;$', 'action__path': 'modules/gl/include/mesh.h', 'kind': 'jump_list', 'abbr': 'normals                    @modules..ude/mesh.h      std::vector<glm::vec3> normals;', 'action__tagname': 'normals'}, {'word': 'normals', 'action__pattern': '\M^    std::vector<glm::vec3> normals;$', 'action__path': 'modules/gl/include/prism.h', 'kind': 'jump_list', 'abbr': 'normals                    @modules..de/prism.h      std::vector<glm::vec3> normals;', 'action__tagname': 'normals'}, {'word': 'normals', 'action__pattern': '\M^    std::vector<glm::vec3> normals;$', 'action__path': 'modules/gl/include/surface.h', 'kind': 'jump_list', 'abbr': 'normals                    @modules../surface.h      std::vector<glm::vec3> normals;', 'action__tagname': 'normals'}, {'word': 'numBones', 'action__pattern': '\M^unsigned int Skeleton::numBones() const {$', 'action__path': 'modules/core/src/skeleton.cc', 'kind': 'jump_list', 'abbr': 'numBones                   @modules..keleton.cc  unsigned int Skeleton::numBones() const {', 'action__tagname': 'numBones'}, {'word': 'numBuffers', 'action__pattern': '\M^    static const unsigned int numBuffers = 2;$', 'action__path': 'modules/gl/include/background_drawer.h', 'kind': 'jump_list', 'abbr': 'numBuffers                 @modules..d_drawer.h      static const unsigned int numBuffers = 2;', 'action__tagname': 'numBuffers'}, {'word': 'numBuffers', 'action__pattern': '\M^    static const unsigned int numBuffers = 5;$', 'action__path': 'modules/gl/include/gbuffer.h', 'kind': 'jump_list', 'abbr': 'numBuffers                 @modules../gbuffer.h      static const unsigned int numBuffers = 5;', 'action__tagname': 'numBuffers'}, {'word': 'numBuffers', 'action__pattern': '\M^    const unsigned int numBuffers = 7;$', 'action__path': 'modules/gl/include/instanced_mesh_renderer.h', 'kind': 'jump_list', 'abbr': 'numBuffers                 @modules..renderer.h      const unsigned int numBuffers = 7;', 'action__tagname': 'numBuffers'}, {'word': 'numBuffers', 'action__pattern': '\M^    const unsigned int numBuffers = 6;$', 'action__path': 'modules/gl/include/instanced_shape_renderer.h', 'kind': 'jump_list', 'abbr': 'numBuffers                 @modules..renderer.h      const unsigned int numBuffers = 6;', 'action__tagname': 'numBuffers'}, {'word': 'numBuffers', 'action__pattern': '\M^    const unsigned int numBuffers = 5;$', 'action__path': 'modules/gl/include/mesh_renderer.h', 'kind': 'jump_list', 'abbr': 'numBuffers                 @modules..renderer.h      const unsigned int numBuffers = 5;', 'action__tagname': 'numBuffers'}, {'word': 'numBuffers', 'action__pattern': '\M^    const unsigned int numBuffers = 4;$', 'action__path': 'modules/gl/include/shape_renderer.h', 'kind': 'jump_list', 'abbr': 'numBuffers                 @modules..renderer.h      const unsigned int numBuffers = 4;', 'action__tagname': 'numBuffers'}, {'word': 'numCameras', 'action__pattern': '\M^    static const unsigned int numCameras = 6;$', 'action__path': 'modules/core/include/camera_calibration.h', 'kind': 'jump_list', 'abbr': 'numCameras                 @modules..ibration.h      static const unsigned int numCameras = 6;', 'action__tagname': 'numCameras'}, {'word': 'numChildren', 'action__pattern': '\M^unsigned int Bone::numChildren() const {$', 'action__path': 'modules/core/src/bone.cc', 'kind': 'jump_list', 'abbr': 'numChildren                @modules..rc/bone.cc  unsigned int Bone::numChildren() const {', 'action__tagname': 'numChildren'}, {'word': 'numGenerations', 'action__pattern': '\M^      unsigned int numParticles, numGenerations;$', 'action__path': 'apps/bmvc_project/include/bmvc_options.h', 'kind': 'jump_list', 'abbr': 'numGenerations             @apps/bm.._options.h        unsigned int numParticles, numGenerations;', 'action__tagname': 'numGenerations'}, {'word': 'numIndices', 'action__pattern': '\M^    unsigned int numIndices;$', 'action__path': 'modules/gl/include/instanced_mesh_renderer.h', 'kind': 'jump_list', 'abbr': 'numIndices                 @modules..renderer.h      unsigned int numIndices;', 'action__tagname': 'numIndices'}, {'word': 'numIndices', 'action__pattern': '\M^      unsigned int numIndices;$', 'action__path': 'modules/gl/include/mesh.h', 'kind': 'jump_list', 'abbr': 'numIndices                 @modules..ude/mesh.h        unsigned int numIndices;', 'action__tagname': 'numIndices'}, {'word': 'numLevels', 'action__pattern': '\M^unsigned int numLevels;$', 'action__path': 'apps/sphere_model_renderer/src/main.cc', 'kind': 'jump_list', 'abbr': 'numLevels                  @apps/sp..rc/main.cc  unsigned int numLevels;', 'action__tagname': 'numLevels'}, {'word': 'numParticles', 'action__pattern': '\M^      unsigned int numParticles, numGenerations;$', 'action__path': 'apps/bmvc_project/include/bmvc_options.h', 'kind': 'jump_list', 'abbr': 'numParticles               @apps/bm.._options.h        unsigned int numParticles, numGenerations;', 'action__tagname': 'numParticles'}, {'word': 'numPoses', 'action__pattern': '\M^static unsigned int numPoses;$', 'action__path': 'apps/pose_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'numPoses                   @apps/po..rc/main.cc  static unsigned int numPoses;', 'action__tagname': 'numPoses'}, {'word': 'num_spheres', 'action__pattern': '\M^    const unsigned int num_spheres;$', 'action__path': 'apps/sphere_model_optim/src/main.cc', 'kind': 'jump_list', 'abbr': 'num_spheres                @apps/sp..rc/main.cc      const unsigned int num_spheres;', 'action__tagname': 'num_spheres'}, {'word': 'num_spheres', 'action__pattern': '\M^    const unsigned int num_spheres;$', 'action__path': 'apps/sphere_model_optim/src/main.cc', 'kind': 'jump_list', 'abbr': 'num_spheres                @apps/sp..rc/main.cc      const unsigned int num_spheres;', 'action__tagname': 'num_spheres'}, {'word': 'num_spheres', 'action__pattern': '\M^    const unsigned int num_spheres;$', 'action__path': 'apps/sphere_model_optim/src/main.cc', 'kind': 'jump_list', 'abbr': 'num_spheres                @apps/sp..rc/main.cc      const unsigned int num_spheres;', 'action__tagname': 'num_spheres'}, {'word': 'num_spheres', 'action__pattern': '\M^  unsigned int num_spheres, sphere_params;$', 'action__path': 'apps/sphere_model_optim/src/main.cc', 'kind': 'jump_list', 'abbr': 'num_spheres                @apps/sp..rc/main.cc    unsigned int num_spheres, sphere_params;', 'action__tagname': 'num_spheres'}, {'word': 'numberParameters', 'action__pattern': '\M^    static const unsigned int numberParameters = 27;$', 'action__path': 'modules/core/include/hand_pose_27_dof.h', 'kind': 'jump_list', 'abbr': 'numberParameters           @modules..e_27_dof.h      static const unsigned int numberParameters = 27;', 'action__tagname': 'numberParameters'}, {'word': 'numberParameters', 'action__pattern': '\M^    static const unsigned int numberParameters = 34;$', 'action__path': 'modules/core/include/hand_pose_34_dof.h', 'kind': 'jump_list', 'abbr': 'numberParameters           @modules..e_34_dof.h      static const unsigned int numberParameters = 34;', 'action__tagname': 'numberParameters'}, {'word': 'numcodes', 'action__pattern': '\M^  unsigned numcodes; /*number of symbols in the alphabet = number of codes*/$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'numcodes                   @ext/lod..odepng.cpp    unsigned numcodes; \/*number of symbols in the alphabet = number of codes*\/', 'action__tagname': 'numcodes'}, {'word': 'numcolors', 'action__pattern': '\M^  unsigned numcolors;$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'numcolors                  @ext/lod..odepng.cpp    unsigned numcolors;', 'action__tagname': 'numcolors'}, {'word': 'numcolors_done', 'action__pattern': '\M^  unsigned char numcolors_done;$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'numcolors_done             @ext/lod..odepng.cpp    unsigned char numcolors_done;', 'action__tagname': 'numcolors_done'}, {'word': 'offscreenBuffer', 'action__pattern': '\M^    OffscreenBuffer offscreenBuffer;$', 'action__path': 'apps/depth_shader_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'offscreenBuffer            @apps/de..rc/main.cc      OffscreenBuffer offscreenBuffer;', 'action__tagname': 'offscreenBuffer'}, {'word': 'offsetType', 'action__pattern': '\M^    OffsetType offsetType;$', 'action__path': 'modules/ml/include/offset_leaf.h', 'kind': 'jump_list', 'abbr': 'offsetType                 @modules..set_leaf.h      OffsetType offsetType;', 'action__tagname': 'offsetType'}, {'word': 'oob', 'action__pattern': '\M^bool oob(unsigned int dim, double val) {$', 'action__path': 'apps/particle_swarm_demo/src/main.cc', 'kind': 'jump_list', 'abbr': 'oob                        @apps/pa..rc/main.cc  bool oob(unsigned int dim, double val) {', 'action__tagname': 'oob'}, {'word': 'oob', 'action__pattern': '\M^bool HandPose27DOF::oob(unsigned int dimension, double val) {$', 'action__path': 'modules/core/src/hand_pose_27_dof.cc', 'kind': 'jump_list', 'abbr': 'oob                        @modules.._27_dof.cc  bool HandPose27DOF::oob(unsigned int dimension, double val) {', 'action__tagname': 'oob'}, {'word': 'oob', 'action__pattern': '\M^bool HandPose34DOF::oob(unsigned int dimension, double val) {$', 'action__path': 'modules/core/src/hand_pose_34_dof.cc', 'kind': 'jump_list', 'abbr': 'oob                        @modules.._34_dof.cc  bool HandPose34DOF::oob(unsigned int dimension, double val) {', 'action__tagname': 'oob'}, {'word': 'operator ()', 'action__pattern': '\M^  bool operator()(T const * const * spheres,$', 'action__path': 'apps/sphere_model_optim/src/main.cc', 'kind': 'jump_list', 'abbr': 'operator ()                @apps/sp..rc/main.cc    bool operator()(T const * const * spheres,', 'action__tagname': 'operator ()'}, {'word': 'operator ()', 'action__pattern': '\M^  bool operator()(T const * const * spheres,$', 'action__path': 'apps/sphere_model_optim/src/main.cc', 'kind': 'jump_list', 'abbr': 'operator ()                @apps/sp..rc/main.cc    bool operator()(T const * const * spheres,', 'action__tagname': 'operator ()'}, {'word': 'operator ()', 'action__pattern': '\M^  bool operator()(T const * r, T const * x, T const * y, T const * z, T* output) const {$', 'action__path': 'apps/sphere_model_optim/src/main.cc', 'kind': 'jump_list', 'abbr': 'operator ()                @apps/sp..rc/main.cc    bool operator()(T const * r, T const * x, T const * y, T const * z, T* output) const {', 'action__tagname': 'operator ()'}, {'word': 'operator ()', 'action__pattern': '\M^double DepthEvaluator::operator()(const CameraImage& img1, $', 'action__path': 'ext/objective_functions/xing/aig/depth_evaluator.cc', 'kind': 'jump_list', 'abbr': 'operator ()                @ext/obj..aluator.cc  double DepthEvaluator::operator()(const CameraImage& img1, ', 'action__tagname': 'operator ()'}, {'word': 'operator ()', 'action__pattern': '\M^double DepthOverlapEvaluator::operator()(const CameraImage& img1,$', 'action__path': 'ext/objective_functions/xing/aig/depth_overlap_evaluator.cc', 'kind': 'jump_list', 'abbr': 'operator ()                @ext/obj..aluator.cc  double DepthOverlapEvaluator::operator()(const CameraImage& img1,', 'action__tagname': 'operator ()'}, {'word': 'operator ()', 'action__pattern': '\M^double EdgeEvaluator::operator()(const CameraImage& img1, $', 'action__path': 'ext/objective_functions/xing/aig/edge_evaluator.cc', 'kind': 'jump_list', 'abbr': 'operator ()                @ext/obj..aluator.cc  double EdgeEvaluator::operator()(const CameraImage& img1, ', 'action__tagname': 'operator ()'}, {'word': 'operator ()', 'action__pattern': '\M^double SilhouetteEvaluator::operator()(const CameraImage& img1, $', 'action__path': 'ext/objective_functions/xing/aig/silhouette_evaluator.cc', 'kind': 'jump_list', 'abbr': 'operator ()                @ext/obj..aluator.cc  double SilhouetteEvaluator::operator()(const CameraImage& img1, ', 'action__tagname': 'operator ()'}, {'word': 'operator ()', 'action__pattern': '\M^    std::tuple<int> operator()(const DataType& f) const {$', 'action__path': 'modules/ml/include/classifier_leaf.h', 'kind': 'jump_list', 'abbr': 'operator ()                @modules..ier_leaf.h      std::tuple<int> operator()(const DataType& f) const {', 'action__tagname': 'operator ()'}, {'word': 'operator ()', 'action__pattern': '\M^OffsetLeaf<Data, Labels...>::operator()(const Data& d) const {$', 'action__path': 'modules/ml/include/offset_leaf.h', 'kind': 'jump_list', 'abbr': 'operator ()                @modules..set_leaf.h  OffsetLeaf<Data, Labels...>::operator()(const Data& d) const {', 'action__tagname': 'operator ()'}, {'word': 'operator ()', 'action__pattern': '\M^    bool operator()(const Data& f) const {$', 'action__path': 'modules/ml/include/scalar_split_function.h', 'kind': 'jump_list', 'abbr': 'operator ()                @modules..function.h      bool operator()(const Data& f) const {', 'action__tagname': 'operator ()'}, {'word': 'operator ()', 'action__pattern': '\M^bool DepthSplitFunction::operator()(const cv::Mat& image,$', 'action__path': 'modules/ml/src/depth_split_function.cc', 'kind': 'jump_list', 'abbr': 'operator ()                @modules..unction.cc  bool DepthSplitFunction::operator()(const cv::Mat& image,', 'action__tagname': 'operator ()'}, {'word': 'operator *', 'action__pattern': '\M^Sphere<T>& Sphere<T>::operator*(const glm::mat4& transform) {$', 'action__path': 'modules/geom/include/sphere.h', 'kind': 'jump_list', 'abbr': 'operator *                 @modules..e/sphere.h  Sphere<T>& Sphere<T>::operator*(const glm::mat4& transform) {', 'action__tagname': 'operator *'}, {'word': 'operator *=', 'action__pattern': '\M^Sphere<T>& Sphere<T>::operator*=(const glm::mat4& transform) {$', 'action__path': 'modules/geom/include/sphere.h', 'kind': 'jump_list', 'abbr': 'operator *=                @modules..e/sphere.h  Sphere<T>& Sphere<T>::operator*=(const glm::mat4& transform) {', 'action__tagname': 'operator *='}, {'word': 'operator <<', 'action__pattern': '\M^std::ostream& operator<<(std::ostream& os, const ColourDetector& model)$', 'action__path': 'ext/objective_functions/xing/aig/colour_detector.cc', 'kind': 'jump_list', 'abbr': 'operator <<                @ext/obj..etector.cc  std::ostream& operator<<(std::ostream& os, const ColourDetector& model)', 'action__tagname': 'operator <<'}, {'word': 'operator <<', 'action__pattern': '\M^Shader& Shader::operator<<(const std::string& source) {$', 'action__path': 'modules/gl/src/shader.cc', 'kind': 'jump_list', 'abbr': 'operator <<                @modules../shader.cc  Shader& Shader::operator<<(const std::string& source) {', 'action__tagname': 'operator <<'}, {'word': 'operator <<', 'action__pattern': '\M^std::ostream& operator<<(std::ostream& os, const ClassifierLeaf<DataType>& n) {$', 'action__path': 'modules/ml/include/classifier_leaf.h', 'kind': 'jump_list', 'abbr': 'operator <<                @modules..ier_leaf.h  std::ostream& operator<<(std::ostream& os, const ClassifierLeaf<DataType>& n) {', 'action__tagname': 'operator <<'}, {'word': 'operator <<', 'action__pattern': '\M^std::ostream& operator<<(std::ostream& os, DepthSplitFunction& d) {$', 'action__path': 'modules/ml/include/depth_split_function.h', 'kind': 'jump_list', 'abbr': 'operator <<                @modules..function.h  std::ostream& operator<<(std::ostream& os, DepthSplitFunction& d) {', 'action__tagname': 'operator <<'}, {'word': 'operator <<', 'action__pattern': '\M^std::ostream& operator<<(std::ostream& os, const OffsetLeaf<Data, LabelTypes...>& l) {$', 'action__path': 'modules/ml/include/offset_leaf.h', 'kind': 'jump_list', 'abbr': 'operator <<                @modules..set_leaf.h  std::ostream& operator<<(std::ostream& os, const OffsetLeaf<Data, LabelTypes...>& l) {', 'action__tagname': 'operator <<'}, {'word': 'operator <<', 'action__pattern': '\M^std::ostream& operator<<(std::ostream& os, ScalarSplitFunction<Data>& s) {$', 'action__path': 'modules/ml/include/scalar_split_function.h', 'kind': 'jump_list', 'abbr': 'operator <<                @modules..function.h  std::ostream& operator<<(std::ostream& os, ScalarSplitFunction<Data>& s) {', 'action__tagname': 'operator <<'}, {'word': 'operator <<', 'action__pattern': '\M^std::ostream& operator<<(std::ostream& os, const LatentTreeNode& n) {$', 'action__path': 'modules/ml/src/latent_tree_node.cc', 'kind': 'jump_list', 'abbr': 'operator <<                @modules..ee_node.cc  std::ostream& operator<<(std::ostream& os, const LatentTreeNode& n) {', 'action__tagname': 'operator <<'}, {'word': 'operator =', 'action__pattern': '\M^State& State::operator=(const State& other)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'operator =                 @ext/lod..odepng.cpp  State& State::operator=(const State& other)', 'action__tagname': 'operator ='}, {'word': 'operator =', 'action__pattern': '\M^EdgeDistanceMap& EdgeDistanceMap::operator=(const EdgeDistanceMap& rhs)$', 'action__path': 'ext/objective_functions/xing/aig/edge_distance_map.cc', 'kind': 'jump_list', 'abbr': 'operator =                 @ext/obj..nce_map.cc  EdgeDistanceMap& EdgeDistanceMap::operator=(const EdgeDistanceMap& rhs)', 'action__tagname': 'operator ='}, {'word': 'operator =', 'action__pattern': '\M^OffscreenBuffer& OffscreenBuffer::operator=(OffscreenBuffer&& rhs) {$', 'action__path': 'modules/gl/src/offscreen_buffer.cc', 'kind': 'jump_list', 'abbr': 'operator =                 @modules.._buffer.cc  OffscreenBuffer& OffscreenBuffer::operator=(OffscreenBuffer&& rhs) {', 'action__tagname': 'operator ='}, {'word': 'operator =', 'action__pattern': '\M^Texture& Texture::operator=(Texture&& rhs) {$', 'action__path': 'modules/gl/src/texture.cc', 'kind': 'jump_list', 'abbr': 'operator =                 @modules..texture.cc  Texture& Texture::operator=(Texture&& rhs) {', 'action__tagname': 'operator ='}, {'word': 'operator =', 'action__pattern': '\M^    EnergyFunctionChooser& operator=(EnergyFunctionChooser& e) {$', 'action__path': 'modules/ml/include/energy_function_chooser.h', 'kind': 'jump_list', 'abbr': 'operator =                 @modules.._chooser.h      EnergyFunctionChooser& operator=(EnergyFunctionChooser& e) {', 'action__tagname': 'operator ='}, {'word': 'operator >>', 'action__pattern': '\M^std::istream& operator>>(std::istream& is, ColourDetector& model)$', 'action__path': 'ext/objective_functions/xing/aig/colour_detector.cc', 'kind': 'jump_list', 'abbr': 'operator >>                @ext/obj..etector.cc  std::istream& operator>>(std::istream& is, ColourDetector& model)', 'action__tagname': 'operator >>'}, {'word': 'options', 'action__pattern': '\M^    const BMVCOptions& options;$', 'action__path': 'apps/bmvc_project/src/main.cc', 'kind': 'jump_list', 'abbr': 'options                    @apps/bm..rc/main.cc      const BMVCOptions& options;', 'action__tagname': 'options'}, {'word': 'options', 'action__pattern': '\M^    const DepthShaderViewerOptions& options;$', 'action__path': 'apps/depth_shader_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'options                    @apps/de..rc/main.cc      const DepthShaderViewerOptions& options;', 'action__tagname': 'options'}, {'word': 'options', 'action__pattern': '\M^    const EdgeShaderViewerOptions& options;$', 'action__path': 'apps/edge_shader_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'options                    @apps/ed..rc/main.cc      const EdgeShaderViewerOptions& options;', 'action__tagname': 'options'}, {'word': 'options', 'action__pattern': '\M^    const GBufferViewerOptions& options;$', 'action__path': 'apps/gbuffer_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'options                    @apps/gb..rc/main.cc      const GBufferViewerOptions& options;', 'action__tagname': 'options'}, {'word': 'options', 'action__pattern': '\M^    const MCMeshViewerOptions& options;$', 'action__path': 'apps/multicam_mesh_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'options                    @apps/mu..rc/main.cc      const MCMeshViewerOptions& options;', 'action__tagname': 'options'}, {'word': 'options', 'action__pattern': '\M^    const PoseCreatorOptions& options;$', 'action__path': 'apps/pose_creator/src/main.cc', 'kind': 'jump_list', 'abbr': 'options                    @apps/po..rc/main.cc      const PoseCreatorOptions& options;', 'action__tagname': 'options'}, {'word': 'options', 'action__pattern': '\M^    const PoseInterpolatorOptions& options;$', 'action__path': 'apps/pose_interpolator/src/main.cc', 'kind': 'jump_list', 'abbr': 'options                    @apps/po..rc/main.cc      const PoseInterpolatorOptions& options;', 'action__tagname': 'options'}, {'word': 'options', 'action__pattern': '\M^    const PoseRendererOptions& options;$', 'action__path': 'apps/pose_renderer/include/pose_renderer.h', 'kind': 'jump_list', 'abbr': 'options                    @apps/po..renderer.h      const PoseRendererOptions& options;', 'action__tagname': 'options'}, {'word': 'options', 'action__pattern': '\M^    const PoseViewerOptions& options;$', 'action__path': 'apps/pose_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'options                    @apps/po..rc/main.cc      const PoseViewerOptions& options;', 'action__tagname': 'options'}, {'word': 'orthView', 'action__pattern': '\M^OrthView orthView;$', 'action__path': 'apps/sphere_model_renderer/src/main.cc', 'kind': 'jump_list', 'abbr': 'orthView                   @apps/sp..rc/main.cc  OrthView orthView;', 'action__tagname': 'orthView'}, {'word': 'other', 'action__pattern': '\M^    BackgroundDrawer operator=(const BackgroundDrawer& other) = delete;$', 'action__path': 'modules/gl/include/background_drawer.h', 'kind': 'jump_list', 'abbr': 'other                      @modules..d_drawer.h      BackgroundDrawer operator=(const BackgroundDrawer& other) = delete;', 'action__tagname': 'other'}, {'word': 'other', 'action__pattern': '\M^    BackgroundDrawer(const BackgroundDrawer& other) = delete;$', 'action__path': 'modules/gl/include/background_drawer.h', 'kind': 'jump_list', 'abbr': 'other                      @modules..d_drawer.h      BackgroundDrawer(const BackgroundDrawer& other) = delete;', 'action__tagname': 'other'}, {'word': 'other', 'action__pattern': '\M^    OffscreenBuffer& operator=(const OffscreenBuffer& other) = delete;$', 'action__path': 'modules/gl/include/offscreen_buffer.h', 'kind': 'jump_list', 'abbr': 'other                      @modules..n_buffer.h      OffscreenBuffer& operator=(const OffscreenBuffer& other) = delete;', 'action__tagname': 'other'}, {'word': 'other', 'action__pattern': '\M^    OffscreenBuffer(const OffscreenBuffer& other) = delete;$', 'action__path': 'modules/gl/include/offscreen_buffer.h', 'kind': 'jump_list', 'abbr': 'other                      @modules..n_buffer.h      OffscreenBuffer(const OffscreenBuffer& other) = delete;', 'action__tagname': 'other'}, {'word': 'other', 'action__pattern': '\M^    Shader operator=(Shader& other) = delete;$', 'action__path': 'modules/gl/include/shader.h', 'kind': 'jump_list', 'abbr': 'other                      @modules..e/shader.h      Shader operator=(Shader& other) = delete;', 'action__tagname': 'other'}, {'word': 'other', 'action__pattern': '\M^    Shader(const Shader& other) = delete;$', 'action__path': 'modules/gl/include/shader.h', 'kind': 'jump_list', 'abbr': 'other                      @modules..e/shader.h      Shader(const Shader& other) = delete;', 'action__tagname': 'other'}, {'word': 'other', 'action__pattern': '\M^    Texture operator=(const Texture& other) = delete;$', 'action__path': 'modules/gl/include/texture.h', 'kind': 'jump_list', 'abbr': 'other                      @modules../texture.h      Texture operator=(const Texture& other) = delete;', 'action__tagname': 'other'}, {'word': 'other', 'action__pattern': '\M^    Texture(const Texture& other) = delete;$', 'action__path': 'modules/gl/include/texture.h', 'kind': 'jump_list', 'abbr': 'other                      @modules../texture.h      Texture(const Texture& other) = delete;', 'action__tagname': 'other'}, {'word': 'outOfBounds', 'action__pattern': '\M^    static bool outOfBounds(unsigned int param, double val) {$', 'action__path': 'modules/gl/include/quadric_hand.h', 'kind': 'jump_list', 'abbr': 'outOfBounds                @modules..ric_hand.h      static bool outOfBounds(unsigned int param, double val) {', 'action__tagname': 'outOfBounds'}, {'word': 'outOfBounds', 'action__pattern': '\M^    std::function<bool(unsigned int, double)> outOfBounds;$', 'action__path': 'modules/optim/include/particle_swarm.h', 'kind': 'jump_list', 'abbr': 'outOfBounds                @modules..le_swarm.h      std::function<bool(unsigned int, double)> outOfBounds;', 'action__tagname': 'outOfBounds'}, {'word': 'outputDir', 'action__pattern': '\M^      std::string logfile, configFile, meshFile, outputDir, inputDir, poseFile,$', 'action__path': 'apps/bmvc_project/include/bmvc_options.h', 'kind': 'jump_list', 'abbr': 'outputDir                  @apps/bm.._options.h        std::string logfile, configFile, meshFile, outputDir, inputDir, poseFile,', 'action__tagname': 'outputDir'}, {'word': 'outputDir', 'action__pattern': '\M^    std::string inputDir, outputDir;$', 'action__path': 'apps/pose_interpolator/include/pose_interpolator_options.h', 'kind': 'jump_list', 'abbr': 'outputDir                  @apps/po.._options.h      std::string inputDir, outputDir;', 'action__tagname': 'outputDir'}, {'word': 'outputDir', 'action__pattern': '\M^    std::string configFile, meshFile, outputDir, shaderDir, shaderList;$', 'action__path': 'apps/pose_renderer/include/pose_renderer_options.h', 'kind': 'jump_list', 'abbr': 'outputDir                  @apps/po.._options.h      std::string configFile, meshFile, outputDir, shaderDir, shaderList;', 'action__tagname': 'outputDir'}, {'word': 'outputFile', 'action__pattern': '\M^static std::string outputFile = "";$', 'action__path': 'apps/pose_creator/src/main.cc', 'kind': 'jump_list', 'abbr': 'outputFile                 @apps/po..rc/main.cc  static std::string outputFile = "";', 'action__tagname': 'outputFile'}, {'word': 'outputPose', 'action__pattern': '\M^      std::string configFile, meshFile, imageDir, inputPose, outputPose;$', 'action__path': 'apps/pose_creator/include/pose_creator_options.h', 'kind': 'jump_list', 'abbr': 'outputPose                 @apps/po.._options.h        std::string configFile, meshFile, imageDir, inputPose, outputPose;', 'action__tagname': 'outputPose'}, {'word': 'p', 'action__pattern': '\M^    Pose& operator=(const Pose& p) = default;$', 'action__path': 'modules/core/include/old_pose.h', 'kind': 'jump_list', 'abbr': 'p                          @modules..old_pose.h      Pose& operator=(const Pose& p) = default;', 'action__tagname': 'p'}, {'word': 'p', 'action__pattern': '\M^    Pose(Pose&& p) = default;$', 'action__path': 'modules/core/include/old_pose.h', 'kind': 'jump_list', 'abbr': 'p                          @modules..old_pose.h      Pose(Pose&& p) = default;', 'action__tagname': 'p'}, {'word': 'p', 'action__pattern': '\M^    Pose(const Pose& p) = default;$', 'action__path': 'modules/core/include/old_pose.h', 'kind': 'jump_list', 'abbr': 'p                          @modules..old_pose.h      Pose(const Pose& p) = default;', 'action__tagname': 'p'}, {'word': 'p', 'action__pattern': '\M^    Pose& operator=(const Pose& p) = default;$', 'action__path': 'modules/core/include/pose.h', 'kind': 'jump_list', 'abbr': 'p                          @modules..ude/pose.h      Pose& operator=(const Pose& p) = default;', 'action__tagname': 'p'}, {'word': 'p', 'action__pattern': '\M^    Pose(Pose&& p) = default;$', 'action__path': 'modules/core/include/pose.h', 'kind': 'jump_list', 'abbr': 'p                          @modules..ude/pose.h      Pose(Pose&& p) = default;', 'action__tagname': 'p'}, {'word': 'p', 'action__pattern': '\M^    Pose(const Pose& p) = default;$', 'action__path': 'modules/core/include/pose.h', 'kind': 'jump_list', 'abbr': 'p                          @modules..ude/pose.h      Pose(const Pose& p) = default;', 'action__tagname': 'p'}, {'word': 'p', 'action__pattern': '\M^    PoseShader operator=(const PoseShader& p) = delete;$', 'action__path': 'modules/gl/include/pose_shader.h', 'kind': 'jump_list', 'abbr': 'p                          @modules..e_shader.h      PoseShader operator=(const PoseShader& p) = delete;', 'action__tagname': 'p'}, {'word': 'p', 'action__pattern': '\M^    PoseShader(const PoseShader& p) = delete;$', 'action__path': 'modules/gl/include/pose_shader.h', 'kind': 'jump_list', 'abbr': 'p                          @modules..e_shader.h      PoseShader(const PoseShader& p) = delete;', 'action__tagname': 'p'}, {'word': 'p', 'action__pattern': '\M^    HumanEvaPoseReader& operator=(HumanEvaPoseReader& p) = delete;$', 'action__path': 'modules/io/include/humaneva_pose_reader.h', 'kind': 'jump_list', 'abbr': 'p                          @modules..e_reader.h      HumanEvaPoseReader& operator=(HumanEvaPoseReader& p) = delete;', 'action__tagname': 'p'}, {'word': 'p', 'action__pattern': '\M^    HumanEvaPoseReader(HumanEvaPoseReader&& p) = delete;$', 'action__path': 'modules/io/include/humaneva_pose_reader.h', 'kind': 'jump_list', 'abbr': 'p                          @modules..e_reader.h      HumanEvaPoseReader(HumanEvaPoseReader&& p) = delete;', 'action__tagname': 'p'}, {'word': 'p', 'action__pattern': '\M^    HumanEvaPoseReader(const HumanEvaPoseReader& p) = delete;$', 'action__path': 'modules/io/include/humaneva_pose_reader.h', 'kind': 'jump_list', 'abbr': 'p                          @modules..e_reader.h      HumanEvaPoseReader(const HumanEvaPoseReader& p) = delete;', 'action__tagname': 'p'}, {'word': 'p', 'action__pattern': '\M^    JsonPoseReader& operator=(JsonPoseReader& p) = delete;$', 'action__path': 'modules/io/include/json_pose_reader.h', 'kind': 'jump_list', 'abbr': 'p                          @modules..e_reader.h      JsonPoseReader& operator=(JsonPoseReader& p) = delete;', 'action__tagname': 'p'}, {'word': 'p', 'action__pattern': '\M^    JsonPoseReader(JsonPoseReader&& p) = delete;$', 'action__path': 'modules/io/include/json_pose_reader.h', 'kind': 'jump_list', 'abbr': 'p                          @modules..e_reader.h      JsonPoseReader(JsonPoseReader&& p) = delete;', 'action__tagname': 'p'}, {'word': 'p', 'action__pattern': '\M^    JsonPoseReader(const JsonPoseReader& p) = delete;$', 'action__path': 'modules/io/include/json_pose_reader.h', 'kind': 'jump_list', 'abbr': 'p                          @modules..e_reader.h      JsonPoseReader(const JsonPoseReader& p) = delete;', 'action__tagname': 'p'}, {'word': 'p', 'action__pattern': '\M^    JsonPoseWriter& operator=(JsonPoseWriter& p) = delete;$', 'action__path': 'modules/io/include/json_pose_writer.h', 'kind': 'jump_list', 'abbr': 'p                          @modules..e_writer.h      JsonPoseWriter& operator=(JsonPoseWriter& p) = delete;', 'action__tagname': 'p'}, {'word': 'p', 'action__pattern': '\M^    JsonPoseWriter(JsonPoseWriter&& p) = delete;$', 'action__path': 'modules/io/include/json_pose_writer.h', 'kind': 'jump_list', 'abbr': 'p                          @modules..e_writer.h      JsonPoseWriter(JsonPoseWriter&& p) = delete;', 'action__tagname': 'p'}, {'word': 'p', 'action__pattern': '\M^    JsonPoseWriter(const JsonPoseWriter& p) = delete;$', 'action__path': 'modules/io/include/json_pose_writer.h', 'kind': 'jump_list', 'abbr': 'p                          @modules..e_writer.h      JsonPoseWriter(const JsonPoseWriter& p) = delete;', 'action__tagname': 'p'}, {'word': 'p', 'action__pattern': '\M^    TangPoseReader& operator=(TangPoseReader& p) = delete;$', 'action__path': 'modules/io/include/tang_pose_reader.h', 'kind': 'jump_list', 'abbr': 'p                          @modules..e_reader.h      TangPoseReader& operator=(TangPoseReader& p) = delete;', 'action__tagname': 'p'}, {'word': 'p', 'action__pattern': '\M^    TangPoseReader(TangPoseReader&& p) = delete;$', 'action__path': 'modules/io/include/tang_pose_reader.h', 'kind': 'jump_list', 'abbr': 'p                          @modules..e_reader.h      TangPoseReader(TangPoseReader&& p) = delete;', 'action__tagname': 'p'}, {'word': 'p', 'action__pattern': '\M^    TangPoseReader(const TangPoseReader& p) = delete;$', 'action__path': 'modules/io/include/tang_pose_reader.h', 'kind': 'jump_list', 'abbr': 'p                          @modules..e_reader.h      TangPoseReader(const TangPoseReader& p) = delete;', 'action__tagname': 'p'}, {'word': 'p', 'action__pattern': '\M^    WenpingPoseReader& operator=(WenpingPoseReader& p) = delete;$', 'action__path': 'modules/io/include/wenping_pose_reader.h', 'kind': 'jump_list', 'abbr': 'p                          @modules..e_reader.h      WenpingPoseReader& operator=(WenpingPoseReader& p) = delete;', 'action__tagname': 'p'}, {'word': 'p', 'action__pattern': '\M^    WenpingPoseReader(WenpingPoseReader&& p) = delete;$', 'action__path': 'modules/io/include/wenping_pose_reader.h', 'kind': 'jump_list', 'abbr': 'p                          @modules..e_reader.h      WenpingPoseReader(WenpingPoseReader&& p) = delete;', 'action__tagname': 'p'}, {'word': 'p', 'action__pattern': '\M^    WenpingPoseReader(const WenpingPoseReader& p) = delete;$', 'action__path': 'modules/io/include/wenping_pose_reader.h', 'kind': 'jump_list', 'abbr': 'p                          @modules..e_reader.h      WenpingPoseReader(const WenpingPoseReader& p) = delete;', 'action__tagname': 'p'}, {'word': 'p1', 'action__pattern': '\M^core::Pose<glm::quat> p1;$', 'action__path': 'apps/sphere_model_renderer/src/main.cc', 'kind': 'jump_list', 'abbr': 'p1                         @apps/sp..rc/main.cc  core::Pose<glm::quat> p1;', 'action__tagname': 'p1'}, {'word': 'p2', 'action__pattern': '\M^core::Pose<glm::quat> p2;$', 'action__path': 'apps/sphere_model_renderer/src/main.cc', 'kind': 'jump_list', 'abbr': 'p2                         @apps/sp..rc/main.cc  core::Pose<glm::quat> p2;', 'action__tagname': 'p2'}, {'word': 'paethPredictor', 'action__pattern': '\M^static unsigned char paethPredictor(short a, short b, short c)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'paethPredictor             @ext/lod..odepng.cpp  static unsigned char paethPredictor(short a, short b, short c)', 'action__tagname': 'paethPredictor'}, {'word': 'palette', 'action__pattern': '\M^  unsigned char* palette; /*size 1024. Remember up to the first 256 RGBA colors*/$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'palette                    @ext/lod..odepng.cpp    unsigned char* palette; \/*size 1024. Remember up to the first 256 RGBA colors*\/', 'action__tagname': 'palette'}, {'word': 'palette', 'action__pattern': '\M^  unsigned char* palette; /*palette in RGBARGBA... order. When allocated, must be either 0, or have size 1024*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'palette                    @ext/lod../lodepng.h    unsigned char* palette; \/*palette in RGBARGBA... order. When allocated, must be either 0, or have size 1024*\/', 'action__tagname': 'palette'}, {'word': 'palettesize', 'action__pattern': '\M^  size_t palettesize; /*palette size in number of colors (amount of bytes is 4 * palettesize)*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'palettesize                @ext/lod../lodepng.h    size_t palettesize; \/*palette size in number of colors (amount of bytes is 4 * palettesize)*\/', 'action__tagname': 'palettesize'}, {'word': 'parent', 'action__pattern': '\M^    std::shared_ptr<Bone> parent;$', 'action__path': 'modules/core/include/bone.h', 'kind': 'jump_list', 'abbr': 'parent                     @modules..ude/bone.h      std::shared_ptr<Bone> parent;', 'action__tagname': 'parent'}, {'word': 'parent', 'action__pattern': '\M^    const std::shared_ptr<Joint> parent;$', 'action__path': 'modules/core/include/old_joint.h', 'kind': 'jump_list', 'abbr': 'parent                     @modules..ld_joint.h      const std::shared_ptr<Joint> parent;', 'action__tagname': 'parent'}, {'word': 'parent', 'action__pattern': '\M^    std::shared_ptr<LatentTreeNode> parent;$', 'action__path': 'modules/ml/include/latent_tree_node.h', 'kind': 'jump_list', 'abbr': 'parent                     @modules..ree_node.h      std::shared_ptr<LatentTreeNode> parent;', 'action__tagname': 'parent'}, {'word': 'parse', 'action__pattern': '\M^  bool BMVCOptions::parse(int argc, char* argv[])$', 'action__path': 'apps/bmvc_project/src/bmvc_options.cc', 'kind': 'jump_list', 'abbr': 'parse                      @apps/bm..options.cc    bool BMVCOptions::parse(int argc, char* argv[])', 'action__tagname': 'parse'}, {'word': 'parse', 'action__pattern': '\M^  bool DepthShaderViewerOptions::parse(int argc, char* argv[])$', 'action__path': 'apps/depth_shader_viewer/src/depth_shader_viewer_options.cc', 'kind': 'jump_list', 'abbr': 'parse                      @apps/de..options.cc    bool DepthShaderViewerOptions::parse(int argc, char* argv[])', 'action__tagname': 'parse'}, {'word': 'parse', 'action__pattern': '\M^  bool EdgeShaderViewerOptions::parse(int argc, char* argv[])$', 'action__path': 'apps/edge_shader_viewer/src/edge_shader_viewer_options.cc', 'kind': 'jump_list', 'abbr': 'parse                      @apps/ed..options.cc    bool EdgeShaderViewerOptions::parse(int argc, char* argv[])', 'action__tagname': 'parse'}, {'word': 'parse', 'action__pattern': '\M^  bool GBufferViewerOptions::parse(int argc, char* argv[])$', 'action__path': 'apps/gbuffer_viewer/src/gbuffer_viewer_options.cc', 'kind': 'jump_list', 'abbr': 'parse                      @apps/gb..options.cc    bool GBufferViewerOptions::parse(int argc, char* argv[])', 'action__tagname': 'parse'}, {'word': 'parse', 'action__pattern': '\M^  bool MCMeshViewerOptions::parse(int argc, char* argv[])$', 'action__path': 'apps/multicam_mesh_viewer/src/mc_mesh_viewer_options.cc', 'kind': 'jump_list', 'abbr': 'parse                      @apps/mu..options.cc    bool MCMeshViewerOptions::parse(int argc, char* argv[])', 'action__tagname': 'parse'}, {'word': 'parse', 'action__pattern': '\M^  bool PoseCreatorOptions::parse(int argc, char* argv[])$', 'action__path': 'apps/pose_creator/src/pose_creator_options.cc', 'kind': 'jump_list', 'abbr': 'parse                      @apps/po..options.cc    bool PoseCreatorOptions::parse(int argc, char* argv[])', 'action__tagname': 'parse'}, {'word': 'parse', 'action__pattern': '\M^bool PoseInterpolatorOptions::parse(int argc, char* argv[]) {$', 'action__path': 'apps/pose_interpolator/src/pose_interpolator_options.cc', 'kind': 'jump_list', 'abbr': 'parse                      @apps/po..options.cc  bool PoseInterpolatorOptions::parse(int argc, char* argv[]) {', 'action__tagname': 'parse'}, {'word': 'parse', 'action__pattern': '\M^bool PoseRendererOptions::parse(int argc, char* argv[])$', 'action__path': 'apps/pose_renderer/src/pose_renderer_options.cc', 'kind': 'jump_list', 'abbr': 'parse                      @apps/po..options.cc  bool PoseRendererOptions::parse(int argc, char* argv[])', 'action__tagname': 'parse'}, {'word': 'parse', 'action__pattern': '\M^  bool PoseViewerOptions::parse(int argc, char* argv[])$', 'action__path': 'apps/pose_viewer/src/pose_viewer_options.cc', 'kind': 'jump_list', 'abbr': 'parse                      @apps/po..options.cc    bool PoseViewerOptions::parse(int argc, char* argv[])', 'action__tagname': 'parse'}, {'word': 'particleVariance', 'action__pattern': '\M^double particleVariance(unsigned int dimension) {$', 'action__path': 'apps/bmvc_project/src/main.cc', 'kind': 'jump_list', 'abbr': 'particleVariance           @apps/bm..rc/main.cc  double particleVariance(unsigned int dimension) {', 'action__tagname': 'particleVariance'}, {'word': 'particles', 'action__pattern': '\M^    std::vector<Particle> particles;$', 'action__path': 'modules/optim/include/particle_swarm.h', 'kind': 'jump_list', 'abbr': 'particles                  @modules..le_swarm.h      std::vector<Particle> particles;', 'action__tagname': 'particles'}, {'word': 'perfect', 'action__pattern': '\M^    std::vector<TrainingData<int>> homo, perfect, unhelpful, moreHelpful;$', 'action__path': 'modules/ml/test/discrete_information_gain_test.cc', 'kind': 'jump_list', 'abbr': 'perfect                    @modules..in_test.cc      std::vector<TrainingData<int>> homo, perfect, unhelpful, moreHelpful;', 'action__tagname': 'perfect'}, {'word': 'perspectiveParams', 'action__pattern': '\M^    static const float perspectiveParams[numCameras][4];$', 'action__path': 'modules/core/include/camera_calibration.h', 'kind': 'jump_list', 'abbr': 'perspectiveParams          @modules..ibration.h      static const float perspectiveParams[numCameras][4];', 'action__tagname': 'perspectiveParams'}, {'word': 'perspectiveParams', 'action__pattern': '\M^const float CameraCalibration::perspectiveParams[numCameras][4] = {$', 'action__path': 'modules/core/src/camera_calibration.cc', 'kind': 'jump_list', 'abbr': 'perspectiveParams          @modules..bration.cc  const float CameraCalibration::perspectiveParams[numCameras][4] = {', 'action__tagname': 'perspectiveParams'}, {'word': 'phys_defined', 'action__pattern': '\M^  unsigned phys_defined; /*if 0, there is no pHYs chunk and the values below are undefined, if 1 else there is one*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'phys_defined               @ext/lod../lodepng.h    unsigned phys_defined; \/*if 0, there is no pHYs chunk and the values below are undefined, if 1 else there is one*\/', 'action__tagname': 'phys_defined'}, {'word': 'phys_unit', 'action__pattern': '\M^  unsigned phys_unit; /*may be 0 (unknown unit) or 1 (metre)*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'phys_unit                  @ext/lod../lodepng.h    unsigned phys_unit; \/*may be 0 (unknown unit) or 1 (metre)*\/', 'action__tagname': 'phys_unit'}, {'word': 'phys_x', 'action__pattern': '\M^  unsigned phys_x; /*pixels per unit in x direction*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'phys_x                     @ext/lod../lodepng.h    unsigned phys_x; \/*pixels per unit in x direction*\/', 'action__tagname': 'phys_x'}, {'word': 'phys_y', 'action__pattern': '\M^  unsigned phys_y; /*pixels per unit in y direction*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'phys_y                     @ext/lod../lodepng.h    unsigned phys_y; \/*pixels per unit in y direction*\/', 'action__tagname': 'phys_y'}, {'word': 'pipeline', 'action__pattern': '\M^    gl::Pipeline pipeline;$', 'action__path': 'apps/pose_renderer/include/pose_renderer.h', 'kind': 'jump_list', 'abbr': 'pipeline                   @apps/po..renderer.h      gl::Pipeline pipeline;', 'action__tagname': 'pipeline'}, {'word': 'pos', 'action__pattern': '\M^    glm::vec3 pos;$', 'action__path': 'modules/geom/include/sphere.h', 'kind': 'jump_list', 'abbr': 'pos                        @modules..e/sphere.h      glm::vec3 pos;', 'action__tagname': 'pos'}, {'word': 'pos', 'action__pattern': '\M^    glm::vec3 eye, pos, up;$', 'action__path': 'modules/gl/include/camera.h', 'kind': 'jump_list', 'abbr': 'pos                        @modules..e/camera.h      glm::vec3 eye, pos, up;', 'action__tagname': 'pos'}, {'word': 'pos', 'action__pattern': '\M^      glm::vec3 pos;$', 'action__path': 'modules/gl/include/pipeline.h', 'kind': 'jump_list', 'abbr': 'pos                        @modules..pipeline.h        glm::vec3 pos;', 'action__tagname': 'pos'}, {'word': 'pos', 'action__pattern': '\M^        std::vector<double> pos;$', 'action__path': 'modules/optim/include/particle_swarm.h', 'kind': 'jump_list', 'abbr': 'pos                        @modules..le_swarm.h          std::vector<double> pos;', 'action__tagname': 'pos'}, {'word': 'pose', 'action__pattern': '\M^    Pose<glm::quat> pose;$', 'action__path': 'apps/depth_shader_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'pose                       @apps/de..rc/main.cc      Pose<glm::quat> pose;', 'action__tagname': 'pose'}, {'word': 'pose', 'action__pattern': '\M^    Pose<glm::quat> pose;$', 'action__path': 'apps/edge_shader_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'pose                       @apps/ed..rc/main.cc      Pose<glm::quat> pose;', 'action__tagname': 'pose'}, {'word': 'pose', 'action__pattern': '\M^    Pose<glm::quat> pose;$', 'action__path': 'apps/gbuffer_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'pose                       @apps/gb..rc/main.cc      Pose<glm::quat> pose;', 'action__tagname': 'pose'}, {'word': 'pose', 'action__pattern': '\M^    Pose<glm::quat> pose;$', 'action__path': 'apps/multicam_mesh_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'pose                       @apps/mu..rc/main.cc      Pose<glm::quat> pose;', 'action__tagname': 'pose'}, {'word': 'pose', 'action__pattern': '\M^static unsigned int pose;$', 'action__path': 'apps/pose_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'pose                       @apps/po..rc/main.cc  static unsigned int pose;', 'action__tagname': 'pose'}, {'word': 'pose', 'action__pattern': '\M^    std::map<std::string, T> pose;$', 'action__path': 'modules/core/include/pose.h', 'kind': 'jump_list', 'abbr': 'pose                       @modules..ude/pose.h      std::map<std::string, T> pose;', 'action__tagname': 'pose'}, {'word': 'poseCount', 'action__pattern': '\M^    unsigned int poseCount;$', 'action__path': 'apps/pose_interpolator/include/pose_interpolator_options.h', 'kind': 'jump_list', 'abbr': 'poseCount                  @apps/po.._options.h      unsigned int poseCount;', 'action__tagname': 'poseCount'}, {'word': 'poseFile', 'action__pattern': '\M^      std::string logfile, configFile, meshFile, outputDir, inputDir, poseFile,$', 'action__path': 'apps/bmvc_project/include/bmvc_options.h', 'kind': 'jump_list', 'abbr': 'poseFile                   @apps/bm.._options.h        std::string logfile, configFile, meshFile, outputDir, inputDir, poseFile,', 'action__tagname': 'poseFile'}, {'word': 'poseFile', 'action__pattern': '\M^                  poseFile,$', 'action__path': 'apps/depth_shader_viewer/include/depth_shader_viewer_options.h', 'kind': 'jump_list', 'abbr': 'poseFile                   @apps/de.._options.h                    poseFile,', 'action__tagname': 'poseFile'}, {'word': 'poseFile', 'action__pattern': '\M^                  poseFile,$', 'action__path': 'apps/edge_shader_viewer/include/edge_shader_viewer_options.h', 'kind': 'jump_list', 'abbr': 'poseFile                   @apps/ed.._options.h                    poseFile,', 'action__tagname': 'poseFile'}, {'word': 'poseFile', 'action__pattern': '\M^                  poseFile,$', 'action__path': 'apps/gbuffer_viewer/include/gbuffer_viewer_options.h', 'kind': 'jump_list', 'abbr': 'poseFile                   @apps/gb.._options.h                    poseFile,', 'action__tagname': 'poseFile'}, {'word': 'poseFile', 'action__pattern': '\M^      std::string configFile, meshFile, poseFile, fragShader, vertShader;$', 'action__path': 'apps/multicam_mesh_viewer/include/mc_mesh_viewer_options.h', 'kind': 'jump_list', 'abbr': 'poseFile                   @apps/mu.._options.h        std::string configFile, meshFile, poseFile, fragShader, vertShader;', 'action__tagname': 'poseFile'}, {'word': 'poseFiles', 'action__pattern': '\M^    std::vector<std::pair<std::string, std::string>> poseFiles;$', 'action__path': 'apps/pose_renderer/include/pose_renderer_options.h', 'kind': 'jump_list', 'abbr': 'poseFiles                  @apps/po.._options.h      std::vector<std::pair<std::string, std::string>> poseFiles;', 'action__tagname': 'poseFiles'}, {'word': 'poseShader', 'action__pattern': '\M^    PoseShader poseShader;$', 'action__path': 'apps/pose_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'poseShader                 @apps/po..rc/main.cc      PoseShader poseShader;', 'action__tagname': 'poseShader'}, {'word': 'posedSpheres', 'action__pattern': '\M^    std::vector<geom::Sphere<double>> posedSpheres;$', 'action__path': 'modules/core/include/sphere_model.h', 'kind': 'jump_list', 'abbr': 'posedSpheres               @modules..re_model.h      std::vector<geom::Sphere<double>> posedSpheres;', 'action__tagname': 'posedSpheres'}, {'word': 'poses', 'action__pattern': '\M^      std::vector<std::string> poses;$', 'action__path': 'apps/pose_viewer/include/pose_viewer_options.h', 'kind': 'jump_list', 'abbr': 'poses                      @apps/po.._options.h        std::vector<std::string> poses;', 'action__tagname': 'poses'}, {'word': 'position', 'action__pattern': '\M^glm::vec3 position, target;$', 'action__path': 'apps/pose_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'position                   @apps/po..rc/main.cc  glm::vec3 position, target;', 'action__tagname': 'position'}, {'word': 'positionBuffer', 'action__pattern': '\M^    const unsigned int positionBuffer = 1;$', 'action__path': 'modules/gl/include/instanced_mesh_renderer.h', 'kind': 'jump_list', 'abbr': 'positionBuffer             @modules..renderer.h      const unsigned int positionBuffer = 1;', 'action__tagname': 'positionBuffer'}, {'word': 'positionBuffer', 'action__pattern': '\M^    const unsigned int positionBuffer = 1;$', 'action__path': 'modules/gl/include/instanced_shape_renderer.h', 'kind': 'jump_list', 'abbr': 'positionBuffer             @modules..renderer.h      const unsigned int positionBuffer = 1;', 'action__tagname': 'positionBuffer'}, {'word': 'positionBuffer', 'action__pattern': '\M^    const unsigned int positionBuffer = 1;$', 'action__path': 'modules/gl/include/mesh_renderer.h', 'kind': 'jump_list', 'abbr': 'positionBuffer             @modules..renderer.h      const unsigned int positionBuffer = 1;', 'action__tagname': 'positionBuffer'}, {'word': 'positionBuffer', 'action__pattern': '\M^    const unsigned int positionBuffer = 1;$', 'action__path': 'modules/gl/include/shape_renderer.h', 'kind': 'jump_list', 'abbr': 'positionBuffer             @modules..renderer.h      const unsigned int positionBuffer = 1;', 'action__tagname': 'positionBuffer'}, {'word': 'positionLocation', 'action__pattern': '\M^    const unsigned int positionLocation = 0;$', 'action__path': 'modules/gl/include/instanced_mesh_renderer.h', 'kind': 'jump_list', 'abbr': 'positionLocation           @modules..renderer.h      const unsigned int positionLocation = 0;', 'action__tagname': 'positionLocation'}, {'word': 'positionLocation', 'action__pattern': '\M^    const unsigned int positionLocation = 0;$', 'action__path': 'modules/gl/include/instanced_shape_renderer.h', 'kind': 'jump_list', 'abbr': 'positionLocation           @modules..renderer.h      const unsigned int positionLocation = 0;', 'action__tagname': 'positionLocation'}, {'word': 'positionLocation', 'action__pattern': '\M^    const unsigned int positionLocation = 0;$', 'action__path': 'modules/gl/include/mesh_renderer.h', 'kind': 'jump_list', 'abbr': 'positionLocation           @modules..renderer.h      const unsigned int positionLocation = 0;', 'action__tagname': 'positionLocation'}, {'word': 'positionLocation', 'action__pattern': '\M^    const unsigned int positionLocation = 0;$', 'action__path': 'modules/gl/include/shape_renderer.h', 'kind': 'jump_list', 'abbr': 'positionLocation           @modules..renderer.h      const unsigned int positionLocation = 0;', 'action__tagname': 'positionLocation'}, {'word': 'positions', 'action__pattern': '\M^  const std::vector<glm::vec3>& positions;$', 'action__path': 'apps/sphere_model_optim/src/main.cc', 'kind': 'jump_list', 'abbr': 'positions                  @apps/sp..rc/main.cc    const std::vector<glm::vec3>& positions;', 'action__tagname': 'positions'}, {'word': 'positions', 'action__pattern': '\M^      positions = 0, normals, texcoords, colours, depth$', 'action__path': 'modules/gl/include/gbuffer.h', 'kind': 'jump_list', 'abbr': 'positions                  @modules../gbuffer.h        positions = 0, normals, texcoords, colours, depth', 'action__tagname': 'positions'}, {'word': 'positions', 'action__pattern': '\M^    std::vector<glm::vec3> positions;$', 'action__path': 'modules/gl/include/gl_sphere.h', 'kind': 'jump_list', 'abbr': 'positions                  @modules..l_sphere.h      std::vector<glm::vec3> positions;', 'action__tagname': 'positions'}, {'word': 'positions', 'action__pattern': '\M^    std::vector<glm::vec3> positions;$', 'action__path': 'modules/gl/include/mesh.h', 'kind': 'jump_list', 'abbr': 'positions                  @modules..ude/mesh.h      std::vector<glm::vec3> positions;', 'action__tagname': 'positions'}, {'word': 'positions', 'action__pattern': '\M^    std::vector<glm::vec3> positions;$', 'action__path': 'modules/gl/include/prism.h', 'kind': 'jump_list', 'abbr': 'positions                  @modules..de/prism.h      std::vector<glm::vec3> positions;', 'action__tagname': 'positions'}, {'word': 'positions', 'action__pattern': '\M^    std::vector<glm::vec3> positions;$', 'action__path': 'modules/gl/include/surface.h', 'kind': 'jump_list', 'abbr': 'positions                  @modules../surface.h      std::vector<glm::vec3> positions;', 'action__tagname': 'positions'}, {'word': 'positive', 'action__pattern': '\M^        std::size_t positive;$', 'action__path': 'ext/objective_functions/xing/aig/colour_detector.hpp', 'kind': 'jump_list', 'abbr': 'positive                   @ext/obj..tector.hpp          std::size_t positive;', 'action__tagname': 'positive'}, {'word': 'postProcessScanlines', 'action__pattern': '\M^static unsigned postProcessScanlines(unsigned char* out, unsigned char* in,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'postProcessScanlines       @ext/lod..odepng.cpp  static unsigned postProcessScanlines(unsigned char* out, unsigned char* in,', 'action__tagname': 'postProcessScanlines'}, {'word': 'preProcessScanlines', 'action__pattern': '\M^static unsigned preProcessScanlines(unsigned char** out, size_t* outsize, const unsigned char* in,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'preProcessScanlines        @ext/lod..odepng.cpp  static unsigned preProcessScanlines(unsigned char** out, size_t* outsize, const unsigned char* in,', 'action__tagname': 'preProcessScanlines'}, {'word': 'predefined_filters', 'action__pattern': '\M^  const unsigned char* predefined_filters;$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'predefined_filters         @ext/lod../lodepng.h    const unsigned char* predefined_filters;', 'action__tagname': 'predefined_filters'}, {'word': 'print', 'action__pattern': '\M^void Skeleton::print() const {$', 'action__path': 'modules/core/src/skeleton.cc', 'kind': 'jump_list', 'abbr': 'print                      @modules..keleton.cc  void Skeleton::print() const {', 'action__tagname': 'print'}, {'word': 'print', 'action__pattern': '\M^    void print() {$', 'action__path': 'modules/ml/include/classifier_leaf.h', 'kind': 'jump_list', 'abbr': 'print                      @modules..ier_leaf.h      void print() {', 'action__tagname': 'print'}, {'word': 'printHelp', 'action__pattern': '\M^  void BMVCOptions::printHelp() const$', 'action__path': 'apps/bmvc_project/src/bmvc_options.cc', 'kind': 'jump_list', 'abbr': 'printHelp                  @apps/bm..options.cc    void BMVCOptions::printHelp() const', 'action__tagname': 'printHelp'}, {'word': 'printHelp', 'action__pattern': '\M^  void DepthShaderViewerOptions::printHelp() const$', 'action__path': 'apps/depth_shader_viewer/src/depth_shader_viewer_options.cc', 'kind': 'jump_list', 'abbr': 'printHelp                  @apps/de..options.cc    void DepthShaderViewerOptions::printHelp() const', 'action__tagname': 'printHelp'}, {'word': 'printHelp', 'action__pattern': '\M^  void EdgeShaderViewerOptions::printHelp() const$', 'action__path': 'apps/edge_shader_viewer/src/edge_shader_viewer_options.cc', 'kind': 'jump_list', 'abbr': 'printHelp                  @apps/ed..options.cc    void EdgeShaderViewerOptions::printHelp() const', 'action__tagname': 'printHelp'}, {'word': 'printHelp', 'action__pattern': '\M^  void GBufferViewerOptions::printHelp() const$', 'action__path': 'apps/gbuffer_viewer/src/gbuffer_viewer_options.cc', 'kind': 'jump_list', 'abbr': 'printHelp                  @apps/gb..options.cc    void GBufferViewerOptions::printHelp() const', 'action__tagname': 'printHelp'}, {'word': 'printHelp', 'action__pattern': '\M^  void MCMeshViewerOptions::printHelp() const$', 'action__path': 'apps/multicam_mesh_viewer/src/mc_mesh_viewer_options.cc', 'kind': 'jump_list', 'abbr': 'printHelp                  @apps/mu..options.cc    void MCMeshViewerOptions::printHelp() const', 'action__tagname': 'printHelp'}, {'word': 'printHelp', 'action__pattern': '\M^  void PoseCreatorOptions::printHelp() const$', 'action__path': 'apps/pose_creator/src/pose_creator_options.cc', 'kind': 'jump_list', 'abbr': 'printHelp                  @apps/po..options.cc    void PoseCreatorOptions::printHelp() const', 'action__tagname': 'printHelp'}, {'word': 'printHelp', 'action__pattern': '\M^void PoseInterpolatorOptions::printHelp() const {$', 'action__path': 'apps/pose_interpolator/src/pose_interpolator_options.cc', 'kind': 'jump_list', 'abbr': 'printHelp                  @apps/po..options.cc  void PoseInterpolatorOptions::printHelp() const {', 'action__tagname': 'printHelp'}, {'word': 'printHelp', 'action__pattern': '\M^void PoseRendererOptions::printHelp() const$', 'action__path': 'apps/pose_renderer/src/pose_renderer_options.cc', 'kind': 'jump_list', 'abbr': 'printHelp                  @apps/po..options.cc  void PoseRendererOptions::printHelp() const', 'action__tagname': 'printHelp'}, {'word': 'printHelp', 'action__pattern': '\M^  void PoseViewerOptions::printHelp() const$', 'action__path': 'apps/pose_viewer/src/pose_viewer_options.cc', 'kind': 'jump_list', 'abbr': 'printHelp                  @apps/po..options.cc    void PoseViewerOptions::printHelp() const', 'action__tagname': 'printHelp'}, {'word': 'printInfo', 'action__pattern': '\M^    static void printInfo() {$', 'action__path': 'modules/gl/include/gl_utility.h', 'kind': 'jump_list', 'abbr': 'printInfo                  @modules.._utility.h      static void printInfo() {', 'action__tagname': 'printInfo'}, {'word': 'printJoint', 'action__pattern': '\M^void Joint::printJoint(int depth) const {$', 'action__path': 'modules/core/src/old_joint.cc', 'kind': 'jump_list', 'abbr': 'printJoint                 @modules..d_joint.cc  void Joint::printJoint(int depth) const {', 'action__tagname': 'printJoint'}, {'word': 'printMatrix', 'action__pattern': '\M^void printMatrix(const glm::mat4& mat) {$', 'action__path': 'modules/core/src/sphere_model.cc', 'kind': 'jump_list', 'abbr': 'printMatrix                @modules..e_model.cc  void printMatrix(const glm::mat4& mat) {', 'action__tagname': 'printMatrix'}, {'word': 'printPose', 'action__pattern': '\M^void Pose::printPose() const {$', 'action__path': 'modules/core/src/old_pose.cc', 'kind': 'jump_list', 'abbr': 'printPose                  @modules..ld_pose.cc  void Pose::printPose() const {', 'action__tagname': 'printPose'}, {'word': 'printQuat', 'action__pattern': '\M^void printQuat(const glm::quat& q) {$', 'action__path': 'apps/pose_interpolator/src/main.cc', 'kind': 'jump_list', 'abbr': 'printQuat                  @apps/po..rc/main.cc  void printQuat(const glm::quat& q) {', 'action__tagname': 'printQuat'}, {'word': 'printRecurse', 'action__pattern': '\M^void Pose::printRecurse(const std::shared_ptr<Joint>& j, int depth) const {$', 'action__path': 'modules/core/src/old_pose.cc', 'kind': 'jump_list', 'abbr': 'printRecurse               @modules..ld_pose.cc  void Pose::printRecurse(const std::shared_ptr<Joint>& j, int depth) const {', 'action__tagname': 'printRecurse'}, {'word': 'printRecursive', 'action__pattern': '\M^void printRecursive(const core::Bone& b, int depth) {$', 'action__path': 'modules/core/src/skeleton.cc', 'kind': 'jump_list', 'abbr': 'printRecursive             @modules..keleton.cc  void printRecursive(const core::Bone& b, int depth) {', 'action__tagname': 'printRecursive'}, {'word': 'printTree', 'action__pattern': '\M^void LatentTreeModel::printTree() const {$', 'action__path': 'modules/ml/src/latent_tree_model.cc', 'kind': 'jump_list', 'abbr': 'printTree                  @modules..e_model.cc  void LatentTreeModel::printTree() const {', 'action__tagname': 'printTree'}, {'word': 'printTreeRec', 'action__pattern': '\M^void LatentTreeModel::printTreeRec(const LatentTreeNode& node, unsigned int depth)$', 'action__path': 'modules/ml/src/latent_tree_model.cc', 'kind': 'jump_list', 'abbr': 'printTreeRec               @modules..e_model.cc  void LatentTreeModel::printTreeRec(const LatentTreeNode& node, unsigned int depth)', 'action__tagname': 'printTreeRec'}, {'word': 'print_spheres', 'action__pattern': '\M^void print_spheres(double* spheres, unsigned int num_spheres, unsigned int num_params) {$', 'action__path': 'apps/sphere_model_optim/src/main.cc', 'kind': 'jump_list', 'abbr': 'print_spheres              @apps/sp..rc/main.cc  void print_spheres(double* spheres, unsigned int num_spheres, unsigned int num_params) {', 'action__tagname': 'print_spheres'}, {'word': 'print_spheres', 'action__pattern': '\M^void print_spheres(double** spheres, unsigned int num_spheres) {$', 'action__path': 'apps/sphere_model_optim/src/main.cc', 'kind': 'jump_list', 'abbr': 'print_spheres              @apps/sp..rc/main.cc  void print_spheres(double** spheres, unsigned int num_spheres) {', 'action__tagname': 'print_spheres'}, {'word': 'prism', 'action__pattern': '\M^    Prism prism;$', 'action__path': 'modules/gl/include/cuboid.h', 'kind': 'jump_list', 'abbr': 'prism                      @modules..e/cuboid.h      Prism prism;', 'action__tagname': 'prism'}, {'word': 'probabilities', 'action__pattern': '\M^    std::vector<std::vector<double>> probabilities;$', 'action__path': 'modules/ml/include/bayes_classifier.h', 'kind': 'jump_list', 'abbr': 'probabilities              @modules..assifier.h      std::vector<std::vector<double>> probabilities;', 'action__tagname': 'probabilities'}, {'word': 'procCmdLine', 'action__pattern': '\M^void procCmdLine(int argc, char** argv)$', 'action__path': 'ext/objective_functions/prog/colour-detect/main.cc', 'kind': 'jump_list', 'abbr': 'procCmdLine                @ext/obj..ct/main.cc  void procCmdLine(int argc, char** argv)', 'action__tagname': 'procCmdLine'}, {'word': 'processArgs', 'action__pattern': '\M^bool processArgs(int argc, char* argv[],$', 'action__path': 'apps/lrt_tester/src/main.cc', 'kind': 'jump_list', 'abbr': 'processArgs                @apps/lr..rc/main.cc  bool processArgs(int argc, char* argv[],', 'action__tagname': 'processArgs'}, {'word': 'processArgs', 'action__pattern': '\M^bool processArgs(int argc, char* argv[],$', 'action__path': 'apps/sph_renderer/src/main.cc', 'kind': 'jump_list', 'abbr': 'processArgs                @apps/sp..rc/main.cc  bool processArgs(int argc, char* argv[],', 'action__tagname': 'processArgs'}, {'word': 'processArgs', 'action__pattern': '\M^bool processArgs(int argc, char* argv[],$', 'action__path': 'apps/sphere_model_maker/src/main.cc', 'kind': 'jump_list', 'abbr': 'processArgs                @apps/sp..rc/main.cc  bool processArgs(int argc, char* argv[],', 'action__tagname': 'processArgs'}, {'word': 'processArgs', 'action__pattern': '\M^bool processArgs(int argc, char* argv[],$', 'action__path': 'apps/sphere_model_optim/src/main.cc', 'kind': 'jump_list', 'abbr': 'processArgs                @apps/sp..rc/main.cc  bool processArgs(int argc, char* argv[],', 'action__tagname': 'processArgs'}, {'word': 'processArgs', 'action__pattern': '\M^bool processArgs(int argc, char* argv[],$', 'action__path': 'apps/sphere_model_renderer/src/main.cc', 'kind': 'jump_list', 'abbr': 'processArgs                @apps/sp..rc/main.cc  bool processArgs(int argc, char* argv[],', 'action__tagname': 'processArgs'}, {'word': 'processArgs', 'action__pattern': '\M^bool processArgs(int argc, char* argv[], $', 'action__path': 'apps/tang_lrf/src/main.cc', 'kind': 'jump_list', 'abbr': 'processArgs                @apps/ta..rc/main.cc  bool processArgs(int argc, char* argv[], ', 'action__tagname': 'processArgs'}, {'word': 'processCmdLine', 'action__pattern': '\M^void processCmdLine(int argc, char* argv[])$', 'action__path': 'ext/objective_functions/prog/depthseg/main.cc', 'kind': 'jump_list', 'abbr': 'processCmdLine             @ext/obj..eg/main.cc  void processCmdLine(int argc, char* argv[])', 'action__tagname': 'processCmdLine'}, {'word': 'processCmdLine', 'action__pattern': '\M^void processCmdLine(int argc, char* argv[])$', 'action__path': 'ext/objective_functions/prog/erolation/main.cc', 'kind': 'jump_list', 'abbr': 'processCmdLine             @ext/obj..on/main.cc  void processCmdLine(int argc, char* argv[])', 'action__tagname': 'processCmdLine'}, {'word': 'processCmdLine', 'action__pattern': '\M^void processCmdLine(int argc, char* argv[])$', 'action__path': 'ext/objective_functions/prog/segimage/main.cc', 'kind': 'jump_list', 'abbr': 'processCmdLine             @ext/obj..ge/main.cc  void processCmdLine(int argc, char* argv[])', 'action__tagname': 'processCmdLine'}, {'word': 'processCmdLine', 'action__pattern': '\M^void processCmdLine(int argc, char* argv[])$', 'action__path': 'ext/objective_functions/prog/showedge/main.cc', 'kind': 'jump_list', 'abbr': 'processCmdLine             @ext/obj..ge/main.cc  void processCmdLine(int argc, char* argv[])', 'action__tagname': 'processCmdLine'}, {'word': 'processOptions', 'action__pattern': '\M^po::variables_map processOptions(int argc, char* argv[]) {$', 'action__path': 'apps/compare_poses/src/main.cc', 'kind': 'jump_list', 'abbr': 'processOptions             @apps/co..rc/main.cc  po::variables_map processOptions(int argc, char* argv[]) {', 'action__tagname': 'processOptions'}, {'word': 'program', 'action__pattern': '\M^    GLuint program;$', 'action__path': 'modules/gl/include/shader_program.h', 'kind': 'jump_list', 'abbr': 'program                    @modules.._program.h      GLuint program;', 'action__tagname': 'program'}, {'word': 'programMode', 'action__pattern': '\M^enum {TRAIN, DETECT, UNKNOWN} programMode = UNKNOWN;$', 'action__path': 'ext/objective_functions/prog/colour-detect/main.cc', 'kind': 'jump_list', 'abbr': 'programMode                @ext/obj..ct/main.cc  enum {TRAIN, DETECT, UNKNOWN} programMode = UNKNOWN;', 'action__tagname': 'programMode'}, {'word': 'proj', 'action__pattern': '\M^        const float (&proj)[4];$', 'action__path': 'modules/core/include/camera_calibration.h', 'kind': 'jump_list', 'abbr': 'proj                       @modules..ibration.h          const float (&proj)[4];', 'action__tagname': 'proj'}, {'word': 'proj', 'action__pattern': '\M^    } proj;$', 'action__path': 'modules/gl/include/pipeline.h', 'kind': 'jump_list', 'abbr': 'proj                       @modules..pipeline.h      } proj;', 'action__tagname': 'proj'}, {'word': 'px', 'action__pattern': '\M^const int px[] = {0,0,0,0,0,0,0,0,0,$', 'action__path': 'ext/objective_functions/test/aig/test_camera_image.cc', 'kind': 'jump_list', 'abbr': 'px                         @ext/obj..a_image.cc  const int px[] = {0,0,0,0,0,0,0,0,0,', 'action__tagname': 'px'}, {'word': 'queryDistance', 'action__pattern': '\M^double EdgeDistanceMap::queryDistance(const cv::Point& pt) const$', 'action__path': 'ext/objective_functions/xing/aig/edge_distance_map.cc', 'kind': 'jump_list', 'abbr': 'queryDistance              @ext/obj..nce_map.cc  double EdgeDistanceMap::queryDistance(const cv::Point& pt) const', 'action__tagname': 'queryDistance'}, {'word': 'rLat', 'action__pattern': '\M^    double rLat, rLon;$', 'action__path': 'modules/gl/include/camera.h', 'kind': 'jump_list', 'abbr': 'rLat                       @modules..e/camera.h      double rLat, rLon;', 'action__tagname': 'rLat'}, {'word': 'rLon', 'action__pattern': '\M^    double rLat, rLon;$', 'action__path': 'modules/gl/include/camera.h', 'kind': 'jump_list', 'abbr': 'rLon                       @modules..e/camera.h      double rLat, rLon;', 'action__tagname': 'rLon'}, {'word': 'radius', 'action__pattern': '\M^    T radius;$', 'action__path': 'modules/geom/include/sphere.h', 'kind': 'jump_list', 'abbr': 'radius                     @modules..e/sphere.h      T radius;', 'action__tagname': 'radius'}, {'word': 'ratio', 'action__pattern': '\M^float ratio;$', 'action__path': 'apps/sphere_model_renderer/src/main.cc', 'kind': 'jump_list', 'abbr': 'ratio                      @apps/sp..rc/main.cc  float ratio;', 'action__tagname': 'ratio'}, {'word': 'rd', 'action__pattern': '\M^    std::random_device rd;$', 'action__path': 'modules/ml/include/depth_split_function_factory.h', 'kind': 'jump_list', 'abbr': 'rd                         @modules.._factory.h      std::random_device rd;', 'action__tagname': 'rd'}, {'word': 'rd', 'action__pattern': '\M^    std::random_device rd;$', 'action__path': 'modules/ml/include/energy_function_chooser.h', 'kind': 'jump_list', 'abbr': 'rd                         @modules.._chooser.h      std::random_device rd;', 'action__tagname': 'rd'}, {'word': 'rd', 'action__pattern': '\M^    std::random_device rd;$', 'action__path': 'modules/ml/include/scalar_split_function_factory.h', 'kind': 'jump_list', 'abbr': 'rd                         @modules.._factory.h      std::random_device rd;', 'action__tagname': 'rd'}, {'word': 'rd', 'action__pattern': '\M^    std::random_device rd;$', 'action__path': 'modules/ml/include/split_function_factory.h', 'kind': 'jump_list', 'abbr': 'rd                         @modules.._factory.h      std::random_device rd;', 'action__tagname': 'rd'}, {'word': 'read', 'action__pattern': '\M^core::Pose<T> JsonPoseReader<T>::read() {$', 'action__path': 'modules/io/include/json_pose_reader.h', 'kind': 'jump_list', 'abbr': 'read                       @modules..e_reader.h  core::Pose<T> JsonPoseReader<T>::read() {', 'action__tagname': 'read'}, {'word': 'read', 'action__pattern': '\M^core::Pose<glm::vec3> HumanEvaPoseReader::read() {$', 'action__path': 'modules/io/src/humaneva_pose_reader.cc', 'kind': 'jump_list', 'abbr': 'read                       @modules.._reader.cc  core::Pose<glm::vec3> HumanEvaPoseReader::read() {', 'action__tagname': 'read'}, {'word': 'read', 'action__pattern': '\M^std::vector<std::vector<geom::Sphere<double>>> SphReader::read() {$', 'action__path': 'modules/io/src/sph_reader.cc', 'kind': 'jump_list', 'abbr': 'read                       @modules.._reader.cc  std::vector<std::vector<geom::Sphere<double>>> SphReader::read() {', 'action__tagname': 'read'}, {'word': 'read', 'action__pattern': '\M^core::SphereModel SphereModelReader::read() {$', 'action__path': 'modules/io/src/sphere_model_reader.cc', 'kind': 'jump_list', 'abbr': 'read                       @modules.._reader.cc  core::SphereModel SphereModelReader::read() {', 'action__tagname': 'read'}, {'word': 'read', 'action__pattern': '\M^core::Pose<glm::vec3> TangPoseReader::read() {$', 'action__path': 'modules/io/src/tang_pose_reader.cc', 'kind': 'jump_list', 'abbr': 'read                       @modules.._reader.cc  core::Pose<glm::vec3> TangPoseReader::read() {', 'action__tagname': 'read'}, {'word': 'read', 'action__pattern': '\M^core::Pose<glm::quat> WenpingPoseReader::read() {$', 'action__path': 'modules/io/src/wenping_pose_reader.cc', 'kind': 'jump_list', 'abbr': 'read                       @modules.._reader.cc  core::Pose<glm::quat> WenpingPoseReader::read() {', 'action__tagname': 'read'}, {'word': 'readBitFromReversedStream', 'action__pattern': '\M^static unsigned char readBitFromReversedStream(size_t* bitpointer, const unsigned char* bitstream)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'readBitFromReversedStream  @ext/lod..odepng.cpp  static unsigned char readBitFromReversedStream(size_t* bitpointer, const unsigned char* bitstream)', 'action__tagname': 'readBitFromReversedStream'}, {'word': 'readBitFromStream', 'action__pattern': '\M^static unsigned char readBitFromStream(size_t* bitpointer, const unsigned char* bitstream)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'readBitFromStream          @ext/lod..odepng.cpp  static unsigned char readBitFromStream(size_t* bitpointer, const unsigned char* bitstream)', 'action__tagname': 'readBitFromStream'}, {'word': 'readBitsFromReversedStream', 'action__pattern': '\M^static unsigned readBitsFromReversedStream(size_t* bitpointer, const unsigned char* bitstream, size_t nbits)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'readBits..mReversedStream  @ext/lod..odepng.cpp  static unsigned readBitsFromReversedStream(size_t* bitpointer, const unsigned char* bitstream, size_t nbits)', 'action__tagname': 'readBitsFromReversedStream'}, {'word': 'readBitsFromStream', 'action__pattern': '\M^static unsigned readBitsFromStream(size_t* bitpointer, const unsigned char* bitstream, size_t nbits)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'readBitsFromStream         @ext/lod..odepng.cpp  static unsigned readBitsFromStream(size_t* bitpointer, const unsigned char* bitstream, size_t nbits)', 'action__tagname': 'readBitsFromStream'}, {'word': 'readChunk_PLTE', 'action__pattern': '\M^static unsigned readChunk_PLTE(LodePNGColorMode* color, const unsigned char* data, size_t chunkLength)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'readChunk_PLTE             @ext/lod..odepng.cpp  static unsigned readChunk_PLTE(LodePNGColorMode* color, const unsigned char* data, size_t chunkLength)', 'action__tagname': 'readChunk_PLTE'}, {'word': 'readChunk_bKGD', 'action__pattern': '\M^static unsigned readChunk_bKGD(LodePNGInfo* info, const unsigned char* data, size_t chunkLength)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'readChunk_bKGD             @ext/lod..odepng.cpp  static unsigned readChunk_bKGD(LodePNGInfo* info, const unsigned char* data, size_t chunkLength)', 'action__tagname': 'readChunk_bKGD'}, {'word': 'readChunk_iTXt', 'action__pattern': '\M^static unsigned readChunk_iTXt(LodePNGInfo* info, const LodePNGDecompressSettings* zlibsettings,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'readChunk_iTXt             @ext/lod..odepng.cpp  static unsigned readChunk_iTXt(LodePNGInfo* info, const LodePNGDecompressSettings* zlibsettings,', 'action__tagname': 'readChunk_iTXt'}, {'word': 'readChunk_pHYs', 'action__pattern': '\M^static unsigned readChunk_pHYs(LodePNGInfo* info, const unsigned char* data, size_t chunkLength)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'readChunk_pHYs             @ext/lod..odepng.cpp  static unsigned readChunk_pHYs(LodePNGInfo* info, const unsigned char* data, size_t chunkLength)', 'action__tagname': 'readChunk_pHYs'}, {'word': 'readChunk_tEXt', 'action__pattern': '\M^static unsigned readChunk_tEXt(LodePNGInfo* info, const unsigned char* data, size_t chunkLength)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'readChunk_tEXt             @ext/lod..odepng.cpp  static unsigned readChunk_tEXt(LodePNGInfo* info, const unsigned char* data, size_t chunkLength)', 'action__tagname': 'readChunk_tEXt'}, {'word': 'readChunk_tIME', 'action__pattern': '\M^static unsigned readChunk_tIME(LodePNGInfo* info, const unsigned char* data, size_t chunkLength)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'readChunk_tIME             @ext/lod..odepng.cpp  static unsigned readChunk_tIME(LodePNGInfo* info, const unsigned char* data, size_t chunkLength)', 'action__tagname': 'readChunk_tIME'}, {'word': 'readChunk_tRNS', 'action__pattern': '\M^static unsigned readChunk_tRNS(LodePNGColorMode* color, const unsigned char* data, size_t chunkLength)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'readChunk_tRNS             @ext/lod..odepng.cpp  static unsigned readChunk_tRNS(LodePNGColorMode* color, const unsigned char* data, size_t chunkLength)', 'action__tagname': 'readChunk_tRNS'}, {'word': 'readChunk_zTXt', 'action__pattern': '\M^static unsigned readChunk_zTXt(LodePNGInfo* info, const LodePNGDecompressSettings* zlibsettings,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'readChunk_zTXt             @ext/lod..odepng.cpp  static unsigned readChunk_zTXt(LodePNGInfo* info, const LodePNGDecompressSettings* zlibsettings,', 'action__tagname': 'readChunk_zTXt'}, {'word': 'readData', 'action__pattern': '\M^std::vector<std::shared_ptr<TrainingDataType>> readData(const std::string& filename) {$', 'action__path': 'apps/abalone_forest/src/main.cc', 'kind': 'jump_list', 'abbr': 'readData                   @apps/ab..rc/main.cc  std::vector<std::shared_ptr<TrainingDataType>> readData(const std::string& filename) {', 'action__tagname': 'readData'}, {'word': 'readData', 'action__pattern': '\M^readData(const std::string& labelLoc,$', 'action__path': 'apps/tang_lrf/src/main.cc', 'kind': 'jump_list', 'abbr': 'readData                   @apps/ta..rc/main.cc  readData(const std::string& labelLoc,', 'action__tagname': 'readData'}, {'word': 'readFileToString', 'action__pattern': '\M^std::string Utility::readFileToString(const std::string& filename) {$', 'action__path': 'modules/core/src/utility.cc', 'kind': 'jump_list', 'abbr': 'readFileToString           @modules..utility.cc  std::string Utility::readFileToString(const std::string& filename) {', 'action__tagname': 'readFileToString'}, {'word': 'readFromBuffer', 'action__pattern': '\M^void GBuffer::readFromBuffer(BufferType b) {$', 'action__path': 'modules/gl/src/gbuffer.cc', 'kind': 'jump_list', 'abbr': 'readFromBuffer             @modules..gbuffer.cc  void GBuffer::readFromBuffer(BufferType b) {', 'action__tagname': 'readFromBuffer'}, {'word': 'readFromSStream', 'action__pattern': '\M^core::Pose<glm::vec3> TangPoseReader::readFromSStream(std::stringstream& contents) {$', 'action__path': 'modules/io/src/tang_pose_reader.cc', 'kind': 'jump_list', 'abbr': 'readFromSStream            @modules.._reader.cc  core::Pose<glm::vec3> TangPoseReader::readFromSStream(std::stringstream& contents) {', 'action__tagname': 'readFromSStream'}, {'word': 'readFromString', 'action__pattern': '\M^core::Pose<glm::vec3> TangPoseReader::readFromString(const std::string& string) {$', 'action__path': 'modules/io/src/tang_pose_reader.cc', 'kind': 'jump_list', 'abbr': 'readFromString             @modules.._reader.cc  core::Pose<glm::vec3> TangPoseReader::readFromString(const std::string& string) {', 'action__tagname': 'readFromString'}, {'word': 'readImage', 'action__pattern': '\M^void readImage(const char name[])$', 'action__path': 'ext/objective_functions/prog/showedge/main.cc', 'kind': 'jump_list', 'abbr': 'readImage                  @ext/obj..ge/main.cc  void readImage(const char name[])', 'action__tagname': 'readImage'}, {'word': 'readNodeHierarchy', 'action__pattern': '\M^void Mesh::readNodeHierarchy(const std::map<std::string,glm::mat4>& matrices,$', 'action__path': 'modules/gl/src/mesh.cc', 'kind': 'jump_list', 'abbr': 'readNodeHierarchy          @modules..rc/mesh.cc  void Mesh::readNodeHierarchy(const std::map<std::string,glm::mat4>& matrices,', 'action__tagname': 'readNodeHierarchy'}, {'word': 'readPosFromFile', 'action__pattern': '\M^glm::vec3 HumanEvaPoseReader::readPosFromFile() {$', 'action__path': 'modules/io/src/humaneva_pose_reader.cc', 'kind': 'jump_list', 'abbr': 'readPosFromFile            @modules.._reader.cc  glm::vec3 HumanEvaPoseReader::readPosFromFile() {', 'action__tagname': 'readPosFromFile'}, {'word': 'readSkelRecursive', 'action__pattern': '\M^void readSkelRecursive(core::Skeleton skeleton,$', 'action__path': 'modules/io/src/json_reader_utils.cc', 'kind': 'jump_list', 'abbr': 'readSkelRecursive          @modules..r_utils.cc  void readSkelRecursive(core::Skeleton skeleton,', 'action__tagname': 'readSkelRecursive'}, {'word': 'readSpheres', 'action__pattern': '\M^std::vector<geom::Sphere<double>> SphereModelReader::readSpheres($', 'action__path': 'modules/io/src/sphere_model_reader.cc', 'kind': 'jump_list', 'abbr': 'readSpheres                @modules.._reader.cc  std::vector<geom::Sphere<double>> SphereModelReader::readSpheres(', 'action__tagname': 'readSpheres'}, {'word': 'readWeights', 'action__pattern': '\M^SphereModelReader::readWeights(Json::Value& spheres) {$', 'action__path': 'modules/io/src/sphere_model_reader.cc', 'kind': 'jump_list', 'abbr': 'readWeights                @modules.._reader.cc  SphereModelReader::readWeights(Json::Value& spheres) {', 'action__tagname': 'readWeights'}, {'word': 'read_pose_file', 'action__pattern': '\M^def read_pose_file(pose_file_name):$', 'action__path': 'scripts/compare_poses.py', 'kind': 'jump_list', 'abbr': 'read_pose_file             @scripts..e_poses.py  def read_pose_file(pose_file_name):', 'action__tagname': 'read_pose_file'}, {'word': 'read_text_chunks', 'action__pattern': '\M^  unsigned read_text_chunks; /*if false but remember_unknown_chunks is true, they''re stored in the unknown chunks*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'read_text_chunks           @ext/lod../lodepng.h    unsigned read_text_chunks; \/*if false but remember_unknown_chunks is true, they''re stored in the unknown chunks*\/', 'action__tagname': 'read_text_chunks'}, {'word': 'realDis', 'action__pattern': '\M^    std::uniform_real_distribution<> realDis;$', 'action__path': 'modules/ml/include/scalar_split_function_factory.h', 'kind': 'jump_list', 'abbr': 'realDis                    @modules.._factory.h      std::uniform_real_distribution<> realDis;', 'action__tagname': 'realDis'}, {'word': 'realDis', 'action__pattern': '\M^    std::uniform_real_distribution<> realDis;$', 'action__path': 'modules/ml/include/split_function_factory.h', 'kind': 'jump_list', 'abbr': 'realDis                    @modules.._factory.h      std::uniform_real_distribution<> realDis;', 'action__tagname': 'realDis'}, {'word': 'recalculate', 'action__pattern': '\M^void Camera::recalculate() {$', 'action__path': 'modules/gl/src/camera.cc', 'kind': 'jump_list', 'abbr': 'recalculate                @modules../camera.cc  void Camera::recalculate() {', 'action__tagname': 'recalculate'}, {'word': 'remember_unknown_chunks', 'action__pattern': '\M^  unsigned remember_unknown_chunks;$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'remember_unknown_chunks    @ext/lod../lodepng.h    unsigned remember_unknown_chunks;', 'action__tagname': 'remember_unknown_chunks'}, {'word': 'removePaddingBits', 'action__pattern': '\M^static void removePaddingBits(unsigned char* out, const unsigned char* in,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'removePaddingBits          @ext/lod..odepng.cpp  static void removePaddingBits(unsigned char* out, const unsigned char* in,', 'action__tagname': 'removePaddingBits'}, {'word': 'render', 'action__pattern': '\M^void PoseRenderer::render() {$', 'action__path': 'apps/pose_renderer/src/pose_renderer.cc', 'kind': 'jump_list', 'abbr': 'render                     @apps/po..enderer.cc  void PoseRenderer::render() {', 'action__tagname': 'render'}, {'word': 'render', 'action__pattern': '\M^void InstancedShapeRenderer<Shape>::render(unsigned int num,$', 'action__path': 'modules/gl/include/instanced_shape_renderer.h', 'kind': 'jump_list', 'abbr': 'render                     @modules..renderer.h  void InstancedShapeRenderer<Shape>::render(unsigned int num,', 'action__tagname': 'render'}, {'word': 'render', 'action__pattern': '\M^void BackgroundDrawer::render() {$', 'action__path': 'modules/gl/src/background_drawer.cc', 'kind': 'jump_list', 'abbr': 'render                     @modules.._drawer.cc  void BackgroundDrawer::render() {', 'action__tagname': 'render'}, {'word': 'render', 'action__pattern': '\M^  void ChessboardDrawer::render(const glm::mat4& wvp, float alpha) {$', 'action__path': 'modules/gl/src/chessboard_drawer.cc', 'kind': 'jump_list', 'abbr': 'render                     @modules.._drawer.cc    void ChessboardDrawer::render(const glm::mat4& wvp, float alpha) {', 'action__tagname': 'render'}, {'word': 'render', 'action__pattern': '\M^void InstancedMeshRenderer::render(unsigned int num,$', 'action__path': 'modules/gl/src/instanced_mesh_renderer.cc', 'kind': 'jump_list', 'abbr': 'render                     @modules..enderer.cc  void InstancedMeshRenderer::render(unsigned int num,', 'action__tagname': 'render'}, {'word': 'render', 'action__pattern': '\M^void MeshRenderer::render() {$', 'action__path': 'modules/gl/src/mesh_renderer.cc', 'kind': 'jump_list', 'abbr': 'render                     @modules..enderer.cc  void MeshRenderer::render() {', 'action__tagname': 'render'}, {'word': 'render', 'action__pattern': '\M^void ShapeRenderer<Shape>::render() {$', 'action__path': 'modules/gl/src/shape_renderer.cc', 'kind': 'jump_list', 'abbr': 'render                     @modules..enderer.cc  void ShapeRenderer<Shape>::render() {', 'action__tagname': 'render'}, {'word': 'renderBackground', 'action__pattern': '\M^static bool renderBackground;$', 'action__path': 'apps/multicam_mesh_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'renderBackground           @apps/mu..rc/main.cc  static bool renderBackground;', 'action__tagname': 'renderBackground'}, {'word': 'renderBoard', 'action__pattern': '\M^static bool renderBoard;$', 'action__path': 'apps/multicam_mesh_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'renderBoard                @apps/mu..rc/main.cc  static bool renderBoard;', 'action__tagname': 'renderBoard'}, {'word': 'renderMesh', 'action__pattern': '\M^static bool renderMesh;$', 'action__path': 'apps/multicam_mesh_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'renderMesh                 @apps/mu..rc/main.cc  static bool renderMesh;', 'action__tagname': 'renderMesh'}, {'word': 'renderer', 'action__pattern': '\M^    gl::MeshRenderer renderer;$', 'action__path': 'apps/pose_renderer/include/pose_renderer.h', 'kind': 'jump_list', 'abbr': 'renderer                   @apps/po..renderer.h      gl::MeshRenderer renderer;', 'action__tagname': 'renderer'}, {'word': 'reset', 'action__pattern': '\M^      void reset() {$', 'action__path': 'modules/gl/include/mesh.h', 'kind': 'jump_list', 'abbr': 'reset                      @modules..ude/mesh.h        void reset() {', 'action__tagname': 'reset'}, {'word': 'reset', 'action__pattern': '\M^  void ParticleSwarm::Particle::reset() {$', 'action__path': 'modules/optim/src/particle.cc', 'kind': 'jump_list', 'abbr': 'reset                      @modules..article.cc    void ParticleSwarm::Particle::reset() {', 'action__tagname': 'reset'}, {'word': 'reset', 'action__pattern': '\M^  void ParticleSwarm::reset(const std::function<double(unsigned int)>& var) {$', 'action__path': 'modules/optim/src/particle_swarm.cc', 'kind': 'jump_list', 'abbr': 'reset                      @modules..e_swarm.cc    void ParticleSwarm::reset(const std::function<double(unsigned int)>& var) {', 'action__tagname': 'reset'}, {'word': 'reshape', 'action__pattern': '\M^      void reshape(int w, int h) {$', 'action__path': 'apps/particle_swarm_demo/src/main.cc', 'kind': 'jump_list', 'abbr': 'reshape                    @apps/pa..rc/main.cc        void reshape(int w, int h) {', 'action__tagname': 'reshape'}, {'word': 'reshape', 'action__pattern': '\M^      void reshape(int w, int h) {$', 'action__path': 'apps/skel_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'reshape                    @apps/sk..rc/main.cc        void reshape(int w, int h) {', 'action__tagname': 'reshape'}, {'word': 'restPose', 'action__pattern': '\M^      std::string configFile, meshFile, fragShader, vertShader, restPose;$', 'action__path': 'apps/pose_viewer/include/pose_viewer_options.h', 'kind': 'jump_list', 'abbr': 'restPose                   @apps/po.._options.h        std::string configFile, meshFile, fragShader, vertShader, restPose;', 'action__tagname': 'restPose'}, {'word': 'rgbFloat', 'action__pattern': '\M^  rgbFloat      = CV_32FC3,$', 'action__path': 'modules/core/include/image.h', 'kind': 'jump_list', 'abbr': 'rgbFloat                   @modules..de/image.h    rgbFloat      = CV_32FC3,', 'action__tagname': 'rgbFloat'}, {'word': 'rgbUnsigned', 'action__pattern': '\M^  rgbUnsigned   = CV_8UC3,$', 'action__path': 'modules/core/include/image.h', 'kind': 'jump_list', 'abbr': 'rgbUnsigned                @modules..de/image.h    rgbUnsigned   = CV_8UC3,', 'action__tagname': 'rgbUnsigned'}, {'word': 'rgba16ToPixel', 'action__pattern': '\M^static unsigned rgba16ToPixel(unsigned char* out, size_t i,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'rgba16ToPixel              @ext/lod..odepng.cpp  static unsigned rgba16ToPixel(unsigned char* out, size_t i,', 'action__tagname': 'rgba16ToPixel'}, {'word': 'rgba8ToPixel', 'action__pattern': '\M^static unsigned rgba8ToPixel(unsigned char* out, size_t i,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'rgba8ToPixel               @ext/lod..odepng.cpp  static unsigned rgba8ToPixel(unsigned char* out, size_t i,', 'action__tagname': 'rgba8ToPixel'}, {'word': 'right', 'action__pattern': '\M^    std::shared_ptr<LatentTreeNode> right;$', 'action__path': 'modules/ml/include/latent_tree_node.h', 'kind': 'jump_list', 'abbr': 'right                      @modules..ree_node.h      std::shared_ptr<LatentTreeNode> right;', 'action__tagname': 'right'}, {'word': 'right', 'action__pattern': '\M^    std::vector<glm::vec3> right;$', 'action__path': 'modules/ml/include/offset_leaf.h', 'kind': 'jump_list', 'abbr': 'right                      @modules..set_leaf.h      std::vector<glm::vec3> right;', 'action__tagname': 'right'}, {'word': 'right', 'action__pattern': '\M^  std::shared_ptr<TreeNode<Leaf, SplitFunction>> right;$', 'action__path': 'modules/ml/include/tree_node.h', 'kind': 'jump_list', 'abbr': 'right                      @modules..ree_node.h    std::shared_ptr<TreeNode<Leaf, SplitFunction>> right;', 'action__tagname': 'right'}, {'word': 'root', 'action__pattern': '\M^    std::shared_ptr<LatentTreeNode> root;$', 'action__path': 'modules/ml/include/latent_tree_model.h', 'kind': 'jump_list', 'abbr': 'root                       @modules..ee_model.h      std::shared_ptr<LatentTreeNode> root;', 'action__tagname': 'root'}, {'word': 'rootPosition', 'action__pattern': '\M^    glm::vec3 rootPosition;$', 'action__path': 'modules/core/include/pose.h', 'kind': 'jump_list', 'abbr': 'rootPosition               @modules..ude/pose.h      glm::vec3 rootPosition;', 'action__tagname': 'rootPosition'}, {'word': 'rootRotation', 'action__pattern': '\M^    glm::quat rootRotation;$', 'action__path': 'modules/core/include/pose.h', 'kind': 'jump_list', 'abbr': 'rootRotation               @modules..ude/pose.h      glm::quat rootRotation;', 'action__tagname': 'rootRotation'}, {'word': 'rot', 'action__pattern': '\M^    glm::quat rot;$', 'action__path': 'modules/core/include/old_joint.h', 'kind': 'jump_list', 'abbr': 'rot                        @modules..ld_joint.h      glm::quat rot;', 'action__tagname': 'rot'}, {'word': 'rotateDown', 'action__pattern': '\M^void Camera::rotateDown(double d) {$', 'action__path': 'modules/gl/src/camera.cc', 'kind': 'jump_list', 'abbr': 'rotateDown                 @modules../camera.cc  void Camera::rotateDown(double d) {', 'action__tagname': 'rotateDown'}, {'word': 'rotateLeft', 'action__pattern': '\M^void Camera::rotateLeft(double d) {$', 'action__path': 'modules/gl/src/camera.cc', 'kind': 'jump_list', 'abbr': 'rotateLeft                 @modules../camera.cc  void Camera::rotateLeft(double d) {', 'action__tagname': 'rotateLeft'}, {'word': 'rotateRight', 'action__pattern': '\M^void Camera::rotateRight(double d) {$', 'action__path': 'modules/gl/src/camera.cc', 'kind': 'jump_list', 'abbr': 'rotateRight                @modules../camera.cc  void Camera::rotateRight(double d) {', 'action__tagname': 'rotateRight'}, {'word': 'rotateToNormal', 'action__pattern': '\M^void Pose::rotateToNormal(const glm::vec3& up, const glm::vec3& p1,$', 'action__path': 'modules/core/src/old_pose.cc', 'kind': 'jump_list', 'abbr': 'rotateToNormal             @modules..ld_pose.cc  void Pose::rotateToNormal(const glm::vec3& up, const glm::vec3& p1,', 'action__tagname': 'rotateToNormal'}, {'word': 'rotateUp', 'action__pattern': '\M^void Camera::rotateUp(double d) {$', 'action__path': 'modules/gl/src/camera.cc', 'kind': 'jump_list', 'abbr': 'rotateUp                   @modules../camera.cc  void Camera::rotateUp(double d) {', 'action__tagname': 'rotateUp'}, {'word': 'roundPoint', 'action__pattern': '\M^      GLuint roundPoint;$', 'action__path': 'apps/particle_swarm_demo/src/main.cc', 'kind': 'jump_list', 'abbr': 'roundPoint                 @apps/pa..rc/main.cc        GLuint roundPoint;', 'action__tagname': 'roundPoint'}, {'word': 'rows', 'action__pattern': '\M^    unsigned int rows, cols;$', 'action__path': 'modules/gl/include/tiler.h', 'kind': 'jump_list', 'abbr': 'rows                       @modules..de/tiler.h      unsigned int rows, cols;', 'action__tagname': 'rows'}, {'word': 'run', 'action__pattern': '\M^    void run() {$', 'action__path': 'apps/depth_shader_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'run                        @apps/de..rc/main.cc      void run() {', 'action__tagname': 'run'}, {'word': 'run', 'action__pattern': '\M^    void run() {$', 'action__path': 'apps/edge_shader_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'run                        @apps/ed..rc/main.cc      void run() {', 'action__tagname': 'run'}, {'word': 'run', 'action__pattern': '\M^    void run() {$', 'action__path': 'apps/gbuffer_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'run                        @apps/gb..rc/main.cc      void run() {', 'action__tagname': 'run'}, {'word': 'run', 'action__pattern': '\M^    void run() {$', 'action__path': 'apps/multicam_mesh_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'run                        @apps/mu..rc/main.cc      void run() {', 'action__tagname': 'run'}, {'word': 'run', 'action__pattern': '\M^      void run() {$', 'action__path': 'apps/particle_swarm_demo/src/main.cc', 'kind': 'jump_list', 'abbr': 'run                        @apps/pa..rc/main.cc        void run() {', 'action__tagname': 'run'}, {'word': 'run', 'action__pattern': '\M^    void run() {$', 'action__path': 'apps/pose_creator/src/main.cc', 'kind': 'jump_list', 'abbr': 'run                        @apps/po..rc/main.cc      void run() {', 'action__tagname': 'run'}, {'word': 'run', 'action__pattern': '\M^    void run() {$', 'action__path': 'apps/pose_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'run                        @apps/po..rc/main.cc      void run() {', 'action__tagname': 'run'}, {'word': 'run', 'action__pattern': '\M^      void run(const core::Pose<glm::vec3>& evaPose,$', 'action__path': 'apps/skel_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'run                        @apps/sk..rc/main.cc        void run(const core::Pose<glm::vec3>& evaPose,', 'action__tagname': 'run'}, {'word': 'running', 'action__pattern': '\M^    bool running() const {$', 'action__path': 'apps/bmvc_project/src/main.cc', 'kind': 'jump_list', 'abbr': 'running                    @apps/bm..rc/main.cc      bool running() const {', 'action__tagname': 'running'}, {'word': 'running', 'action__pattern': '\M^    bool running() const {$', 'action__path': 'apps/depth_shader_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'running                    @apps/de..rc/main.cc      bool running() const {', 'action__tagname': 'running'}, {'word': 'running', 'action__pattern': '\M^    bool running() const {$', 'action__path': 'apps/edge_shader_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'running                    @apps/ed..rc/main.cc      bool running() const {', 'action__tagname': 'running'}, {'word': 'running', 'action__pattern': '\M^    bool running() const {$', 'action__path': 'apps/gbuffer_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'running                    @apps/gb..rc/main.cc      bool running() const {', 'action__tagname': 'running'}, {'word': 'running', 'action__pattern': '\M^    bool running() const {$', 'action__path': 'apps/multicam_mesh_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'running                    @apps/mu..rc/main.cc      bool running() const {', 'action__tagname': 'running'}, {'word': 'running', 'action__pattern': '\M^    bool running() const {$', 'action__path': 'apps/pose_creator/src/main.cc', 'kind': 'jump_list', 'abbr': 'running                    @apps/po..rc/main.cc      bool running() const {', 'action__tagname': 'running'}, {'word': 'running', 'action__pattern': '\M^    bool running() const {$', 'action__path': 'apps/pose_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'running                    @apps/po..rc/main.cc      bool running() const {', 'action__tagname': 'running'}, {'word': 's', 'action__pattern': '\M^    SphereModel& operator=(const SphereModel& s) = default;$', 'action__path': 'modules/core/include/sphere_model.h', 'kind': 'jump_list', 'abbr': 's                          @modules..re_model.h      SphereModel& operator=(const SphereModel& s) = default;', 'action__tagname': 's'}, {'word': 's', 'action__pattern': '\M^    SphereModel(const SphereModel& s) = default;$', 'action__path': 'modules/core/include/sphere_model.h', 'kind': 'jump_list', 'abbr': 's                          @modules..re_model.h      SphereModel(const SphereModel& s) = default;', 'action__tagname': 's'}, {'word': 'save', 'action__pattern': '\M^void save(const ColourDetector& model)$', 'action__path': 'ext/objective_functions/prog/colour-detect/main.cc', 'kind': 'jump_list', 'abbr': 'save                       @ext/obj..ct/main.cc  void save(const ColourDetector& model)', 'action__tagname': 'save'}, {'word': 'save', 'action__pattern': '\M^void save(Archive & archive, const std::shared_ptr<Type> & value, const unsigned int /*version*/)$', 'action__path': 'modules/io/include/shared_ptr_serialisation.h', 'kind': 'jump_list', 'abbr': 'save                       @modules..lisation.h  void save(Archive & archive, const std::shared_ptr<Type> & value, const unsigned int \/*version*\/)', 'action__tagname': 'save'}, {'word': 'saveDir', 'action__pattern': '\M^std::string saveDir = "./";$', 'action__path': 'ext/objective_functions/prog/depthseg/main.cc', 'kind': 'jump_list', 'abbr': 'saveDir                    @ext/obj..eg/main.cc  std::string saveDir = ".\/";', 'action__tagname': 'saveDir'}, {'word': 'saveDir', 'action__pattern': '\M^std::string saveDir;$', 'action__path': 'ext/objective_functions/prog/erolation/main.cc', 'kind': 'jump_list', 'abbr': 'saveDir                    @ext/obj..on/main.cc  std::string saveDir;', 'action__tagname': 'saveDir'}, {'word': 'saveDir', 'action__pattern': '\M^std::string saveDir;$', 'action__path': 'ext/objective_functions/prog/segimage/main.cc', 'kind': 'jump_list', 'abbr': 'saveDir                    @ext/obj..ge/main.cc  std::string saveDir;', 'action__tagname': 'saveDir'}, {'word': 'save_file', 'action__pattern': '\M^void save_file(const std::vector<unsigned char>& buffer, const std::string& filename)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'save_file                  @ext/lod..odepng.cpp  void save_file(const std::vector<unsigned char>& buffer, const std::string& filename)', 'action__tagname': 'save_file'}, {'word': 'scaleFactor', 'action__pattern': '\M^static float scaleFactor = 1.0f;$', 'action__path': 'apps/pose_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'scaleFactor                @apps/po..rc/main.cc  static float scaleFactor = 1.0f;', 'action__tagname': 'scaleFactor'}, {'word': 'scene', 'action__pattern': '\M^    const aiScene* scene;$', 'action__path': 'modules/io/include/mesh_reader.h', 'kind': 'jump_list', 'abbr': 'scene                      @modules..h_reader.h      const aiScene* scene;', 'action__tagname': 'scene'}, {'word': 'searchCodeIndex', 'action__pattern': '\M^static size_t searchCodeIndex(const unsigned* array, size_t array_size, size_t value)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'searchCodeIndex            @ext/lod..odepng.cpp  static size_t searchCodeIndex(const unsigned* array, size_t array_size, size_t value)', 'action__tagname': 'searchCodeIndex'}, {'word': 'second', 'action__pattern': '\M^  unsigned second;  /*0-60 (to allow for leap seconds)*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'second                     @ext/lod../lodepng.h    unsigned second;  \/*0-60 (to allow for leap seconds)*\/', 'action__tagname': 'second'}, {'word': 'segmentImage', 'action__pattern': '\M^cv::Mat segmentImage(const cv::Mat& image, const cv::Mat& mask)$', 'action__path': 'ext/objective_functions/prog/segimage/main.cc', 'kind': 'jump_list', 'abbr': 'segmentImage               @ext/obj..ge/main.cc  cv::Mat segmentImage(const cv::Mat& image, const cv::Mat& mask)', 'action__tagname': 'segmentImage'}, {'word': 'serialization', 'action__pattern': '\M^namespace serialization {$', 'action__path': 'modules/io/include/glm_serialisation.h', 'kind': 'jump_list', 'abbr': 'serialization              @modules..lisation.h  namespace serialization {', 'action__tagname': 'serialization'}, {'word': 'serialization', 'action__pattern': '\M^namespace serialization {$', 'action__path': 'modules/io/include/shared_ptr_serialisation.h', 'kind': 'jump_list', 'abbr': 'serialization              @modules..lisation.h  namespace serialization {', 'action__tagname': 'serialization'}, {'word': 'serialize', 'action__pattern': '\M^void serialize(Archive & ar,$', 'action__path': 'modules/io/include/glm_serialisation.h', 'kind': 'jump_list', 'abbr': 'serialize                  @modules..lisation.h  void serialize(Archive & ar,', 'action__tagname': 'serialize'}, {'word': 'serialize', 'action__pattern': '\M^inline void serialize(Archive & archive, std::shared_ptr<Type> & value, const unsigned int version)$', 'action__path': 'modules/io/include/shared_ptr_serialisation.h', 'kind': 'jump_list', 'abbr': 'serialize                  @modules..lisation.h  inline void serialize(Archive & archive, std::shared_ptr<Type> & value, const unsigned int version)', 'action__tagname': 'serialize'}, {'word': 'serialize', 'action__pattern': '\M^void ClassifierLeaf<DataType>::serialize(Archive & ar, const unsigned int version) {$', 'action__path': 'modules/ml/include/classifier_leaf.h', 'kind': 'jump_list', 'abbr': 'serialize                  @modules..ier_leaf.h  void ClassifierLeaf<DataType>::serialize(Archive & ar, const unsigned int version) {', 'action__tagname': 'serialize'}, {'word': 'serialize', 'action__pattern': '\M^void DepthSplitFunction::serialize(Archive & ar, const unsigned int version) {$', 'action__path': 'modules/ml/include/depth_split_function.h', 'kind': 'jump_list', 'abbr': 'serialize                  @modules..function.h  void DepthSplitFunction::serialize(Archive & ar, const unsigned int version) {', 'action__tagname': 'serialize'}, {'word': 'serialize', 'action__pattern': '\M^void LatentTreeNode::serialize(Archive & ar, const unsigned int version) {$', 'action__path': 'modules/ml/include/latent_tree_node.h', 'kind': 'jump_list', 'abbr': 'serialize                  @modules..ree_node.h  void LatentTreeNode::serialize(Archive & ar, const unsigned int version) {', 'action__tagname': 'serialize'}, {'word': 'serialize', 'action__pattern': '\M^void OffsetLeaf<Data, LabelTypes...>::serialize(Archive & ar, const unsigned int version) {$', 'action__path': 'modules/ml/include/offset_leaf.h', 'kind': 'jump_list', 'abbr': 'serialize                  @modules..set_leaf.h  void OffsetLeaf<Data, LabelTypes...>::serialize(Archive & ar, const unsigned int version) {', 'action__tagname': 'serialize'}, {'word': 'serialize', 'action__pattern': '\M^void ScalarSplitFunction<Data>::serialize($', 'action__path': 'modules/ml/include/scalar_split_function.h', 'kind': 'jump_list', 'abbr': 'serialize                  @modules..function.h  void ScalarSplitFunction<Data>::serialize(', 'action__tagname': 'serialize'}, {'word': 'serialize', 'action__pattern': '\M^  void serialize(Archive & ar, const unsigned int version) {$', 'action__path': 'modules/ml/include/tree_node.h', 'kind': 'jump_list', 'abbr': 'serialize                  @modules..ree_node.h    void serialize(Archive & ar, const unsigned int version) {', 'action__tagname': 'serialize'}, {'word': 'setBackground', 'action__pattern': '\M^void BackgroundDrawer::setBackground(const cv::Mat& image) {$', 'action__path': 'modules/gl/src/background_drawer.cc', 'kind': 'jump_list', 'abbr': 'setBackground              @modules.._drawer.cc  void BackgroundDrawer::setBackground(const cv::Mat& image) {', 'action__tagname': 'setBackground'}, {'word': 'setBackground', 'action__pattern': '\M^void BackgroundDrawer::setBackground(const std::string& filename,$', 'action__path': 'modules/gl/src/background_drawer.cc', 'kind': 'jump_list', 'abbr': 'setBackground              @modules.._drawer.cc  void BackgroundDrawer::setBackground(const std::string& filename,', 'action__tagname': 'setBackground'}, {'word': 'setBitOfReversedStream', 'action__pattern': '\M^static void setBitOfReversedStream(size_t* bitpointer, unsigned char* bitstream, unsigned char bit)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'setBitOfReversedStream     @ext/lod..odepng.cpp  static void setBitOfReversedStream(size_t* bitpointer, unsigned char* bitstream, unsigned char bit)', 'action__tagname': 'setBitOfReversedStream'}, {'word': 'setBitOfReversedStream0', 'action__pattern': '\M^static void setBitOfReversedStream0(size_t* bitpointer, unsigned char* bitstream, unsigned char bit)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'setBitOfReversedStream0    @ext/lod..odepng.cpp  static void setBitOfReversedStream0(size_t* bitpointer, unsigned char* bitstream, unsigned char bit)', 'action__tagname': 'setBitOfReversedStream0'}, {'word': 'setBoneTransforms', 'action__pattern': '\M^void PoseShader::setBoneTransforms(const std::vector<glm::mat4>& transforms) {$', 'action__path': 'modules/gl/src/pose_shader.cc', 'kind': 'jump_list', 'abbr': 'setBoneTransforms          @modules.._shader.cc  void PoseShader::setBoneTransforms(const std::vector<glm::mat4>& transforms) {', 'action__tagname': 'setBoneTransforms'}, {'word': 'setCamPosX', 'action__pattern': '\M^    void setCamPosX(float x) { camPos.x = x; }$', 'action__path': 'apps/pose_renderer/include/pose_renderer_options.h', 'kind': 'jump_list', 'abbr': 'setCamPosX                 @apps/po.._options.h      void setCamPosX(float x) { camPos.x = x; }', 'action__tagname': 'setCamPosX'}, {'word': 'setCamPosX', 'action__pattern': '\M^      void setCamPosX(float x) { camPos.x = x; }$', 'action__path': 'apps/pose_viewer/include/pose_viewer_options.h', 'kind': 'jump_list', 'abbr': 'setCamPosX                 @apps/po.._options.h        void setCamPosX(float x) { camPos.x = x; }', 'action__tagname': 'setCamPosX'}, {'word': 'setCamPosY', 'action__pattern': '\M^    void setCamPosY(float y) { camPos.y = y; }$', 'action__path': 'apps/pose_renderer/include/pose_renderer_options.h', 'kind': 'jump_list', 'abbr': 'setCamPosY                 @apps/po.._options.h      void setCamPosY(float y) { camPos.y = y; }', 'action__tagname': 'setCamPosY'}, {'word': 'setCamPosY', 'action__pattern': '\M^      void setCamPosY(float y) { camPos.y = y; }$', 'action__path': 'apps/pose_viewer/include/pose_viewer_options.h', 'kind': 'jump_list', 'abbr': 'setCamPosY                 @apps/po.._options.h        void setCamPosY(float y) { camPos.y = y; }', 'action__tagname': 'setCamPosY'}, {'word': 'setCamPosZ', 'action__pattern': '\M^    void setCamPosZ(float z) { camPos.z = z; }$', 'action__path': 'apps/pose_renderer/include/pose_renderer_options.h', 'kind': 'jump_list', 'abbr': 'setCamPosZ                 @apps/po.._options.h      void setCamPosZ(float z) { camPos.z = z; }', 'action__tagname': 'setCamPosZ'}, {'word': 'setCamPosZ', 'action__pattern': '\M^      void setCamPosZ(float z) { camPos.z = z; }$', 'action__path': 'apps/pose_viewer/include/pose_viewer_options.h', 'kind': 'jump_list', 'abbr': 'setCamPosZ                 @apps/po.._options.h        void setCamPosZ(float z) { camPos.z = z; }', 'action__tagname': 'setCamPosZ'}, {'word': 'setCamTargetX', 'action__pattern': '\M^    void setCamTargetX(float x) { camTarget.x = x; }$', 'action__path': 'apps/pose_renderer/include/pose_renderer_options.h', 'kind': 'jump_list', 'abbr': 'setCamTargetX              @apps/po.._options.h      void setCamTargetX(float x) { camTarget.x = x; }', 'action__tagname': 'setCamTargetX'}, {'word': 'setCamTargetX', 'action__pattern': '\M^      void setCamTargetX(float x) { camTarget.x = x; }$', 'action__path': 'apps/pose_viewer/include/pose_viewer_options.h', 'kind': 'jump_list', 'abbr': 'setCamTargetX              @apps/po.._options.h        void setCamTargetX(float x) { camTarget.x = x; }', 'action__tagname': 'setCamTargetX'}, {'word': 'setCamTargetY', 'action__pattern': '\M^    void setCamTargetY(float y) { camTarget.y = y; }$', 'action__path': 'apps/pose_renderer/include/pose_renderer_options.h', 'kind': 'jump_list', 'abbr': 'setCamTargetY              @apps/po.._options.h      void setCamTargetY(float y) { camTarget.y = y; }', 'action__tagname': 'setCamTargetY'}, {'word': 'setCamTargetY', 'action__pattern': '\M^      void setCamTargetY(float y) { camTarget.y = y; }$', 'action__path': 'apps/pose_viewer/include/pose_viewer_options.h', 'kind': 'jump_list', 'abbr': 'setCamTargetY              @apps/po.._options.h        void setCamTargetY(float y) { camTarget.y = y; }', 'action__tagname': 'setCamTargetY'}, {'word': 'setCamTargetZ', 'action__pattern': '\M^    void setCamTargetZ(float z) { camTarget.z = z; }$', 'action__path': 'apps/pose_renderer/include/pose_renderer_options.h', 'kind': 'jump_list', 'abbr': 'setCamTargetZ              @apps/po.._options.h      void setCamTargetZ(float z) { camTarget.z = z; }', 'action__tagname': 'setCamTargetZ'}, {'word': 'setCamTargetZ', 'action__pattern': '\M^      void setCamTargetZ(float z) { camTarget.z = z; }$', 'action__path': 'apps/pose_viewer/include/pose_viewer_options.h', 'kind': 'jump_list', 'abbr': 'setCamTargetZ              @apps/po.._options.h        void setCamTargetZ(float z) { camTarget.z = z; }', 'action__tagname': 'setCamTargetZ'}, {'word': 'setCamUpX', 'action__pattern': '\M^    void setCamUpX(float x) { camUp.x = x; }$', 'action__path': 'apps/pose_renderer/include/pose_renderer_options.h', 'kind': 'jump_list', 'abbr': 'setCamUpX                  @apps/po.._options.h      void setCamUpX(float x) { camUp.x = x; }', 'action__tagname': 'setCamUpX'}, {'word': 'setCamUpX', 'action__pattern': '\M^      void setCamUpX(float x) { camUp.x = x; }$', 'action__path': 'apps/pose_viewer/include/pose_viewer_options.h', 'kind': 'jump_list', 'abbr': 'setCamUpX                  @apps/po.._options.h        void setCamUpX(float x) { camUp.x = x; }', 'action__tagname': 'setCamUpX'}, {'word': 'setCamUpY', 'action__pattern': '\M^    void setCamUpY(float y) { camUp.y = y; }$', 'action__path': 'apps/pose_renderer/include/pose_renderer_options.h', 'kind': 'jump_list', 'abbr': 'setCamUpY                  @apps/po.._options.h      void setCamUpY(float y) { camUp.y = y; }', 'action__tagname': 'setCamUpY'}, {'word': 'setCamUpY', 'action__pattern': '\M^      void setCamUpY(float y) { camUp.y = y; }$', 'action__path': 'apps/pose_viewer/include/pose_viewer_options.h', 'kind': 'jump_list', 'abbr': 'setCamUpY                  @apps/po.._options.h        void setCamUpY(float y) { camUp.y = y; }', 'action__tagname': 'setCamUpY'}, {'word': 'setCamUpZ', 'action__pattern': '\M^    void setCamUpZ(float z) { camUp.z = z; }$', 'action__path': 'apps/pose_renderer/include/pose_renderer_options.h', 'kind': 'jump_list', 'abbr': 'setCamUpZ                  @apps/po.._options.h      void setCamUpZ(float z) { camUp.z = z; }', 'action__tagname': 'setCamUpZ'}, {'word': 'setCamUpZ', 'action__pattern': '\M^      void setCamUpZ(float z) { camUp.z = z; }$', 'action__path': 'apps/pose_viewer/include/pose_viewer_options.h', 'kind': 'jump_list', 'abbr': 'setCamUpZ                  @apps/po.._options.h        void setCamUpZ(float z) { camUp.z = z; }', 'action__tagname': 'setCamUpZ'}, {'word': 'setCamera', 'action__pattern': '\M^    void setCamera(const unsigned int c) { calibratedCamera = c; }$', 'action__path': 'apps/pose_renderer/include/pose_renderer_options.h', 'kind': 'jump_list', 'abbr': 'setCamera                  @apps/po.._options.h      void setCamera(const unsigned int c) { calibratedCamera = c; }', 'action__tagname': 'setCamera'}, {'word': 'setCamera', 'action__pattern': '\M^void Pipeline::setCamera$', 'action__path': 'modules/gl/src/pipeline.cc', 'kind': 'jump_list', 'abbr': 'setCamera                  @modules..ipeline.cc  void Pipeline::setCamera', 'action__tagname': 'setCamera'}, {'word': 'setColorKeyFrom16bit', 'action__pattern': '\M^static void setColorKeyFrom16bit(LodePNGColorMode* mode_out, unsigned r, unsigned g, unsigned b, unsigned bitdepth)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'setColorKeyFrom16bit       @ext/lod..odepng.cpp  static void setColorKeyFrom16bit(LodePNGColorMode* mode_out, unsigned r, unsigned g, unsigned b, unsigned bitdepth)', 'action__tagname': 'setColorKeyFrom16bit'}, {'word': 'setConfigFile', 'action__pattern': '\M^      void setConfigFile(const std::string c) { configFile = c; }$', 'action__path': 'apps/bmvc_project/include/bmvc_options.h', 'kind': 'jump_list', 'abbr': 'setConfigFile              @apps/bm.._options.h        void setConfigFile(const std::string c) { configFile = c; }', 'action__tagname': 'setConfigFile'}, {'word': 'setConfigFile', 'action__pattern': '\M^      void setConfigFile(const std::string c) { configFile = c; }$', 'action__path': 'apps/depth_shader_viewer/include/depth_shader_viewer_options.h', 'kind': 'jump_list', 'abbr': 'setConfigFile              @apps/de.._options.h        void setConfigFile(const std::string c) { configFile = c; }', 'action__tagname': 'setConfigFile'}, {'word': 'setConfigFile', 'action__pattern': '\M^      void setConfigFile(const std::string c) { configFile = c; }$', 'action__path': 'apps/edge_shader_viewer/include/edge_shader_viewer_options.h', 'kind': 'jump_list', 'abbr': 'setConfigFile              @apps/ed.._options.h        void setConfigFile(const std::string c) { configFile = c; }', 'action__tagname': 'setConfigFile'}, {'word': 'setConfigFile', 'action__pattern': '\M^      void setConfigFile(const std::string c) { configFile = c; }$', 'action__path': 'apps/gbuffer_viewer/include/gbuffer_viewer_options.h', 'kind': 'jump_list', 'abbr': 'setConfigFile              @apps/gb.._options.h        void setConfigFile(const std::string c) { configFile = c; }', 'action__tagname': 'setConfigFile'}, {'word': 'setConfigFile', 'action__pattern': '\M^      void setConfigFile(const std::string c) { configFile = c; }$', 'action__path': 'apps/multicam_mesh_viewer/include/mc_mesh_viewer_options.h', 'kind': 'jump_list', 'abbr': 'setConfigFile              @apps/mu.._options.h        void setConfigFile(const std::string c) { configFile = c; }', 'action__tagname': 'setConfigFile'}, {'word': 'setConfigFile', 'action__pattern': '\M^      void setConfigFile(const std::string c) { configFile = c; }$', 'action__path': 'apps/pose_creator/include/pose_creator_options.h', 'kind': 'jump_list', 'abbr': 'setConfigFile              @apps/po.._options.h        void setConfigFile(const std::string c) { configFile = c; }', 'action__tagname': 'setConfigFile'}, {'word': 'setConfigFile', 'action__pattern': '\M^    void setConfigFile(const std::string c) { configFile = c; }$', 'action__path': 'apps/pose_renderer/include/pose_renderer_options.h', 'kind': 'jump_list', 'abbr': 'setConfigFile              @apps/po.._options.h      void setConfigFile(const std::string c) { configFile = c; }', 'action__tagname': 'setConfigFile'}, {'word': 'setConfigFile', 'action__pattern': '\M^      void setConfigFile(const std::string c) { configFile = c; }$', 'action__path': 'apps/pose_viewer/include/pose_viewer_options.h', 'kind': 'jump_list', 'abbr': 'setConfigFile              @apps/po.._options.h        void setConfigFile(const std::string c) { configFile = c; }', 'action__tagname': 'setConfigFile'}, {'word': 'setDepthFrag', 'action__pattern': '\M^      void setDepthFrag(const std::string s) { depthFrag = s; }$', 'action__path': 'apps/bmvc_project/include/bmvc_options.h', 'kind': 'jump_list', 'abbr': 'setDepthFrag               @apps/bm.._options.h        void setDepthFrag(const std::string s) { depthFrag = s; }', 'action__tagname': 'setDepthFrag'}, {'word': 'setDepthImage', 'action__pattern': '\M^void CameraImage::setDepthImage(const cv::Mat& image)$', 'action__path': 'ext/objective_functions/xing/aig/camera_image.cc', 'kind': 'jump_list', 'abbr': 'setDepthImage              @ext/obj..a_image.cc  void CameraImage::setDepthImage(const cv::Mat& image)', 'action__tagname': 'setDepthImage'}, {'word': 'setDepthMode', 'action__pattern': '\M^void setDepthMode(double alpha)$', 'action__path': 'ext/objective_functions/prog/showedge/main.cc', 'kind': 'jump_list', 'abbr': 'setDepthMode               @ext/obj..ge/main.cc  void setDepthMode(double alpha)', 'action__tagname': 'setDepthMode'}, {'word': 'setDepthVert', 'action__pattern': '\M^      void setDepthVert(const std::string s) { depthVert = s; }$', 'action__path': 'apps/bmvc_project/include/bmvc_options.h', 'kind': 'jump_list', 'abbr': 'setDepthVert               @apps/bm.._options.h        void setDepthVert(const std::string s) { depthVert = s; }', 'action__tagname': 'setDepthVert'}, {'word': 'setEdgeFrag', 'action__pattern': '\M^      void setEdgeFrag(const std::string s) { edgeFrag = s; }$', 'action__path': 'apps/bmvc_project/include/bmvc_options.h', 'kind': 'jump_list', 'abbr': 'setEdgeFrag                @apps/bm.._options.h        void setEdgeFrag(const std::string s) { edgeFrag = s; }', 'action__tagname': 'setEdgeFrag'}, {'word': 'setEdgeFragShader', 'action__pattern': '\M^      void setEdgeFragShader(const std::string f) { edgeFragShader = f; }$', 'action__path': 'apps/edge_shader_viewer/include/edge_shader_viewer_options.h', 'kind': 'jump_list', 'abbr': 'setEdgeFragShader          @apps/ed.._options.h        void setEdgeFragShader(const std::string f) { edgeFragShader = f; }', 'action__tagname': 'setEdgeFragShader'}, {'word': 'setEdgeGeomFrag', 'action__pattern': '\M^      void setEdgeGeomFrag(const std::string s) { edgeGeomFrag = s; }$', 'action__path': 'apps/bmvc_project/include/bmvc_options.h', 'kind': 'jump_list', 'abbr': 'setEdgeGeomFrag            @apps/bm.._options.h        void setEdgeGeomFrag(const std::string s) { edgeGeomFrag = s; }', 'action__tagname': 'setEdgeGeomFrag'}, {'word': 'setEdgeGeomVert', 'action__pattern': '\M^      void setEdgeGeomVert(const std::string s) { edgeGeomVert = s; }$', 'action__path': 'apps/bmvc_project/include/bmvc_options.h', 'kind': 'jump_list', 'abbr': 'setEdgeGeomVert            @apps/bm.._options.h        void setEdgeGeomVert(const std::string s) { edgeGeomVert = s; }', 'action__tagname': 'setEdgeGeomVert'}, {'word': 'setEdgeImage', 'action__pattern': '\M^void CameraImage::setEdgeImage(const cv::Mat& image)$', 'action__path': 'ext/objective_functions/xing/aig/camera_image.cc', 'kind': 'jump_list', 'abbr': 'setEdgeImage               @ext/obj..a_image.cc  void CameraImage::setEdgeImage(const cv::Mat& image)', 'action__tagname': 'setEdgeImage'}, {'word': 'setEdgeImage', 'action__pattern': '\M^void EdgeDistanceMap::setEdgeImage(const cv::Mat& edgeMap)$', 'action__path': 'ext/objective_functions/xing/aig/edge_distance_map.cc', 'kind': 'jump_list', 'abbr': 'setEdgeImage               @ext/obj..nce_map.cc  void EdgeDistanceMap::setEdgeImage(const cv::Mat& edgeMap)', 'action__tagname': 'setEdgeImage'}, {'word': 'setEdgeVert', 'action__pattern': '\M^      void setEdgeVert(const std::string s) { edgeVert = s; }$', 'action__path': 'apps/bmvc_project/include/bmvc_options.h', 'kind': 'jump_list', 'abbr': 'setEdgeVert                @apps/bm.._options.h        void setEdgeVert(const std::string s) { edgeVert = s; }', 'action__tagname': 'setEdgeVert'}, {'word': 'setEdgeVertShader', 'action__pattern': '\M^      void setEdgeVertShader(const std::string f) { edgeVertShader = f; }$', 'action__path': 'apps/edge_shader_viewer/include/edge_shader_viewer_options.h', 'kind': 'jump_list', 'abbr': 'setEdgeVertShader          @apps/ed.._options.h        void setEdgeVertShader(const std::string f) { edgeVertShader = f; }', 'action__tagname': 'setEdgeVertShader'}, {'word': 'setEndPosition', 'action__pattern': '\M^inline void Joint::setEndPosition(const glm::vec3& pos) {$', 'action__path': 'modules/core/include/old_joint.h', 'kind': 'jump_list', 'abbr': 'setEndPosition             @modules..ld_joint.h  inline void Joint::setEndPosition(const glm::vec3& pos) {', 'action__tagname': 'setEndPosition'}, {'word': 'setFragShader', 'action__pattern': '\M^      void setFragShader(const std::string f) { fragShader = f; }$', 'action__path': 'apps/depth_shader_viewer/include/depth_shader_viewer_options.h', 'kind': 'jump_list', 'abbr': 'setFragShader              @apps/de.._options.h        void setFragShader(const std::string f) { fragShader = f; }', 'action__tagname': 'setFragShader'}, {'word': 'setFragShader', 'action__pattern': '\M^      void setFragShader(const std::string f) { fragShader = f; }$', 'action__path': 'apps/multicam_mesh_viewer/include/mc_mesh_viewer_options.h', 'kind': 'jump_list', 'abbr': 'setFragShader              @apps/mu.._options.h        void setFragShader(const std::string f) { fragShader = f; }', 'action__tagname': 'setFragShader'}, {'word': 'setFragShader', 'action__pattern': '\M^      void setFragShader(const std::string f) { fragShader = f; }$', 'action__path': 'apps/pose_viewer/include/pose_viewer_options.h', 'kind': 'jump_list', 'abbr': 'setFragShader              @apps/po.._options.h        void setFragShader(const std::string f) { fragShader = f; }', 'action__tagname': 'setFragShader'}, {'word': 'setGeomFragShader', 'action__pattern': '\M^      void setGeomFragShader(const std::string f) { geomFragShader = f; }$', 'action__path': 'apps/edge_shader_viewer/include/edge_shader_viewer_options.h', 'kind': 'jump_list', 'abbr': 'setGeomFragShader          @apps/ed.._options.h        void setGeomFragShader(const std::string f) { geomFragShader = f; }', 'action__tagname': 'setGeomFragShader'}, {'word': 'setGeomFragShader', 'action__pattern': '\M^      void setGeomFragShader(const std::string f) { geomFragShader = f; }$', 'action__path': 'apps/gbuffer_viewer/include/gbuffer_viewer_options.h', 'kind': 'jump_list', 'abbr': 'setGeomFragShader          @apps/gb.._options.h        void setGeomFragShader(const std::string f) { geomFragShader = f; }', 'action__tagname': 'setGeomFragShader'}, {'word': 'setGeomVertShader', 'action__pattern': '\M^      void setGeomVertShader(const std::string f) { geomVertShader = f; }$', 'action__path': 'apps/edge_shader_viewer/include/edge_shader_viewer_options.h', 'kind': 'jump_list', 'abbr': 'setGeomVertShader          @apps/ed.._options.h        void setGeomVertShader(const std::string f) { geomVertShader = f; }', 'action__tagname': 'setGeomVertShader'}, {'word': 'setGeomVertShader', 'action__pattern': '\M^      void setGeomVertShader(const std::string f) { geomVertShader = f; }$', 'action__path': 'apps/gbuffer_viewer/include/gbuffer_viewer_options.h', 'kind': 'jump_list', 'abbr': 'setGeomVertShader          @apps/gb.._options.h        void setGeomVertShader(const std::string f) { geomVertShader = f; }', 'action__tagname': 'setGeomVertShader'}, {'word': 'setGlobalPosition', 'action__pattern': '\M^void Pose::setGlobalPosition(const glm::vec3& pos) {$', 'action__path': 'modules/core/src/old_pose.cc', 'kind': 'jump_list', 'abbr': 'setGlobalPosition          @modules..ld_pose.cc  void Pose::setGlobalPosition(const glm::vec3& pos) {', 'action__tagname': 'setGlobalPosition'}, {'word': 'setGlobalRotation', 'action__pattern': '\M^void Pose::setGlobalRotation(const glm::quat& rot) {$', 'action__path': 'modules/core/src/old_pose.cc', 'kind': 'jump_list', 'abbr': 'setGlobalRotation          @modules..ld_pose.cc  void Pose::setGlobalRotation(const glm::quat& rot) {', 'action__tagname': 'setGlobalRotation'}, {'word': 'setImage', 'action__pattern': '\M^void Texture::setImage(const cv::Mat& image) {$', 'action__path': 'modules/gl/src/texture.cc', 'kind': 'jump_list', 'abbr': 'setImage                   @modules..texture.cc  void Texture::setImage(const cv::Mat& image) {', 'action__tagname': 'setImage'}, {'word': 'setImage', 'action__pattern': '\M^void Texture::setImage(const std::string& f, unsigned int t) {$', 'action__path': 'modules/gl/src/texture.cc', 'kind': 'jump_list', 'abbr': 'setImage                   @modules..texture.cc  void Texture::setImage(const std::string& f, unsigned int t) {', 'action__tagname': 'setImage'}, {'word': 'setImageDir', 'action__pattern': '\M^      void setImageDir(const std::string s) { imageDir = s; }$', 'action__path': 'apps/pose_creator/include/pose_creator_options.h', 'kind': 'jump_list', 'abbr': 'setImageDir                @apps/po.._options.h        void setImageDir(const std::string s) { imageDir = s; }', 'action__tagname': 'setImageDir'}, {'word': 'setImageLocation', 'action__pattern': '\M^  void PoseViewerOptions::setImageLocation(std::string filename) {$', 'action__path': 'apps/pose_viewer/src/pose_viewer_options.cc', 'kind': 'jump_list', 'abbr': 'setImageLocation           @apps/po..options.cc    void PoseViewerOptions::setImageLocation(std::string filename) {', 'action__tagname': 'setImageLocation'}, {'word': 'setInputDir', 'action__pattern': '\M^      void setInputDir(const std::string o) { inputDir = o; }$', 'action__path': 'apps/bmvc_project/include/bmvc_options.h', 'kind': 'jump_list', 'abbr': 'setInputDir                @apps/bm.._options.h        void setInputDir(const std::string o) { inputDir = o; }', 'action__tagname': 'setInputDir'}, {'word': 'setInputDir', 'action__pattern': '\M^void PoseInterpolatorOptions::setInputDir(const std::string s) {$', 'action__path': 'apps/pose_interpolator/src/pose_interpolator_options.cc', 'kind': 'jump_list', 'abbr': 'setInputDir                @apps/po..options.cc  void PoseInterpolatorOptions::setInputDir(const std::string s) {', 'action__tagname': 'setInputDir'}, {'word': 'setInputPose', 'action__pattern': '\M^      void setInputPose(const std::string s) { inputPose = s; }$', 'action__path': 'apps/pose_creator/include/pose_creator_options.h', 'kind': 'jump_list', 'abbr': 'setInputPose               @apps/po.._options.h        void setInputPose(const std::string s) { inputPose = s; }', 'action__tagname': 'setInputPose'}, {'word': 'setInterpolationType', 'action__pattern': '\M^void PoseInterpolatorOptions::setInterpolationType(const char c) {$', 'action__path': 'apps/pose_interpolator/src/pose_interpolator_options.cc', 'kind': 'jump_list', 'abbr': 'setInterpolationType       @apps/po..options.cc  void PoseInterpolatorOptions::setInterpolationType(const char c) {', 'action__tagname': 'setInterpolationType'}, {'word': 'setJoint', 'action__pattern': '\M^void Pose<T>::setJoint(const std::string& name, const T& val) {$', 'action__path': 'modules/core/include/pose.h', 'kind': 'jump_list', 'abbr': 'setJoint                   @modules..ude/pose.h  void Pose<T>::setJoint(const std::string& name, const T& val) {', 'action__tagname': 'setJoint'}, {'word': 'setJointEndPosition', 'action__pattern': '\M^void Pose::setJointEndPosition(const std::string& joint, const glm::vec3& pos) {$', 'action__path': 'modules/core/src/old_pose.cc', 'kind': 'jump_list', 'abbr': 'setJointEndPosition        @modules..ld_pose.cc  void Pose::setJointEndPosition(const std::string& joint, const glm::vec3& pos) {', 'action__tagname': 'setJointEndPosition'}, {'word': 'setJointRotation', 'action__pattern': '\M^void Pose::setJointRotation(const std::string& joint, const glm::quat& rot) {$', 'action__path': 'modules/core/src/old_pose.cc', 'kind': 'jump_list', 'abbr': 'setJointRotation           @modules..ld_pose.cc  void Pose::setJointRotation(const std::string& joint, const glm::quat& rot) {', 'action__tagname': 'setJointRotation'}, {'word': 'setLeft', 'action__pattern': '\M^void LatentTreeNode::setLeft(const std::shared_ptr<LatentTreeNode>& l) {$', 'action__path': 'modules/ml/src/latent_tree_node.cc', 'kind': 'jump_list', 'abbr': 'setLeft                    @modules..ee_node.cc  void LatentTreeNode::setLeft(const std::shared_ptr<LatentTreeNode>& l) {', 'action__tagname': 'setLeft'}, {'word': 'setLength', 'action__pattern': '\M^inline void Joint::setLength(double l) {$', 'action__path': 'modules/core/include/old_joint.h', 'kind': 'jump_list', 'abbr': 'setLength                  @modules..ld_joint.h  inline void Joint::setLength(double l) {', 'action__tagname': 'setLength'}, {'word': 'setLogfile', 'action__pattern': '\M^      void setLogfile(const std::string l) { logfile = l; }$', 'action__path': 'apps/bmvc_project/include/bmvc_options.h', 'kind': 'jump_list', 'abbr': 'setLogfile                 @apps/bm.._options.h        void setLogfile(const std::string l) { logfile = l; }', 'action__tagname': 'setLogfile'}, {'word': 'setMeshFile', 'action__pattern': '\M^      void setMeshFile(const std::string h) { meshFile = h; }$', 'action__path': 'apps/bmvc_project/include/bmvc_options.h', 'kind': 'jump_list', 'abbr': 'setMeshFile                @apps/bm.._options.h        void setMeshFile(const std::string h) { meshFile = h; }', 'action__tagname': 'setMeshFile'}, {'word': 'setMeshFile', 'action__pattern': '\M^      void setMeshFile(const std::string h) { meshFile = h; }$', 'action__path': 'apps/depth_shader_viewer/include/depth_shader_viewer_options.h', 'kind': 'jump_list', 'abbr': 'setMeshFile                @apps/de.._options.h        void setMeshFile(const std::string h) { meshFile = h; }', 'action__tagname': 'setMeshFile'}, {'word': 'setMeshFile', 'action__pattern': '\M^      void setMeshFile(const std::string h) { meshFile = h; }$', 'action__path': 'apps/edge_shader_viewer/include/edge_shader_viewer_options.h', 'kind': 'jump_list', 'abbr': 'setMeshFile                @apps/ed.._options.h        void setMeshFile(const std::string h) { meshFile = h; }', 'action__tagname': 'setMeshFile'}, {'word': 'setMeshFile', 'action__pattern': '\M^      void setMeshFile(const std::string h) { meshFile = h; }$', 'action__path': 'apps/gbuffer_viewer/include/gbuffer_viewer_options.h', 'kind': 'jump_list', 'abbr': 'setMeshFile                @apps/gb.._options.h        void setMeshFile(const std::string h) { meshFile = h; }', 'action__tagname': 'setMeshFile'}, {'word': 'setMeshFile', 'action__pattern': '\M^      void setMeshFile(const std::string h) { meshFile = h; }$', 'action__path': 'apps/multicam_mesh_viewer/include/mc_mesh_viewer_options.h', 'kind': 'jump_list', 'abbr': 'setMeshFile                @apps/mu.._options.h        void setMeshFile(const std::string h) { meshFile = h; }', 'action__tagname': 'setMeshFile'}, {'word': 'setMeshFile', 'action__pattern': '\M^      void setMeshFile(const std::string h) { meshFile = h; }$', 'action__path': 'apps/pose_creator/include/pose_creator_options.h', 'kind': 'jump_list', 'abbr': 'setMeshFile                @apps/po.._options.h        void setMeshFile(const std::string h) { meshFile = h; }', 'action__tagname': 'setMeshFile'}, {'word': 'setMeshFile', 'action__pattern': '\M^    void setMeshFile(const std::string h) { meshFile = h; }$', 'action__path': 'apps/pose_renderer/include/pose_renderer_options.h', 'kind': 'jump_list', 'abbr': 'setMeshFile                @apps/po.._options.h      void setMeshFile(const std::string h) { meshFile = h; }', 'action__tagname': 'setMeshFile'}, {'word': 'setMeshFile', 'action__pattern': '\M^      void setMeshFile(const std::string h) { meshFile = h; }$', 'action__path': 'apps/pose_viewer/include/pose_viewer_options.h', 'kind': 'jump_list', 'abbr': 'setMeshFile                @apps/po.._options.h        void setMeshFile(const std::string h) { meshFile = h; }', 'action__tagname': 'setMeshFile'}, {'word': 'setName', 'action__pattern': '\M^void Pose<T>::setName(const std::string& n) {$', 'action__path': 'modules/core/include/pose.h', 'kind': 'jump_list', 'abbr': 'setName                    @modules..ude/pose.h  void Pose<T>::setName(const std::string& n) {', 'action__tagname': 'setName'}, {'word': 'setNumGenerations', 'action__pattern': '\M^      void setNumGenerations(const unsigned int g) { numGenerations = g; }$', 'action__path': 'apps/bmvc_project/include/bmvc_options.h', 'kind': 'jump_list', 'abbr': 'setNumGenerations          @apps/bm.._options.h        void setNumGenerations(const unsigned int g) { numGenerations = g; }', 'action__tagname': 'setNumGenerations'}, {'word': 'setNumParticles', 'action__pattern': '\M^      void setNumParticles(const unsigned int p) { numParticles = p; }$', 'action__path': 'apps/bmvc_project/include/bmvc_options.h', 'kind': 'jump_list', 'abbr': 'setNumParticles            @apps/bm.._options.h        void setNumParticles(const unsigned int p) { numParticles = p; }', 'action__tagname': 'setNumParticles'}, {'word': 'setOutputDir', 'action__pattern': '\M^      void setOutputDir(const std::string o) { outputDir = o; }$', 'action__path': 'apps/bmvc_project/include/bmvc_options.h', 'kind': 'jump_list', 'abbr': 'setOutputDir               @apps/bm.._options.h        void setOutputDir(const std::string o) { outputDir = o; }', 'action__tagname': 'setOutputDir'}, {'word': 'setOutputDir', 'action__pattern': '\M^void PoseInterpolatorOptions::setOutputDir(const std::string s) {$', 'action__path': 'apps/pose_interpolator/src/pose_interpolator_options.cc', 'kind': 'jump_list', 'abbr': 'setOutputDir               @apps/po..options.cc  void PoseInterpolatorOptions::setOutputDir(const std::string s) {', 'action__tagname': 'setOutputDir'}, {'word': 'setOutputDir', 'action__pattern': '\M^    void setOutputDir(const std::string o) { outputDir = o; }$', 'action__path': 'apps/pose_renderer/include/pose_renderer_options.h', 'kind': 'jump_list', 'abbr': 'setOutputDir               @apps/po.._options.h      void setOutputDir(const std::string o) { outputDir = o; }', 'action__tagname': 'setOutputDir'}, {'word': 'setOutputPose', 'action__pattern': '\M^      void setOutputPose(const std::string s) { outputPose = s; }$', 'action__path': 'apps/pose_creator/include/pose_creator_options.h', 'kind': 'jump_list', 'abbr': 'setOutputPose              @apps/po.._options.h        void setOutputPose(const std::string s) { outputPose = s; }', 'action__tagname': 'setOutputPose'}, {'word': 'setParent', 'action__pattern': '\M^void Bone::setParent(const std::shared_ptr<Bone>& p) {$', 'action__path': 'modules/core/src/bone.cc', 'kind': 'jump_list', 'abbr': 'setParent                  @modules..rc/bone.cc  void Bone::setParent(const std::shared_ptr<Bone>& p) {', 'action__tagname': 'setParent'}, {'word': 'setParent', 'action__pattern': '\M^void LatentTreeNode::setParent(const std::shared_ptr<LatentTreeNode>& p) {$', 'action__path': 'modules/ml/src/latent_tree_node.cc', 'kind': 'jump_list', 'abbr': 'setParent                  @modules..ee_node.cc  void LatentTreeNode::setParent(const std::shared_ptr<LatentTreeNode>& p) {', 'action__tagname': 'setParent'}, {'word': 'setPerspectiveProj', 'action__pattern': '\M^void Pipeline::setPerspectiveProj$', 'action__path': 'modules/gl/src/pipeline.cc', 'kind': 'jump_list', 'abbr': 'setPerspectiveProj         @modules..ipeline.cc  void Pipeline::setPerspectiveProj', 'action__tagname': 'setPerspectiveProj'}, {'word': 'setPose', 'action__pattern': '\M^void SphereModel::setPose(const core::Pose<glm::quat>& p) {$', 'action__path': 'modules/core/src/sphere_model.cc', 'kind': 'jump_list', 'abbr': 'setPose                    @modules..e_model.cc  void SphereModel::setPose(const core::Pose<glm::quat>& p) {', 'action__tagname': 'setPose'}, {'word': 'setPose', 'action__pattern': '\M^std::vector<glm::mat4> Mesh::setPose(const core::Pose<glm::quat>& pose) {$', 'action__path': 'modules/gl/src/mesh.cc', 'kind': 'jump_list', 'abbr': 'setPose                    @modules..rc/mesh.cc  std::vector<glm::mat4> Mesh::setPose(const core::Pose<glm::quat>& pose) {', 'action__tagname': 'setPose'}, {'word': 'setPoseCount', 'action__pattern': '\M^inline void PoseInterpolatorOptions::setPoseCount(const unsigned int c) {$', 'action__path': 'apps/pose_interpolator/include/pose_interpolator_options.h', 'kind': 'jump_list', 'abbr': 'setPoseCount               @apps/po.._options.h  inline void PoseInterpolatorOptions::setPoseCount(const unsigned int c) {', 'action__tagname': 'setPoseCount'}, {'word': 'setPoseFile', 'action__pattern': '\M^      void setPoseFile(const std::string f) { poseFile = f; }$', 'action__path': 'apps/bmvc_project/include/bmvc_options.h', 'kind': 'jump_list', 'abbr': 'setPoseFile                @apps/bm.._options.h        void setPoseFile(const std::string f) { poseFile = f; }', 'action__tagname': 'setPoseFile'}, {'word': 'setPoseFile', 'action__pattern': '\M^      void setPoseFile(const std::string f) { poseFile = f; }$', 'action__path': 'apps/depth_shader_viewer/include/depth_shader_viewer_options.h', 'kind': 'jump_list', 'abbr': 'setPoseFile                @apps/de.._options.h        void setPoseFile(const std::string f) { poseFile = f; }', 'action__tagname': 'setPoseFile'}, {'word': 'setPoseFile', 'action__pattern': '\M^      void setPoseFile(const std::string f) { poseFile = f; }$', 'action__path': 'apps/edge_shader_viewer/include/edge_shader_viewer_options.h', 'kind': 'jump_list', 'abbr': 'setPoseFile                @apps/ed.._options.h        void setPoseFile(const std::string f) { poseFile = f; }', 'action__tagname': 'setPoseFile'}, {'word': 'setPoseFile', 'action__pattern': '\M^      void setPoseFile(const std::string f) { poseFile = f; }$', 'action__path': 'apps/gbuffer_viewer/include/gbuffer_viewer_options.h', 'kind': 'jump_list', 'abbr': 'setPoseFile                @apps/gb.._options.h        void setPoseFile(const std::string f) { poseFile = f; }', 'action__tagname': 'setPoseFile'}, {'word': 'setPoseFile', 'action__pattern': '\M^      void setPoseFile(const std::string f) { poseFile = f; }$', 'action__path': 'apps/multicam_mesh_viewer/include/mc_mesh_viewer_options.h', 'kind': 'jump_list', 'abbr': 'setPoseFile                @apps/mu.._options.h        void setPoseFile(const std::string f) { poseFile = f; }', 'action__tagname': 'setPoseFile'}, {'word': 'setPoseFiles', 'action__pattern': '\M^void PoseRendererOptions::setPoseFiles(const std::string p) {$', 'action__path': 'apps/pose_renderer/src/pose_renderer_options.cc', 'kind': 'jump_list', 'abbr': 'setPoseFiles               @apps/po..options.cc  void PoseRendererOptions::setPoseFiles(const std::string p) {', 'action__tagname': 'setPoseFiles'}, {'word': 'setPoseLocation', 'action__pattern': '\M^  void PoseViewerOptions::setPoseLocation(std::string filename) {$', 'action__path': 'apps/pose_viewer/src/pose_viewer_options.cc', 'kind': 'jump_list', 'abbr': 'setPoseLocation            @apps/po..options.cc    void PoseViewerOptions::setPoseLocation(std::string filename) {', 'action__tagname': 'setPoseLocation'}, {'word': 'setPoseName', 'action__pattern': '\M^void Pose::setPoseName(const std::string& n) {$', 'action__path': 'modules/core/src/old_pose.cc', 'kind': 'jump_list', 'abbr': 'setPoseName                @modules..ld_pose.cc  void Pose::setPoseName(const std::string& n) {', 'action__tagname': 'setPoseName'}, {'word': 'setPoseRecursive', 'action__pattern': '\M^void SphereModel::setPoseRecursive(const core::Pose<glm::quat>& p,$', 'action__path': 'modules/core/src/sphere_model.cc', 'kind': 'jump_list', 'abbr': 'setPoseRecursive           @modules..e_model.cc  void SphereModel::setPoseRecursive(const core::Pose<glm::quat>& p,', 'action__tagname': 'setPoseRecursive'}, {'word': 'setRGBImage', 'action__pattern': '\M^void CameraImage::setRGBImage(const cv::Mat& image)$', 'action__path': 'ext/objective_functions/xing/aig/camera_image.cc', 'kind': 'jump_list', 'abbr': 'setRGBImage                @ext/obj..a_image.cc  void CameraImage::setRGBImage(const cv::Mat& image)', 'action__tagname': 'setRGBImage'}, {'word': 'setRenderHeight', 'action__pattern': '\M^    void setRenderHeight(int h) { height = h; }$', 'action__path': 'apps/pose_renderer/include/pose_renderer_options.h', 'kind': 'jump_list', 'abbr': 'setRenderHeight            @apps/po.._options.h      void setRenderHeight(int h) { height = h; }', 'action__tagname': 'setRenderHeight'}, {'word': 'setRenderWidth', 'action__pattern': '\M^    void setRenderWidth(int w) { width = w; }$', 'action__path': 'apps/pose_renderer/include/pose_renderer_options.h', 'kind': 'jump_list', 'abbr': 'setRenderWidth             @apps/po.._options.h      void setRenderWidth(int w) { width = w; }', 'action__tagname': 'setRenderWidth'}, {'word': 'setRestPoseLocation', 'action__pattern': '\M^      void setRestPoseLocation(const std::string r) { restPose = r; }$', 'action__path': 'apps/pose_viewer/include/pose_viewer_options.h', 'kind': 'jump_list', 'abbr': 'setRestPoseLocation        @apps/po.._options.h        void setRestPoseLocation(const std::string r) { restPose = r; }', 'action__tagname': 'setRestPoseLocation'}, {'word': 'setRight', 'action__pattern': '\M^void LatentTreeNode::setRight(const std::shared_ptr<LatentTreeNode>& r) {$', 'action__path': 'modules/ml/src/latent_tree_node.cc', 'kind': 'jump_list', 'abbr': 'setRight                   @modules..ee_node.cc  void LatentTreeNode::setRight(const std::shared_ptr<LatentTreeNode>& r) {', 'action__tagname': 'setRight'}, {'word': 'setRootPosition', 'action__pattern': '\M^void Pose<T>::setRootPosition(const glm::vec3& pos) {$', 'action__path': 'modules/core/include/pose.h', 'kind': 'jump_list', 'abbr': 'setRootPosition            @modules..ude/pose.h  void Pose<T>::setRootPosition(const glm::vec3& pos) {', 'action__tagname': 'setRootPosition'}, {'word': 'setRootRotation', 'action__pattern': '\M^void Pose<T>::setRootRotation(const glm::mat4& rot) {$', 'action__path': 'modules/core/include/pose.h', 'kind': 'jump_list', 'abbr': 'setRootRotation            @modules..ude/pose.h  void Pose<T>::setRootRotation(const glm::mat4& rot) {', 'action__tagname': 'setRootRotation'}, {'word': 'setRootRotation', 'action__pattern': '\M^void Pose<T>::setRootRotation(const glm::quat& rot) {$', 'action__path': 'modules/core/include/pose.h', 'kind': 'jump_list', 'abbr': 'setRootRotation            @modules..ude/pose.h  void Pose<T>::setRootRotation(const glm::quat& rot) {', 'action__tagname': 'setRootRotation'}, {'word': 'setRotation', 'action__pattern': '\M^inline void Joint::setRotation(const glm::quat& rotation) {$', 'action__path': 'modules/core/include/old_joint.h', 'kind': 'jump_list', 'abbr': 'setRotation                @modules..ld_joint.h  inline void Joint::setRotation(const glm::quat& rotation) {', 'action__tagname': 'setRotation'}, {'word': 'setShaderDir', 'action__pattern': '\M^    void setShaderDir(const std::string s) {shaderDir = s;}$', 'action__path': 'apps/pose_renderer/include/pose_renderer_options.h', 'kind': 'jump_list', 'abbr': 'setShaderDir               @apps/po.._options.h      void setShaderDir(const std::string s) {shaderDir = s;}', 'action__tagname': 'setShaderDir'}, {'word': 'setShaderList', 'action__pattern': '\M^    void setShaderList(const std::string s) {shaderList = s;}$', 'action__path': 'apps/pose_renderer/include/pose_renderer_options.h', 'kind': 'jump_list', 'abbr': 'setShaderList              @apps/po.._options.h      void setShaderList(const std::string s) {shaderList = s;}', 'action__tagname': 'setShaderList'}, {'word': 'setShaders', 'action__pattern': '\M^void PoseRendererOptions::setShaders() {$', 'action__path': 'apps/pose_renderer/src/pose_renderer_options.cc', 'kind': 'jump_list', 'abbr': 'setShaders                 @apps/po..options.cc  void PoseRendererOptions::setShaders() {', 'action__tagname': 'setShaders'}, {'word': 'setSkelRecursive', 'action__pattern': '\M^Json::Value setSkelRecursive(const core::Bone& bone) {$', 'action__path': 'modules/io/src/json_writer_utils.cc', 'kind': 'jump_list', 'abbr': 'setSkelRecursive           @modules..r_utils.cc  Json::Value setSkelRecursive(const core::Bone& bone) {', 'action__tagname': 'setSkelRecursive'}, {'word': 'setSkinFrag', 'action__pattern': '\M^      void setSkinFrag(const std::string s) { skinFrag = s; }$', 'action__path': 'apps/bmvc_project/include/bmvc_options.h', 'kind': 'jump_list', 'abbr': 'setSkinFrag                @apps/bm.._options.h        void setSkinFrag(const std::string s) { skinFrag = s; }', 'action__tagname': 'setSkinFrag'}, {'word': 'setSkinTexture', 'action__pattern': '\M^void PoseShader::setSkinTexture(unsigned int tex) {$', 'action__path': 'modules/gl/src/pose_shader.cc', 'kind': 'jump_list', 'abbr': 'setSkinTexture             @modules.._shader.cc  void PoseShader::setSkinTexture(unsigned int tex) {', 'action__tagname': 'setSkinTexture'}, {'word': 'setSkinVert', 'action__pattern': '\M^      void setSkinVert(const std::string s) { skinVert = s; }$', 'action__path': 'apps/bmvc_project/include/bmvc_options.h', 'kind': 'jump_list', 'abbr': 'setSkinVert                @apps/bm.._options.h        void setSkinVert(const std::string s) { skinVert = s; }', 'action__tagname': 'setSkinVert'}, {'word': 'setTransparency', 'action__pattern': '\M^void PoseShader::setTransparency(float alpha) {$', 'action__path': 'modules/gl/src/pose_shader.cc', 'kind': 'jump_list', 'abbr': 'setTransparency            @modules.._shader.cc  void PoseShader::setTransparency(float alpha) {', 'action__tagname': 'setTransparency'}, {'word': 'setVertShader', 'action__pattern': '\M^      void setVertShader(const std::string f) { vertShader = f; }$', 'action__path': 'apps/depth_shader_viewer/include/depth_shader_viewer_options.h', 'kind': 'jump_list', 'abbr': 'setVertShader              @apps/de.._options.h        void setVertShader(const std::string f) { vertShader = f; }', 'action__tagname': 'setVertShader'}, {'word': 'setVertShader', 'action__pattern': '\M^      void setVertShader(const std::string f) { vertShader = f; }$', 'action__path': 'apps/multicam_mesh_viewer/include/mc_mesh_viewer_options.h', 'kind': 'jump_list', 'abbr': 'setVertShader              @apps/mu.._options.h        void setVertShader(const std::string f) { vertShader = f; }', 'action__tagname': 'setVertShader'}, {'word': 'setVertShader', 'action__pattern': '\M^      void setVertShader(const std::string f) { vertShader = f; }$', 'action__path': 'apps/pose_viewer/include/pose_viewer_options.h', 'kind': 'jump_list', 'abbr': 'setVertShader              @apps/po.._options.h        void setVertShader(const std::string f) { vertShader = f; }', 'action__tagname': 'setVertShader'}, {'word': 'setWVPTransform', 'action__pattern': '\M^void PoseShader::setWVPTransform(const glm::mat4& wvp) {$', 'action__path': 'modules/gl/src/pose_shader.cc', 'kind': 'jump_list', 'abbr': 'setWVPTransform            @modules.._shader.cc  void PoseShader::setWVPTransform(const glm::mat4& wvp) {', 'action__tagname': 'setWVPTransform'}, {'word': 'setWVTransform', 'action__pattern': '\M^void PoseShader::setWVTransform(const glm::mat4& wv) {$', 'action__path': 'modules/gl/src/pose_shader.cc', 'kind': 'jump_list', 'abbr': 'setWVTransform             @modules.._shader.cc  void PoseShader::setWVTransform(const glm::mat4& wv) {', 'action__tagname': 'setWVTransform'}, {'word': 'setWeight', 'action__pattern': '\M^    inline void setWeight(std::size_t index, double weight)$', 'action__path': 'ext/objective_functions/xing/aig/camera_image_evaluator.hpp', 'kind': 'jump_list', 'abbr': 'setWeight                  @ext/obj..luator.hpp      inline void setWeight(std::size_t index, double weight)', 'action__tagname': 'setWeight'}, {'word': 'setWindowName', 'action__pattern': '\M^void setWindowName(const char name[])$', 'action__path': 'ext/objective_functions/prog/showedge/main.cc', 'kind': 'jump_list', 'abbr': 'setWindowName              @ext/obj..ge/main.cc  void setWindowName(const char name[])', 'action__tagname': 'setWindowName'}, {'word': 'setWorldTransform', 'action__pattern': '\M^void PoseShader::setWorldTransform(const glm::mat4& world) {$', 'action__path': 'modules/gl/src/pose_shader.cc', 'kind': 'jump_list', 'abbr': 'setWorldTransform          @modules.._shader.cc  void PoseShader::setWorldTransform(const glm::mat4& world) {', 'action__tagname': 'setWorldTransform'}, {'word': 'shader', 'action__pattern': '\M^    std::unique_ptr<ShaderProgram> shader;$', 'action__path': 'apps/depth_shader_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'shader                     @apps/de..rc/main.cc      std::unique_ptr<ShaderProgram> shader;', 'action__tagname': 'shader'}, {'word': 'shader', 'action__pattern': '\M^    PoseShader shader;$', 'action__path': 'apps/pose_creator/src/main.cc', 'kind': 'jump_list', 'abbr': 'shader                     @apps/po..rc/main.cc      PoseShader shader;', 'action__tagname': 'shader'}, {'word': 'shader', 'action__pattern': '\M^    std::unique_ptr<ShaderProgram> shader;$', 'action__path': 'modules/gl/include/background_shader.h', 'kind': 'jump_list', 'abbr': 'shader                     @modules..d_shader.h      std::unique_ptr<ShaderProgram> shader;', 'action__tagname': 'shader'}, {'word': 'shader', 'action__pattern': '\M^    std::unique_ptr<ShaderProgram> shader;$', 'action__path': 'modules/gl/include/chessboard_drawer.h', 'kind': 'jump_list', 'abbr': 'shader                     @modules..d_drawer.h      std::unique_ptr<ShaderProgram> shader;', 'action__tagname': 'shader'}, {'word': 'shader', 'action__pattern': '\M^    std::unique_ptr<ShaderProgram> shader;$', 'action__path': 'modules/gl/include/pose_shader.h', 'kind': 'jump_list', 'abbr': 'shader                     @modules..e_shader.h      std::unique_ptr<ShaderProgram> shader;', 'action__tagname': 'shader'}, {'word': 'shader', 'action__pattern': '\M^    GLuint shader;$', 'action__path': 'modules/gl/include/shader.h', 'kind': 'jump_list', 'abbr': 'shader                     @modules..e/shader.h      GLuint shader;', 'action__tagname': 'shader'}, {'word': 'shaderDir', 'action__pattern': '\M^    std::string configFile, meshFile, outputDir, shaderDir, shaderList;$', 'action__path': 'apps/pose_renderer/include/pose_renderer_options.h', 'kind': 'jump_list', 'abbr': 'shaderDir                  @apps/po.._options.h      std::string configFile, meshFile, outputDir, shaderDir, shaderList;', 'action__tagname': 'shaderDir'}, {'word': 'shaderList', 'action__pattern': '\M^    std::string configFile, meshFile, outputDir, shaderDir, shaderList;$', 'action__path': 'apps/pose_renderer/include/pose_renderer_options.h', 'kind': 'jump_list', 'abbr': 'shaderList                 @apps/po.._options.h      std::string configFile, meshFile, outputDir, shaderDir, shaderList;', 'action__tagname': 'shaderList'}, {'word': 'shaderSource', 'action__pattern': '\M^    std::vector<std::string> shaderSource;$', 'action__path': 'modules/gl/include/shader.h', 'kind': 'jump_list', 'abbr': 'shaderSource               @modules..e/shader.h      std::vector<std::string> shaderSource;', 'action__tagname': 'shaderSource'}, {'word': 'shape', 'action__pattern': '\M^    const Shape& shape;$', 'action__path': 'modules/gl/include/instanced_shape_renderer.h', 'kind': 'jump_list', 'abbr': 'shape                      @modules..renderer.h      const Shape& shape;', 'action__tagname': 'shape'}, {'word': 'shape', 'action__pattern': '\M^    const Shape& shape;$', 'action__path': 'modules/gl/include/shape_renderer.h', 'kind': 'jump_list', 'abbr': 'shape                      @modules..renderer.h      const Shape& shape;', 'action__tagname': 'shape'}, {'word': 'showedge', 'action__pattern': '\M^namespace showedge$', 'action__path': 'ext/objective_functions/prog/showedge/main.cc', 'kind': 'jump_list', 'abbr': 'showedge                   @ext/obj..ge/main.cc  namespace showedge', 'action__tagname': 'showedge'}, {'word': 'showedge', 'action__pattern': '\M^namespace showedge$', 'action__path': 'ext/objective_functions/prog/showedge/showedge.hpp', 'kind': 'jump_list', 'abbr': 'showedge                   @ext/obj..owedge.hpp  namespace showedge', 'action__tagname': 'showedge'}, {'word': 'shuffle', 'action__pattern': '\M^  void ParticleSwarm::Particle::shuffle($', 'action__path': 'modules/optim/src/particle.cc', 'kind': 'jump_list', 'abbr': 'shuffle                    @modules..article.cc    void ParticleSwarm::Particle::shuffle(', 'action__tagname': 'shuffle'}, {'word': 'shuffle', 'action__pattern': '\M^  void ParticleSwarm::shuffle(const unsigned int numToShuffle,$', 'action__path': 'modules/optim/src/particle_swarm.cc', 'kind': 'jump_list', 'abbr': 'shuffle                    @modules..e_swarm.cc    void ParticleSwarm::shuffle(const unsigned int numToShuffle,', 'action__tagname': 'shuffle'}, {'word': 'shutdown', 'action__pattern': '\M^void shutdown(int code) {$', 'action__path': 'apps/bmvc_project/src/main.cc', 'kind': 'jump_list', 'abbr': 'shutdown                   @apps/bm..rc/main.cc  void shutdown(int code) {', 'action__tagname': 'shutdown'}, {'word': 'shutdown', 'action__pattern': '\M^void shutdown(int code) {$', 'action__path': 'apps/depth_shader_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'shutdown                   @apps/de..rc/main.cc  void shutdown(int code) {', 'action__tagname': 'shutdown'}, {'word': 'shutdown', 'action__pattern': '\M^void shutdown(int code) {$', 'action__path': 'apps/edge_shader_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'shutdown                   @apps/ed..rc/main.cc  void shutdown(int code) {', 'action__tagname': 'shutdown'}, {'word': 'shutdown', 'action__pattern': '\M^void shutdown(int code) {$', 'action__path': 'apps/gbuffer_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'shutdown                   @apps/gb..rc/main.cc  void shutdown(int code) {', 'action__tagname': 'shutdown'}, {'word': 'shutdown', 'action__pattern': '\M^void shutdown(int code) {$', 'action__path': 'apps/multicam_mesh_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'shutdown                   @apps/mu..rc/main.cc  void shutdown(int code) {', 'action__tagname': 'shutdown'}, {'word': 'shutdown', 'action__pattern': '\M^void shutdown(int code) {$', 'action__path': 'apps/particle_swarm_demo/src/main.cc', 'kind': 'jump_list', 'abbr': 'shutdown                   @apps/pa..rc/main.cc  void shutdown(int code) {', 'action__tagname': 'shutdown'}, {'word': 'shutdown', 'action__pattern': '\M^void shutdown(int code) {$', 'action__path': 'apps/pose_creator/src/main.cc', 'kind': 'jump_list', 'abbr': 'shutdown                   @apps/po..rc/main.cc  void shutdown(int code) {', 'action__tagname': 'shutdown'}, {'word': 'shutdown', 'action__pattern': '\M^void shutdown(int code)$', 'action__path': 'apps/pose_renderer/src/main.cc', 'kind': 'jump_list', 'abbr': 'shutdown                   @apps/po..rc/main.cc  void shutdown(int code)', 'action__tagname': 'shutdown'}, {'word': 'shutdown', 'action__pattern': '\M^void shutdown(int code) {$', 'action__path': 'apps/pose_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'shutdown                   @apps/po..rc/main.cc  void shutdown(int code) {', 'action__tagname': 'shutdown'}, {'word': 'shutdown', 'action__pattern': '\M^void shutdown(int code) {$', 'action__path': 'apps/skel_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'shutdown                   @apps/sk..rc/main.cc  void shutdown(int code) {', 'action__tagname': 'shutdown'}, {'word': 'shutdown', 'action__pattern': '\M^void shutdown(int code)$', 'action__path': 'apps/sph_renderer/src/main.cc', 'kind': 'jump_list', 'abbr': 'shutdown                   @apps/sp..rc/main.cc  void shutdown(int code)', 'action__tagname': 'shutdown'}, {'word': 'shutdown', 'action__pattern': '\M^void shutdown(int code)$', 'action__path': 'apps/sphere_model_optim/src/main.cc', 'kind': 'jump_list', 'abbr': 'shutdown                   @apps/sp..rc/main.cc  void shutdown(int code)', 'action__tagname': 'shutdown'}, {'word': 'shutdown', 'action__pattern': '\M^void shutdown(int code)$', 'action__path': 'apps/sphere_model_renderer/src/main.cc', 'kind': 'jump_list', 'abbr': 'shutdown                   @apps/sp..rc/main.cc  void shutdown(int code)', 'action__tagname': 'shutdown'}, {'word': 'sinovercos', 'action__pattern': '\M^double sinovercos(unsigned int x, unsigned int y) {$', 'action__path': 'apps/particle_swarm_demo/src/main.cc', 'kind': 'jump_list', 'abbr': 'sinovercos                 @apps/pa..rc/main.cc  double sinovercos(unsigned int x, unsigned int y) {', 'action__tagname': 'sinovercos'}, {'word': 'sinpluscos', 'action__pattern': '\M^double sinpluscos(unsigned int x, unsigned int y) {$', 'action__path': 'apps/particle_swarm_demo/src/main.cc', 'kind': 'jump_list', 'abbr': 'sinpluscos                 @apps/pa..rc/main.cc  double sinpluscos(unsigned int x, unsigned int y) {', 'action__tagname': 'sinpluscos'}, {'word': 'sixteenbit', 'action__pattern': '\M^  unsigned char sixteenbit; /*needs more than 8 bits per channel*/$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'sixteenbit                 @ext/lod..odepng.cpp    unsigned char sixteenbit; \/*needs more than 8 bits per channel*\/', 'action__tagname': 'sixteenbit'}, {'word': 'sixteenbit_done', 'action__pattern': '\M^  unsigned char sixteenbit_done;$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'sixteenbit_done            @ext/lod..odepng.cpp    unsigned char sixteenbit_done;', 'action__tagname': 'sixteenbit_done'}, {'word': 'size', 'action__pattern': '\M^  size_t size; /*size in number of unsigned longs*/$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'size                       @ext/lod..odepng.cpp    size_t size; \/*size in number of unsigned longs*\/', 'action__tagname': 'size'}, {'word': 'size', 'action__pattern': '\M^  size_t size; /*used size*/$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'size                       @ext/lod..odepng.cpp    size_t size; \/*used size*\/', 'action__tagname': 'size'}, {'word': 'size', 'action__pattern': '\M^const core::ImageSize& CalibratedCamera::size() {$', 'action__path': 'modules/core/src/camera_calibration.cc', 'kind': 'jump_list', 'abbr': 'size                       @modules..bration.cc  const core::ImageSize& CalibratedCamera::size() {', 'action__tagname': 'size'}, {'word': 'skeleton', 'action__pattern': '\M^    Skeleton skeleton;$', 'action__path': 'modules/core/include/sphere_model.h', 'kind': 'jump_list', 'abbr': 'skeleton                   @modules..re_model.h      Skeleton skeleton;', 'action__tagname': 'skeleton'}, {'word': 'skeleton', 'action__pattern': '\M^    core::Skeleton skeleton;$', 'action__path': 'modules/gl/include/mesh.h', 'kind': 'jump_list', 'abbr': 'skeleton                   @modules..ude/mesh.h      core::Skeleton skeleton;', 'action__tagname': 'skeleton'}, {'word': 'skinBuffer', 'action__pattern': '\M^    OffscreenBuffer depthBuffer, skinBuffer, edgeBuffer;$', 'action__path': 'apps/bmvc_project/src/main.cc', 'kind': 'jump_list', 'abbr': 'skinBuffer                 @apps/bm..rc/main.cc      OffscreenBuffer depthBuffer, skinBuffer, edgeBuffer;', 'action__tagname': 'skinBuffer'}, {'word': 'skinBuffer', 'action__pattern': '\M^    gl::OffscreenBuffer edgeBuffer, depthBuffer, skinBuffer;$', 'action__path': 'apps/pose_renderer/include/pose_renderer.h', 'kind': 'jump_list', 'abbr': 'skinBuffer                 @apps/po..renderer.h      gl::OffscreenBuffer edgeBuffer, depthBuffer, skinBuffer;', 'action__tagname': 'skinBuffer'}, {'word': 'skinFrag', 'action__pattern': '\M^                  depthFrag, depthVert, skinFrag, skinVert;$', 'action__path': 'apps/bmvc_project/include/bmvc_options.h', 'kind': 'jump_list', 'abbr': 'skinFrag                   @apps/bm.._options.h                    depthFrag, depthVert, skinFrag, skinVert;', 'action__tagname': 'skinFrag'}, {'word': 'skinShader', 'action__pattern': '\M^    ShaderProgram depthShader, edgeShader, edgeGeomShader, skinShader;$', 'action__path': 'apps/bmvc_project/src/main.cc', 'kind': 'jump_list', 'abbr': 'skinShader                 @apps/bm..rc/main.cc      ShaderProgram depthShader, edgeShader, edgeGeomShader, skinShader;', 'action__tagname': 'skinShader'}, {'word': 'skinShader', 'action__pattern': '\M^    gl::ShaderProgram edgeShader, edgeGeomShader, depthShader, skinShader, colourShader;$', 'action__path': 'apps/pose_renderer/include/pose_renderer.h', 'kind': 'jump_list', 'abbr': 'skinShader                 @apps/po..renderer.h      gl::ShaderProgram edgeShader, edgeGeomShader, depthShader, skinShader, colourShader;', 'action__tagname': 'skinShader'}, {'word': 'skinVert', 'action__pattern': '\M^                  depthFrag, depthVert, skinFrag, skinVert;$', 'action__path': 'apps/bmvc_project/include/bmvc_options.h', 'kind': 'jump_list', 'abbr': 'skinVert                   @apps/bm.._options.h                    depthFrag, depthVert, skinFrag, skinVert;', 'action__tagname': 'skinVert'}, {'word': 'sourceEdgeImage_', 'action__pattern': '\M^    cv::Mat sourceEdgeImage_;$', 'action__path': 'ext/objective_functions/xing/aig/edge_distance_map.hpp', 'kind': 'jump_list', 'abbr': 'sourceEdgeImage_           @ext/obj..ce_map.hpp      cv::Mat sourceEdgeImage_;', 'action__tagname': 'sourceEdgeImage_'}, {'word': 'specialSilhouette_', 'action__pattern': '\M^    cv::Mat specialSilhouette_;$', 'action__path': 'ext/objective_functions/xing/aig/camera_image.hpp', 'kind': 'jump_list', 'abbr': 'specialSilhouette_         @ext/obj.._image.hpp      cv::Mat specialSilhouette_;', 'action__tagname': 'specialSilhouette_'}, {'word': 'sphereWVPs', 'action__pattern': '\M^    std::vector<glm::mat4> sphereWVPs;$', 'action__path': 'modules/gl/include/quadric_hand.h', 'kind': 'jump_list', 'abbr': 'sphereWVPs                 @modules..ric_hand.h      std::vector<glm::mat4> sphereWVPs;', 'action__tagname': 'sphereWVPs'}, {'word': 'sphere_params', 'action__pattern': '\M^  unsigned int num_spheres, sphere_params;$', 'action__path': 'apps/sphere_model_optim/src/main.cc', 'kind': 'jump_list', 'abbr': 'sphere_params              @apps/sp..rc/main.cc    unsigned int num_spheres, sphere_params;', 'action__tagname': 'sphere_params'}, {'word': 'spheres', 'action__pattern': '\M^    const double* spheres;$', 'action__path': 'apps/sphere_model_optim/src/main.cc', 'kind': 'jump_list', 'abbr': 'spheres                    @apps/sp..rc/main.cc      const double* spheres;', 'action__tagname': 'spheres'}, {'word': 'spheres', 'action__pattern': '\M^    std::vector<geom::Sphere<double>> spheres;$', 'action__path': 'modules/core/include/sphere_model.h', 'kind': 'jump_list', 'abbr': 'spheres                    @modules..re_model.h      std::vector<geom::Sphere<double>> spheres;', 'action__tagname': 'spheres'}, {'word': 'split', 'action__pattern': '\M^std::vector<std::string> &split(const std::string &s, char delim, std::vector<std::string> &elems) {$', 'action__path': 'apps/abalone_forest/src/main.cc', 'kind': 'jump_list', 'abbr': 'split                      @apps/ab..rc/main.cc  std::vector<std::string> &split(const std::string &s, char delim, std::vector<std::string> &elems) {', 'action__tagname': 'split'}, {'word': 'split', 'action__pattern': '\M^std::vector<std::string> split(const std::string &s, char delim) {$', 'action__path': 'apps/abalone_forest/src/main.cc', 'kind': 'jump_list', 'abbr': 'split                      @apps/ab..rc/main.cc  std::vector<std::string> split(const std::string &s, char delim) {', 'action__tagname': 'split'}, {'word': 'split', 'action__pattern': '\M^std::vector<std::string> Utility::split(const std::string &s, char delim) {$', 'action__path': 'modules/core/src/utility.cc', 'kind': 'jump_list', 'abbr': 'split                      @modules..utility.cc  std::vector<std::string> Utility::split(const std::string &s, char delim) {', 'action__tagname': 'split'}, {'word': 'split', 'action__pattern': '\M^std::vector<std::string>& Utility::split(const std::string &s, char delim,$', 'action__path': 'modules/core/src/utility.cc', 'kind': 'jump_list', 'abbr': 'split                      @modules..utility.cc  std::vector<std::string>& Utility::split(const std::string &s, char delim,', 'action__tagname': 'split'}, {'word': 'split', 'action__pattern': '\M^  std::shared_ptr<SplitFunction> split;$', 'action__path': 'modules/ml/include/tree_node.h', 'kind': 'jump_list', 'abbr': 'split                      @modules..ree_node.h    std::shared_ptr<SplitFunction> split;', 'action__tagname': 'split'}, {'word': 'splitDepthData', 'action__pattern': '\M^splitDepthData(const std::vector<std::shared_ptr<TrainingData>>& data,$', 'action__path': 'modules/ml/include/depth_split_function.h', 'kind': 'jump_list', 'abbr': 'splitDepthData             @modules..function.h  splitDepthData(const std::vector<std::shared_ptr<TrainingData>>& data,', 'action__tagname': 'splitDepthData'}, {'word': 'splitFunctionType', 'action__pattern': '\M^    typedef ScalarSplitFunction<DataType> splitFunctionType;$', 'action__path': 'modules/ml/include/scalar_split_function_factory.h', 'kind': 'jump_list', 'abbr': 'splitFunctionType          @modules.._factory.h      typedef ScalarSplitFunction<DataType> splitFunctionType;', 'action__tagname': 'splitFunctionType'}, {'word': 'splitScalarData', 'action__pattern': '\M^splitScalarData(const std::vector<std::shared_ptr<TrainingData>>& data,$', 'action__path': 'modules/ml/include/scalar_split_function.h', 'kind': 'jump_list', 'abbr': 'splitScalarData            @modules..function.h  splitScalarData(const std::vector<std::shared_ptr<TrainingData>>& data,', 'action__tagname': 'splitScalarData'}, {'word': 'splitType', 'action__pattern': '\M^    typedef DepthSplitFunction splitType;$', 'action__path': 'modules/ml/include/depth_split_function_factory.h', 'kind': 'jump_list', 'abbr': 'splitType                  @modules.._factory.h      typedef DepthSplitFunction splitType;', 'action__tagname': 'splitType'}, {'word': 'string_cleanup', 'action__pattern': '\M^static void string_cleanup(char** out)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'string_cleanup             @ext/lod..odepng.cpp  static void string_cleanup(char** out)', 'action__tagname': 'string_cleanup'}, {'word': 'string_init', 'action__pattern': '\M^static void string_init(char** out)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'string_init                @ext/lod..odepng.cpp  static void string_init(char** out)', 'action__tagname': 'string_init'}, {'word': 'string_resize', 'action__pattern': '\M^static unsigned string_resize(char** out, size_t size)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'string_resize              @ext/lod..odepng.cpp  static unsigned string_resize(char** out, size_t size)', 'action__tagname': 'string_resize'}, {'word': 'string_set', 'action__pattern': '\M^static void string_set(char** out, const char* in)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'string_set                 @ext/lod..odepng.cpp  static void string_set(char** out, const char* in)', 'action__tagname': 'string_set'}, {'word': 'stripPath', 'action__pattern': '\M^std::string stripPath(const std::string& filename)$', 'action__path': 'ext/objective_functions/prog/depthseg/main.cc', 'kind': 'jump_list', 'abbr': 'stripPath                  @ext/obj..eg/main.cc  std::string stripPath(const std::string& filename)', 'action__tagname': 'stripPath'}, {'word': 'stripPath', 'action__pattern': '\M^std::string stripPath(const std::string& filename)$', 'action__path': 'ext/objective_functions/prog/erolation/main.cc', 'kind': 'jump_list', 'abbr': 'stripPath                  @ext/obj..on/main.cc  std::string stripPath(const std::string& filename)', 'action__tagname': 'stripPath'}, {'word': 'stripPath', 'action__pattern': '\M^std::string stripPath(const std::string& filename)$', 'action__path': 'ext/objective_functions/prog/segimage/main.cc', 'kind': 'jump_list', 'abbr': 'stripPath                  @ext/obj..ge/main.cc  std::string stripPath(const std::string& filename)', 'action__tagname': 'stripPath'}, {'word': 'surface', 'action__pattern': '\M^    Surface surface;$', 'action__path': 'apps/depth_shader_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'surface                    @apps/de..rc/main.cc      Surface surface;', 'action__tagname': 'surface'}, {'word': 'surfaceRenderer', 'action__pattern': '\M^    ShapeRenderer<Surface> surfaceRenderer;$', 'action__path': 'apps/depth_shader_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'surfaceRenderer            @apps/de..rc/main.cc      ShapeRenderer<Surface> surfaceRenderer;', 'action__tagname': 'surfaceRenderer'}, {'word': 'swarm', 'action__pattern': '\M^    std::unique_ptr<ParticleSwarm> swarm;$', 'action__path': 'apps/bmvc_project/src/main.cc', 'kind': 'jump_list', 'abbr': 'swarm                      @apps/bm..rc/main.cc      std::unique_ptr<ParticleSwarm> swarm;', 'action__tagname': 'swarm'}, {'word': 'swarm', 'action__pattern': '\M^      ParticleSwarm swarm;$', 'action__path': 'apps/particle_swarm_demo/src/main.cc', 'kind': 'jump_list', 'abbr': 'swarm                      @apps/pa..rc/main.cc        ParticleSwarm swarm;', 'action__tagname': 'swarm'}, {'word': 'swarm', 'action__pattern': '\M^        ParticleSwarm* swarm;$', 'action__path': 'modules/optim/include/particle_swarm.h', 'kind': 'jump_list', 'abbr': 'swarm                      @modules..le_swarm.h          ParticleSwarm* swarm;', 'action__tagname': 'swarm'}, {'word': 'symbols', 'action__pattern': '\M^  uivector symbols;$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'symbols                    @ext/lod..odepng.cpp    uivector symbols;', 'action__tagname': 'symbols'}, {'word': 't', 'action__pattern': '\M^    double t;$', 'action__path': 'modules/ml/include/depth_split_function.h', 'kind': 'jump_list', 'abbr': 't                          @modules..function.h      double t;', 'action__tagname': 't'}, {'word': 't', 'action__pattern': '\M^    double t;$', 'action__path': 'modules/ml/include/scalar_split_function.h', 'kind': 'jump_list', 'abbr': 't                          @modules..function.h      double t;', 'action__tagname': 't'}, {'word': 't1', 'action__pattern': '\M^double t1 = 32, t2 = t1 * 3; // thresholding values to extract edge$', 'action__path': 'ext/objective_functions/prog/segimage/main.cc', 'kind': 'jump_list', 'abbr': 't1                         @ext/obj..ge/main.cc  double t1 = 32, t2 = t1 * 3; \/\/ thresholding values to extract edge', 'action__tagname': 't1'}, {'word': 't2', 'action__pattern': '\M^double t1 = 32, t2 = t1 * 3; // thresholding values to extract edge$', 'action__path': 'ext/objective_functions/prog/segimage/main.cc', 'kind': 'jump_list', 'abbr': 't2                         @ext/obj..ge/main.cc  double t1 = 32, t2 = t1 * 3; \/\/ thresholding values to extract edge', 'action__tagname': 't2'}, {'word': 'tBuffer', 'action__pattern': '\M^    static const unsigned int tBuffer= 1;$', 'action__path': 'modules/gl/include/background_drawer.h', 'kind': 'jump_list', 'abbr': 'tBuffer                    @modules..d_drawer.h      static const unsigned int tBuffer= 1;', 'action__tagname': 'tBuffer'}, {'word': 'tDepth', 'action__pattern': '\M^      float tMin, tMax, tDepth;$', 'action__path': 'modules/img/include/hysteresis_thresholder.h', 'kind': 'jump_list', 'abbr': 'tDepth                     @modules..esholder.h        float tMin, tMax, tDepth;', 'action__tagname': 'tDepth'}, {'word': 'tLocation', 'action__pattern': '\M^    static const unsigned int tLocation = 1;$', 'action__path': 'modules/gl/include/background_drawer.h', 'kind': 'jump_list', 'abbr': 'tLocation                  @modules..d_drawer.h      static const unsigned int tLocation = 1;', 'action__tagname': 'tLocation'}, {'word': 'tMax', 'action__pattern': '\M^      float tMin, tMax, tDepth;$', 'action__path': 'modules/img/include/hysteresis_thresholder.h', 'kind': 'jump_list', 'abbr': 'tMax                       @modules..esholder.h        float tMin, tMax, tDepth;', 'action__tagname': 'tMax'}, {'word': 'tMin', 'action__pattern': '\M^      float tMin, tMax, tDepth;$', 'action__path': 'modules/img/include/hysteresis_thresholder.h', 'kind': 'jump_list', 'abbr': 'tMin                       @modules..esholder.h        float tMin, tMax, tDepth;', 'action__tagname': 'tMin'}, {'word': 'tangEnergy', 'action__pattern': '\M^double tangEnergy(const std::vector<std::shared_ptr<TrainingData>>& data,$', 'action__path': 'modules/ml/include/tang_energy_function.h', 'kind': 'jump_list', 'abbr': 'tangEnergy                 @modules..function.h  double tangEnergy(const std::vector<std::shared_ptr<TrainingData>>& data,', 'action__tagname': 'tangEnergy'}, {'word': 'target', 'action__pattern': '\M^glm::vec3 position, target;$', 'action__path': 'apps/pose_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'target                     @apps/po..rc/main.cc  glm::vec3 position, target;', 'action__tagname': 'target'}, {'word': 'target', 'action__pattern': '\M^      glm::vec3 target;$', 'action__path': 'modules/gl/include/pipeline.h', 'kind': 'jump_list', 'abbr': 'target                     @modules..pipeline.h        glm::vec3 target;', 'action__tagname': 'target'}, {'word': 'testDecisionTree', 'action__pattern': '\M^core::Pose<glm::vec3> testDecisionTree(const std::shared_ptr<Node>& tree, const Data& d) {$', 'action__path': 'modules/ml/include/latent_regression_tree.h', 'kind': 'jump_list', 'abbr': 'testDecisionTree           @modules..ion_tree.h  core::Pose<glm::vec3> testDecisionTree(const std::shared_ptr<Node>& tree, const Data& d) {', 'action__tagname': 'testDecisionTree'}, {'word': 'testOOB', 'action__pattern': '\M^bool testOOB(const cv::Mat& i, const cv::Point& p) {$', 'action__path': 'modules/ml/src/depth_split_function.cc', 'kind': 'jump_list', 'abbr': 'testOOB                    @modules..unction.cc  bool testOOB(const cv::Mat& i, const cv::Point& p) {', 'action__tagname': 'testOOB'}, {'word': 'texcoordBuffer', 'action__pattern': '\M^    const unsigned int texcoordBuffer = 3;$', 'action__path': 'modules/gl/include/instanced_mesh_renderer.h', 'kind': 'jump_list', 'abbr': 'texcoordBuffer             @modules..renderer.h      const unsigned int texcoordBuffer = 3;', 'action__tagname': 'texcoordBuffer'}, {'word': 'texcoordBuffer', 'action__pattern': '\M^    const unsigned int texcoordBuffer = 3;$', 'action__path': 'modules/gl/include/instanced_shape_renderer.h', 'kind': 'jump_list', 'abbr': 'texcoordBuffer             @modules..renderer.h      const unsigned int texcoordBuffer = 3;', 'action__tagname': 'texcoordBuffer'}, {'word': 'texcoordBuffer', 'action__pattern': '\M^    const unsigned int texcoordBuffer = 3;$', 'action__path': 'modules/gl/include/mesh_renderer.h', 'kind': 'jump_list', 'abbr': 'texcoordBuffer             @modules..renderer.h      const unsigned int texcoordBuffer = 3;', 'action__tagname': 'texcoordBuffer'}, {'word': 'texcoordBuffer', 'action__pattern': '\M^    const unsigned int texcoordBuffer = 3;$', 'action__path': 'modules/gl/include/shape_renderer.h', 'kind': 'jump_list', 'abbr': 'texcoordBuffer             @modules..renderer.h      const unsigned int texcoordBuffer = 3;', 'action__tagname': 'texcoordBuffer'}, {'word': 'texcoordLocation', 'action__pattern': '\M^    const unsigned int texcoordLocation = 2;$', 'action__path': 'modules/gl/include/instanced_mesh_renderer.h', 'kind': 'jump_list', 'abbr': 'texcoordLocation           @modules..renderer.h      const unsigned int texcoordLocation = 2;', 'action__tagname': 'texcoordLocation'}, {'word': 'texcoordLocation', 'action__pattern': '\M^    const unsigned int texcoordLocation = 2;$', 'action__path': 'modules/gl/include/instanced_shape_renderer.h', 'kind': 'jump_list', 'abbr': 'texcoordLocation           @modules..renderer.h      const unsigned int texcoordLocation = 2;', 'action__tagname': 'texcoordLocation'}, {'word': 'texcoordLocation', 'action__pattern': '\M^    const unsigned int texcoordLocation = 2;$', 'action__path': 'modules/gl/include/mesh_renderer.h', 'kind': 'jump_list', 'abbr': 'texcoordLocation           @modules..renderer.h      const unsigned int texcoordLocation = 2;', 'action__tagname': 'texcoordLocation'}, {'word': 'texcoordLocation', 'action__pattern': '\M^    const unsigned int texcoordLocation = 2;$', 'action__path': 'modules/gl/include/shape_renderer.h', 'kind': 'jump_list', 'abbr': 'texcoordLocation           @modules..renderer.h      const unsigned int texcoordLocation = 2;', 'action__tagname': 'texcoordLocation'}, {'word': 'texcoords', 'action__pattern': '\M^      positions = 0, normals, texcoords, colours, depth$', 'action__path': 'modules/gl/include/gbuffer.h', 'kind': 'jump_list', 'abbr': 'texcoords                  @modules../gbuffer.h        positions = 0, normals, texcoords, colours, depth', 'action__tagname': 'texcoords'}, {'word': 'texcoords', 'action__pattern': '\M^    std::vector<glm::vec2> texcoords;$', 'action__path': 'modules/gl/include/gl_sphere.h', 'kind': 'jump_list', 'abbr': 'texcoords                  @modules..l_sphere.h      std::vector<glm::vec2> texcoords;', 'action__tagname': 'texcoords'}, {'word': 'texcoords', 'action__pattern': '\M^    std::vector<glm::vec2> texcoords;$', 'action__path': 'modules/gl/include/mesh.h', 'kind': 'jump_list', 'abbr': 'texcoords                  @modules..ude/mesh.h      std::vector<glm::vec2> texcoords;', 'action__tagname': 'texcoords'}, {'word': 'texcoords', 'action__pattern': '\M^    std::vector<glm::vec2> texcoords;$', 'action__path': 'modules/gl/include/prism.h', 'kind': 'jump_list', 'abbr': 'texcoords                  @modules..de/prism.h      std::vector<glm::vec2> texcoords;', 'action__tagname': 'texcoords'}, {'word': 'texcoords', 'action__pattern': '\M^    std::vector<glm::vec2> texcoords;$', 'action__path': 'modules/gl/include/surface.h', 'kind': 'jump_list', 'abbr': 'texcoords                  @modules../surface.h      std::vector<glm::vec2> texcoords;', 'action__tagname': 'texcoords'}, {'word': 'text_compression', 'action__pattern': '\M^  unsigned text_compression;$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'text_compression           @ext/lod../lodepng.h    unsigned text_compression;', 'action__tagname': 'text_compression'}, {'word': 'text_keys', 'action__pattern': '\M^  char** text_keys; /*the keyword of a text chunk (e.g. "Comment")*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'text_keys                  @ext/lod../lodepng.h    char** text_keys; \/*the keyword of a text chunk (e.g. "Comment")*\/', 'action__tagname': 'text_keys'}, {'word': 'text_num', 'action__pattern': '\M^  size_t text_num; /*the amount of texts in these char** buffers (there may be more texts in itext)*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'text_num                   @ext/lod../lodepng.h    size_t text_num; \/*the amount of texts in these char** buffers (there may be more texts in itext)*\/', 'action__tagname': 'text_num'}, {'word': 'text_strings', 'action__pattern': '\M^  char** text_strings; /*the actual text*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'text_strings               @ext/lod../lodepng.h    char** text_strings; \/*the actual text*\/', 'action__tagname': 'text_strings'}, {'word': 'texture', 'action__pattern': '\M^    Texture texture;$', 'action__path': 'modules/gl/include/background_drawer.h', 'kind': 'jump_list', 'abbr': 'texture                    @modules..d_drawer.h      Texture texture;', 'action__tagname': 'texture'}, {'word': 'textureFrag', 'action__pattern': '\M^    const static std::string depthFrag, textureFrag, colourFrag, normalFrag,$', 'action__path': 'modules/gl/include/pose_shader.h', 'kind': 'jump_list', 'abbr': 'textureFrag                @modules..e_shader.h      const static std::string depthFrag, textureFrag, colourFrag, normalFrag,', 'action__tagname': 'textureFrag'}, {'word': 'textureFrag', 'action__pattern': '\M^const std::string PoseShader::textureFrag = "                   \\n\\$', 'action__path': 'modules/gl/src/pose_shader.cc', 'kind': 'jump_list', 'abbr': 'textureFrag                @modules.._shader.cc  const std::string PoseShader::textureFrag = "                   \\n\\', 'action__tagname': 'textureFrag'}, {'word': 'textureObject', 'action__pattern': '\M^    GLuint textureObject;$', 'action__path': 'modules/gl/include/texture.h', 'kind': 'jump_list', 'abbr': 'textureObject              @modules../texture.h      GLuint textureObject;', 'action__tagname': 'textureObject'}, {'word': 'textured', 'action__pattern': '\M^    enum class Type { depth, textured, colours, normal };$', 'action__path': 'modules/gl/include/pose_shader.h', 'kind': 'jump_list', 'abbr': 'textured                   @modules..e_shader.h      enum class Type { depth, textured, colours, normal };', 'action__tagname': 'textured'}, {'word': 'textures', 'action__pattern': '\M^    std::vector<Texture> textures;$', 'action__path': 'modules/gl/include/gbuffer.h', 'kind': 'jump_list', 'abbr': 'textures                   @modules../gbuffer.h      std::vector<Texture> textures;', 'action__tagname': 'textures'}, {'word': 'textures', 'action__pattern': '\M^    std::vector<std::shared_ptr<Texture>> textures;$', 'action__path': 'modules/gl/include/mesh.h', 'kind': 'jump_list', 'abbr': 'textures                   @modules..ude/mesh.h      std::vector<std::shared_ptr<Texture>> textures;', 'action__tagname': 'textures'}, {'word': 'textures', 'action__pattern': '\M^    std::vector<Texture> textures;$', 'action__path': 'modules/gl/include/offscreen_buffer.h', 'kind': 'jump_list', 'abbr': 'textures                   @modules..n_buffer.h      std::vector<Texture> textures;', 'action__tagname': 'textures'}, {'word': 'th', 'action__pattern': '\M^float th = 0.6;$', 'action__path': 'ext/objective_functions/prog/colour-detect/main.cc', 'kind': 'jump_list', 'abbr': 'th                         @ext/obj..ct/main.cc  float th = 0.6;', 'action__tagname': 'th'}, {'word': 'th1', 'action__pattern': '\M^double th1 = 0, th2 = 0;$', 'action__path': 'ext/objective_functions/prog/showedge/main.cc', 'kind': 'jump_list', 'abbr': 'th1                        @ext/obj..ge/main.cc  double th1 = 0, th2 = 0;', 'action__tagname': 'th1'}, {'word': 'th2', 'action__pattern': '\M^double th1 = 0, th2 = 0;$', 'action__path': 'ext/objective_functions/prog/showedge/main.cc', 'kind': 'jump_list', 'abbr': 'th2                        @ext/obj..ge/main.cc  double th1 = 0, th2 = 0;', 'action__tagname': 'th2'}, {'word': 'thChanged', 'action__pattern': '\M^void thChanged(int pos, void* hint)$', 'action__path': 'ext/objective_functions/prog/showedge/main.cc', 'kind': 'jump_list', 'abbr': 'thChanged                  @ext/obj..ge/main.cc  void thChanged(int pos, void* hint)', 'action__tagname': 'thChanged'}, {'word': 'thresDis', 'action__pattern': '\M^    std::uniform_int_distribution<> xDis, yDis, thresDis;$', 'action__path': 'modules/ml/include/depth_split_function_factory.h', 'kind': 'jump_list', 'abbr': 'thresDis                   @modules.._factory.h      std::uniform_int_distribution<> xDis, yDis, thresDis;', 'action__tagname': 'thresDis'}, {'word': 'thresholdDepthImage', 'action__pattern': '\M^void thresholdDepthImage(cv::Mat& img)$', 'action__path': 'ext/objective_functions/prog/depthseg/main.cc', 'kind': 'jump_list', 'abbr': 'thresholdDepthImage        @ext/obj..eg/main.cc  void thresholdDepthImage(cv::Mat& img)', 'action__tagname': 'thresholdDepthImage'}, {'word': 'thresholdImage', 'action__pattern': '\M^  cv::Mat HysteresisThresholder::thresholdImage(const cv::Mat& i,$', 'action__path': 'modules/img/src/hysteresis_thresholder.cc', 'kind': 'jump_list', 'abbr': 'thresholdImage             @modules..sholder.cc    cv::Mat HysteresisThresholder::thresholdImage(const cv::Mat& i,', 'action__tagname': 'thresholdImage'}, {'word': 'time', 'action__pattern': '\M^  LodePNGTime time;$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'time                       @ext/lod../lodepng.h    LodePNGTime time;', 'action__tagname': 'time'}, {'word': 'time_defined', 'action__pattern': '\M^  unsigned time_defined; /*set to 1 to make the encoder generate a tIME chunk*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'time_defined               @ext/lod../lodepng.h    unsigned time_defined; \/*set to 1 to make the encoder generate a tIME chunk*\/', 'action__tagname': 'time_defined'}, {'word': 'toEdgeMap', 'action__pattern': '\M^cv::Mat toEdgeMap(int row, int col, bool hint[])$', 'action__path': 'ext/objective_functions/test/aig/test_edge_distance_map.cc', 'kind': 'jump_list', 'abbr': 'toEdgeMap                  @ext/obj..nce_map.cc  cv::Mat toEdgeMap(int row, int col, bool hint[])', 'action__tagname': 'toEdgeMap'}, {'word': 'toIndex', 'action__pattern': '\M^std::size_t ColourDetector::toIndex(std::uint8_t r,$', 'action__path': 'ext/objective_functions/xing/aig/colour_detector.cc', 'kind': 'jump_list', 'abbr': 'toIndex                    @ext/obj..etector.cc  std::size_t ColourDetector::toIndex(std::uint8_t r,', 'action__tagname': 'toIndex'}, {'word': 'toRad', 'action__pattern': '\M^double toRad(double x) {$', 'action__path': 'apps/particle_swarm_demo/src/main.cc', 'kind': 'jump_list', 'abbr': 'toRad                      @apps/pa..rc/main.cc  double toRad(double x) {', 'action__tagname': 'toRad'}, {'word': 'total', 'action__pattern': '\M^        std::size_t total;$', 'action__path': 'ext/objective_functions/xing/aig/colour_detector.hpp', 'kind': 'jump_list', 'abbr': 'total                      @ext/obj..tector.hpp          std::size_t total;', 'action__tagname': 'total'}, {'word': 'total', 'action__pattern': '\M^    unsigned long int total;$', 'action__path': 'modules/core/include/histogram2d.h', 'kind': 'jump_list', 'abbr': 'total                      @modules..togram2d.h      unsigned long int total;', 'action__tagname': 'total'}, {'word': 'train', 'action__pattern': '\M^void train()$', 'action__path': 'ext/objective_functions/prog/colour-detect/main.cc', 'kind': 'jump_list', 'abbr': 'train                      @ext/obj..ct/main.cc  void train()', 'action__tagname': 'train'}, {'word': 'trainColour', 'action__pattern': '\M^void ColourDetector::trainColour(std::uint8_t r,$', 'action__path': 'ext/objective_functions/xing/aig/colour_detector.cc', 'kind': 'jump_list', 'abbr': 'trainColour                @ext/obj..etector.cc  void ColourDetector::trainColour(std::uint8_t r,', 'action__tagname': 'trainColour'}, {'word': 'transform', 'action__pattern': '\M^    glm::mat4 transform;$', 'action__path': 'modules/core/include/bone.h', 'kind': 'jump_list', 'abbr': 'transform                  @modules..ude/bone.h      glm::mat4 transform;', 'action__tagname': 'transform'}, {'word': 'tree', 'action__pattern': '\M^  ColorTree tree; /*for listing the counted colors, up to 256*/$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'tree                       @ext/lod..odepng.cpp    ColorTree tree; \/*for listing the counted colors, up to 256*\/', 'action__tagname': 'tree'}, {'word': 'tree1d', 'action__pattern': '\M^  unsigned* tree1d;$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'tree1d                     @ext/lod..odepng.cpp    unsigned* tree1d;', 'action__tagname': 'tree1d'}, {'word': 'tree2d', 'action__pattern': '\M^  unsigned* tree2d;$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'tree2d                     @ext/lod..odepng.cpp    unsigned* tree2d;', 'action__tagname': 'tree2d'}, {'word': 'type', 'action__pattern': '\M^ImageSource CameraImage::type() const$', 'action__path': 'ext/objective_functions/xing/aig/camera_image.hpp', 'kind': 'jump_list', 'abbr': 'type                       @ext/obj.._image.hpp  ImageSource CameraImage::type() const', 'action__tagname': 'type'}, {'word': 'type', 'action__pattern': '\M^    core::ImageType type;$', 'action__path': 'modules/gl/include/offscreen_buffer.h', 'kind': 'jump_list', 'abbr': 'type                       @modules..n_buffer.h      core::ImageType type;', 'action__tagname': 'type'}, {'word': 'type_', 'action__pattern': '\M^    ImageSource type_;$', 'action__path': 'ext/objective_functions/xing/aig/camera_image.hpp', 'kind': 'jump_list', 'abbr': 'type_                      @ext/obj.._image.hpp      ImageSource type_;', 'action__tagname': 'type_'}, {'word': 'u', 'action__pattern': '\M^    glm::vec2 u, v;$', 'action__path': 'modules/ml/include/depth_split_function.h', 'kind': 'jump_list', 'abbr': 'u                          @modules..function.h      glm::vec2 u, v;', 'action__tagname': 'u'}, {'word': 'uabs', 'action__pattern': '\M^inline unsigned int uabs(unsigned int a, unsigned int b) {$', 'action__path': 'modules/core/include/mymath.h', 'kind': 'jump_list', 'abbr': 'uabs                       @modules..e/mymath.h  inline unsigned int uabs(unsigned int a, unsigned int b) {', 'action__tagname': 'uabs'}, {'word': 'ucvector', 'action__pattern': '\M^typedef struct ucvector$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'ucvector                   @ext/lod..odepng.cpp  typedef struct ucvector', 'action__tagname': 'ucvector'}, {'word': 'ucvector', 'action__pattern': '\M^} ucvector;$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'ucvector                   @ext/lod..odepng.cpp  } ucvector;', 'action__tagname': 'ucvector'}, {'word': 'ucvector_cleanup', 'action__pattern': '\M^static void ucvector_cleanup(void* p)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'ucvector_cleanup           @ext/lod..odepng.cpp  static void ucvector_cleanup(void* p)', 'action__tagname': 'ucvector_cleanup'}, {'word': 'ucvector_init', 'action__pattern': '\M^static void ucvector_init(ucvector* p)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'ucvector_init              @ext/lod..odepng.cpp  static void ucvector_init(ucvector* p)', 'action__tagname': 'ucvector_init'}, {'word': 'ucvector_init_buffer', 'action__pattern': '\M^static void ucvector_init_buffer(ucvector* p, unsigned char* buffer, size_t size)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'ucvector_init_buffer       @ext/lod..odepng.cpp  static void ucvector_init_buffer(ucvector* p, unsigned char* buffer, size_t size)', 'action__tagname': 'ucvector_init_buffer'}, {'word': 'ucvector_push_back', 'action__pattern': '\M^static unsigned ucvector_push_back(ucvector* p, unsigned char c)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'ucvector_push_back         @ext/lod..odepng.cpp  static unsigned ucvector_push_back(ucvector* p, unsigned char c)', 'action__tagname': 'ucvector_push_back'}, {'word': 'ucvector_resize', 'action__pattern': '\M^static unsigned ucvector_resize(ucvector* p, size_t size)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'ucvector_resize            @ext/lod..odepng.cpp  static unsigned ucvector_resize(ucvector* p, size_t size)', 'action__tagname': 'ucvector_resize'}, {'word': 'ucvector_resizev', 'action__pattern': '\M^static unsigned ucvector_resizev(ucvector* p, size_t size, unsigned char value)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'ucvector_resizev           @ext/lod..odepng.cpp  static unsigned ucvector_resizev(ucvector* p, size_t size, unsigned char value)', 'action__tagname': 'ucvector_resizev'}, {'word': 'uivector', 'action__pattern': '\M^typedef struct uivector$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'uivector                   @ext/lod..odepng.cpp  typedef struct uivector', 'action__tagname': 'uivector'}, {'word': 'uivector', 'action__pattern': '\M^} uivector;$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'uivector                   @ext/lod..odepng.cpp  } uivector;', 'action__tagname': 'uivector'}, {'word': 'uivector_cleanup', 'action__pattern': '\M^static void uivector_cleanup(void* p)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'uivector_cleanup           @ext/lod..odepng.cpp  static void uivector_cleanup(void* p)', 'action__tagname': 'uivector_cleanup'}, {'word': 'uivector_copy', 'action__pattern': '\M^static unsigned uivector_copy(uivector* p, const uivector* q)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'uivector_copy              @ext/lod..odepng.cpp  static unsigned uivector_copy(uivector* p, const uivector* q)', 'action__tagname': 'uivector_copy'}, {'word': 'uivector_init', 'action__pattern': '\M^static void uivector_init(uivector* p)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'uivector_init              @ext/lod..odepng.cpp  static void uivector_init(uivector* p)', 'action__tagname': 'uivector_init'}, {'word': 'uivector_push_back', 'action__pattern': '\M^static unsigned uivector_push_back(uivector* p, unsigned c)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'uivector_push_back         @ext/lod..odepng.cpp  static unsigned uivector_push_back(uivector* p, unsigned c)', 'action__tagname': 'uivector_push_back'}, {'word': 'uivector_resize', 'action__pattern': '\M^static unsigned uivector_resize(uivector* p, size_t size)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'uivector_resize            @ext/lod..odepng.cpp  static unsigned uivector_resize(uivector* p, size_t size)', 'action__tagname': 'uivector_resize'}, {'word': 'uivector_resizev', 'action__pattern': '\M^static unsigned uivector_resizev(uivector* p, size_t size, unsigned value)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'uivector_resizev           @ext/lod..odepng.cpp  static unsigned uivector_resizev(uivector* p, size_t size, unsigned value)', 'action__tagname': 'uivector_resizev'}, {'word': 'unBind', 'action__pattern': '\M^void GBuffer::unBind() {$', 'action__path': 'modules/gl/src/gbuffer.cc', 'kind': 'jump_list', 'abbr': 'unBind                     @modules..gbuffer.cc  void GBuffer::unBind() {', 'action__tagname': 'unBind'}, {'word': 'unUse', 'action__pattern': '\M^    void unUse() { shader->unUse(); }$', 'action__path': 'modules/gl/include/background_shader.h', 'kind': 'jump_list', 'abbr': 'unUse                      @modules..d_shader.h      void unUse() { shader->unUse(); }', 'action__tagname': 'unUse'}, {'word': 'unUse', 'action__pattern': '\M^    void unUse() { shader->unUse(); }$', 'action__path': 'modules/gl/include/pose_shader.h', 'kind': 'jump_list', 'abbr': 'unUse                      @modules..e_shader.h      void unUse() { shader->unUse(); }', 'action__tagname': 'unUse'}, {'word': 'unUse', 'action__pattern': '\M^void ShaderProgram::unUse() {$', 'action__path': 'modules/gl/src/shader_program.cc', 'kind': 'jump_list', 'abbr': 'unUse                      @modules..program.cc  void ShaderProgram::unUse() {', 'action__tagname': 'unUse'}, {'word': 'unbind', 'action__pattern': '\M^void OffscreenBuffer::unbind() {$', 'action__path': 'modules/gl/src/offscreen_buffer.cc', 'kind': 'jump_list', 'abbr': 'unbind                     @modules.._buffer.cc  void OffscreenBuffer::unbind() {', 'action__tagname': 'unbind'}, {'word': 'unbind', 'action__pattern': '\M^void Texture::unbind(GLenum textureUnit) const {$', 'action__path': 'modules/gl/src/texture.cc', 'kind': 'jump_list', 'abbr': 'unbind                     @modules..texture.cc  void Texture::unbind(GLenum textureUnit) const {', 'action__tagname': 'unbind'}, {'word': 'unfilter', 'action__pattern': '\M^static unsigned unfilter(unsigned char* out, const unsigned char* in, unsigned w, unsigned h, unsigned bpp)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'unfilter                   @ext/lod..odepng.cpp  static unsigned unfilter(unsigned char* out, const unsigned char* in, unsigned w, unsigned h, unsigned bpp)', 'action__tagname': 'unfilter'}, {'word': 'unfilterScanline', 'action__pattern': '\M^static unsigned unfilterScanline(unsigned char* recon, const unsigned char* scanline, const unsigned char* precon,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'unfilterScanline           @ext/lod..odepng.cpp  static unsigned unfilterScanline(unsigned char* recon, const unsigned char* scanline, const unsigned char* precon,', 'action__tagname': 'unfilterScanline'}, {'word': 'unhelpful', 'action__pattern': '\M^    std::vector<TrainingData<int>> homo, perfect, unhelpful, moreHelpful;$', 'action__path': 'modules/ml/test/discrete_information_gain_test.cc', 'kind': 'jump_list', 'abbr': 'unhelpful                  @modules..in_test.cc      std::vector<TrainingData<int>> homo, perfect, unhelpful, moreHelpful;', 'action__tagname': 'unhelpful'}, {'word': 'uniforms', 'action__pattern': '\M^    std::unordered_map<std::string, GLuint> uniforms;$', 'action__path': 'modules/gl/include/shader_program.h', 'kind': 'jump_list', 'abbr': 'uniforms                   @modules.._program.h      std::unordered_map<std::string, GLuint> uniforms;', 'action__tagname': 'uniforms'}, {'word': 'unknown_chunks_data', 'action__pattern': '\M^  unsigned char* unknown_chunks_data[3];$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'unknown_chunks_data        @ext/lod../lodepng.h    unsigned char* unknown_chunks_data[3];', 'action__tagname': 'unknown_chunks_data'}, {'word': 'unknown_chunks_size', 'action__pattern': '\M^  size_t unknown_chunks_size[3]; /*size in bytes of the unknown chunks, given for protection*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'unknown_chunks_size        @ext/lod../lodepng.h    size_t unknown_chunks_size[3]; \/*size in bytes of the unknown chunks, given for protection*\/', 'action__tagname': 'unknown_chunks_size'}, {'word': 'up', 'action__pattern': '\M^    glm::vec3 eye, pos, up;$', 'action__path': 'modules/gl/include/camera.h', 'kind': 'jump_list', 'abbr': 'up                         @modules..e/camera.h      glm::vec3 eye, pos, up;', 'action__tagname': 'up'}, {'word': 'up', 'action__pattern': '\M^      glm::vec3 up;$', 'action__path': 'modules/gl/include/pipeline.h', 'kind': 'jump_list', 'abbr': 'up                         @modules..pipeline.h        glm::vec3 up;', 'action__tagname': 'up'}, {'word': 'update', 'action__pattern': '\M^void HandPose27DOF::update(const std::vector<double>& v) {$', 'action__path': 'modules/core/src/hand_pose_27_dof.cc', 'kind': 'jump_list', 'abbr': 'update                     @modules.._27_dof.cc  void HandPose27DOF::update(const std::vector<double>& v) {', 'action__tagname': 'update'}, {'word': 'update', 'action__pattern': '\M^void HandPose34DOF::update(const std::vector<double>& v) {$', 'action__path': 'modules/core/src/hand_pose_34_dof.cc', 'kind': 'jump_list', 'abbr': 'update                     @modules.._34_dof.cc  void HandPose34DOF::update(const std::vector<double>& v) {', 'action__tagname': 'update'}, {'word': 'update', 'action__pattern': '\M^  void ParticleSwarm::Particle::update($', 'action__path': 'modules/optim/src/particle.cc', 'kind': 'jump_list', 'abbr': 'update                     @modules..article.cc    void ParticleSwarm::Particle::update(', 'action__tagname': 'update'}, {'word': 'update', 'action__pattern': '\M^  void ParticleSwarm::update(const std::vector<double>& scores) {$', 'action__path': 'modules/optim/src/particle_swarm.cc', 'kind': 'jump_list', 'abbr': 'update                     @modules..e_swarm.cc    void ParticleSwarm::update(const std::vector<double>& scores) {', 'action__tagname': 'update'}, {'word': 'updateCannyDetection', 'action__pattern': '\M^void updateCannyDetection(double th1, double th2)$', 'action__path': 'ext/objective_functions/prog/showedge/main.cc', 'kind': 'jump_list', 'abbr': 'updateCannyDetection       @ext/obj..ge/main.cc  void updateCannyDetection(double th1, double th2)', 'action__tagname': 'updateCannyDetection'}, {'word': 'updateHashChain', 'action__pattern': '\M^static void updateHashChain(Hash* hash, size_t wpos, int hashval)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'updateHashChain            @ext/lod..odepng.cpp  static void updateHashChain(Hash* hash, size_t wpos, int hashval)', 'action__tagname': 'updateHashChain'}, {'word': 'updateTransformations', 'action__pattern': '\M^void Pipeline::updateTransformations()$', 'action__path': 'modules/gl/src/pipeline.cc', 'kind': 'jump_list', 'abbr': 'updateTransformations      @modules..ipeline.cc  void Pipeline::updateTransformations()', 'action__tagname': 'updateTransformations'}, {'word': 'update_adler32', 'action__pattern': '\M^static unsigned update_adler32(unsigned adler, const unsigned char* data, unsigned len)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'update_adler32             @ext/lod..odepng.cpp  static unsigned update_adler32(unsigned adler, const unsigned char* data, unsigned len)', 'action__tagname': 'update_adler32'}, {'word': 'usage', 'action__pattern': '\M^usage() {$', 'action__path': 'scripts/create_app', 'kind': 'jump_list', 'abbr': 'usage                      @scripts/create_app   usage() {', 'action__tagname': 'usage'}, {'word': 'use', 'action__pattern': '\M^    void use() { shader->use(); }$', 'action__path': 'modules/gl/include/background_shader.h', 'kind': 'jump_list', 'abbr': 'use                        @modules..d_shader.h      void use() { shader->use(); }', 'action__tagname': 'use'}, {'word': 'use', 'action__pattern': '\M^    void use() { shader->use(); }$', 'action__path': 'modules/gl/include/pose_shader.h', 'kind': 'jump_list', 'abbr': 'use                        @modules..e_shader.h      void use() { shader->use(); }', 'action__tagname': 'use'}, {'word': 'use', 'action__pattern': '\M^void ShaderProgram::use() {$', 'action__path': 'modules/gl/src/shader_program.cc', 'kind': 'jump_list', 'abbr': 'use                        @modules..program.cc  void ShaderProgram::use() {', 'action__tagname': 'use'}, {'word': 'use_lz77', 'action__pattern': '\M^  unsigned use_lz77; /*whether or not to use LZ77. Should be 1 for proper compression.*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'use_lz77                   @ext/lod../lodepng.h    unsigned use_lz77; \/*whether or not to use LZ77. Should be 1 for proper compression.*\/', 'action__tagname': 'use_lz77'}, {'word': 'usingCam', 'action__pattern': '\M^    bool usingCam;$', 'action__path': 'apps/pose_renderer/include/pose_renderer_options.h', 'kind': 'jump_list', 'abbr': 'usingCam                   @apps/po.._options.h      bool usingCam;', 'action__tagname': 'usingCam'}, {'word': 'usingCamera', 'action__pattern': '\M^    bool usingCamera() const { return usingCam; }$', 'action__path': 'apps/pose_renderer/include/pose_renderer_options.h', 'kind': 'jump_list', 'abbr': 'usingCamera                @apps/po.._options.h      bool usingCamera() const { return usingCam; }', 'action__tagname': 'usingCamera'}, {'word': 'util', 'action__pattern': '\M^namespace util {$', 'action__path': 'modules/io/include/json_reader_utils.h', 'kind': 'jump_list', 'abbr': 'util                       @modules..er_utils.h  namespace util {', 'action__tagname': 'util'}, {'word': 'util', 'action__pattern': '\M^namespace util {$', 'action__path': 'modules/io/include/json_writer_utils.h', 'kind': 'jump_list', 'abbr': 'util                       @modules..er_utils.h  namespace util {', 'action__tagname': 'util'}, {'word': 'util', 'action__pattern': '\M^namespace util {$', 'action__path': 'modules/io/src/json_reader_utils.cc', 'kind': 'jump_list', 'abbr': 'util                       @modules..r_utils.cc  namespace util {', 'action__tagname': 'util'}, {'word': 'util', 'action__pattern': '\M^namespace util {$', 'action__path': 'modules/io/src/json_writer_utils.cc', 'kind': 'jump_list', 'abbr': 'util                       @modules..r_utils.cc  namespace util {', 'action__tagname': 'util'}, {'word': 'v', 'action__pattern': '\M^    glm::vec2 u, v;$', 'action__path': 'modules/ml/include/depth_split_function.h', 'kind': 'jump_list', 'abbr': 'v                          @modules..function.h      glm::vec2 u, v;', 'action__tagname': 'v'}, {'word': 'vBuffer', 'action__pattern': '\M^    static const unsigned int vBuffer= 0;$', 'action__path': 'modules/gl/include/background_drawer.h', 'kind': 'jump_list', 'abbr': 'vBuffer                    @modules..d_drawer.h      static const unsigned int vBuffer= 0;', 'action__tagname': 'vBuffer'}, {'word': 'vLocation', 'action__pattern': '\M^    static const unsigned int vLocation = 0;$', 'action__path': 'modules/gl/include/background_drawer.h', 'kind': 'jump_list', 'abbr': 'vLocation                  @modules..d_drawer.h      static const unsigned int vLocation = 0;', 'action__tagname': 'vLocation'}, {'word': 'val', 'action__pattern': '\M^  int* val; /*circular pos to hash value*/$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'val                        @ext/lod..odepng.cpp    int* val; \/*circular pos to hash value*\/', 'action__tagname': 'val'}, {'word': 'vao', 'action__pattern': '\M^    GLuint vao;$', 'action__path': 'modules/gl/include/background_drawer.h', 'kind': 'jump_list', 'abbr': 'vao                        @modules..d_drawer.h      GLuint vao;', 'action__tagname': 'vao'}, {'word': 'var', 'action__pattern': '\M^double var(unsigned int dim) {$', 'action__path': 'apps/particle_swarm_demo/src/main.cc', 'kind': 'jump_list', 'abbr': 'var                        @apps/pa..rc/main.cc  double var(unsigned int dim) {', 'action__tagname': 'var'}, {'word': 'vec', 'action__pattern': '\M^    std::vector<double> vec;$', 'action__path': 'modules/core/include/hand_pose_27_dof.h', 'kind': 'jump_list', 'abbr': 'vec                        @modules..e_27_dof.h      std::vector<double> vec;', 'action__tagname': 'vec'}, {'word': 'vec', 'action__pattern': '\M^    std::vector<double> vec;$', 'action__path': 'modules/core/include/hand_pose_34_dof.h', 'kind': 'jump_list', 'abbr': 'vec                        @modules..e_34_dof.h      std::vector<double> vec;', 'action__tagname': 'vec'}, {'word': 'vel', 'action__pattern': '\M^        std::vector<double> vel;$', 'action__path': 'modules/optim/include/particle_swarm.h', 'kind': 'jump_list', 'abbr': 'vel                        @modules..le_swarm.h          std::vector<double> vel;', 'action__tagname': 'vel'}, {'word': 'verbose_print', 'action__pattern': '\M^verbose_print() {$', 'action__path': 'scripts/create_app', 'kind': 'jump_list', 'abbr': 'verbose_print              @scripts/create_app   verbose_print() {', 'action__tagname': 'verbose_print'}, {'word': 'vert', 'action__pattern': '\M^static const std::string vert = "                           \\n\\$', 'action__path': 'apps/depth_shader_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'vert                       @apps/de..rc/main.cc  static const std::string vert = "                           \\n\\', 'action__tagname': 'vert'}, {'word': 'vert', 'action__pattern': '\M^                             vert;$', 'action__path': 'modules/gl/include/pose_shader.h', 'kind': 'jump_list', 'abbr': 'vert                       @modules..e_shader.h                               vert;', 'action__tagname': 'vert'}, {'word': 'vert', 'action__pattern': '\M^const std::string PoseShader::vert = "                          \\n\\$', 'action__path': 'modules/gl/src/pose_shader.cc', 'kind': 'jump_list', 'abbr': 'vert                       @modules.._shader.cc  const std::string PoseShader::vert = "                          \\n\\', 'action__tagname': 'vert'}, {'word': 'vertShader', 'action__pattern': '\M^                  vertShader;$', 'action__path': 'apps/depth_shader_viewer/include/depth_shader_viewer_options.h', 'kind': 'jump_list', 'abbr': 'vertShader                 @apps/de.._options.h                    vertShader;', 'action__tagname': 'vertShader'}, {'word': 'vertShader', 'action__pattern': '\M^      std::string configFile, meshFile, poseFile, fragShader, vertShader;$', 'action__path': 'apps/multicam_mesh_viewer/include/mc_mesh_viewer_options.h', 'kind': 'jump_list', 'abbr': 'vertShader                 @apps/mu.._options.h        std::string configFile, meshFile, poseFile, fragShader, vertShader;', 'action__tagname': 'vertShader'}, {'word': 'vertShader', 'action__pattern': '\M^      std::string configFile, meshFile, fragShader, vertShader, restPose;$', 'action__path': 'apps/pose_viewer/include/pose_viewer_options.h', 'kind': 'jump_list', 'abbr': 'vertShader                 @apps/po.._options.h        std::string configFile, meshFile, fragShader, vertShader, restPose;', 'action__tagname': 'vertShader'}, {'word': 'vertShaders', 'action__pattern': '\M^    std::map<std::string, std::string> fragShaders, vertShaders;$', 'action__path': 'apps/pose_renderer/include/pose_renderer_options.h', 'kind': 'jump_list', 'abbr': 'vertShaders                @apps/po.._options.h      std::map<std::string, std::string> fragShaders, vertShaders;', 'action__tagname': 'vertShaders'}, {'word': 'vertices', 'action__pattern': '\M^    const std::vector<glm::vec3>& vertices;$', 'action__path': 'apps/sphere_model_optim/src/main.cc', 'kind': 'jump_list', 'abbr': 'vertices                   @apps/sp..rc/main.cc      const std::vector<glm::vec3>& vertices;', 'action__tagname': 'vertices'}, {'word': 'view', 'action__pattern': '\M^        glm::mat4 view;$', 'action__path': 'modules/core/include/camera_calibration.h', 'kind': 'jump_list', 'abbr': 'view                       @modules..ibration.h          glm::mat4 view;', 'action__tagname': 'view'}, {'word': 'view', 'action__pattern': '\M^    glm::mat4 view;$', 'action__path': 'modules/gl/include/camera.h', 'kind': 'jump_list', 'abbr': 'view                       @modules..e/camera.h      glm::mat4 view;', 'action__tagname': 'view'}, {'word': 'viewMatrices', 'action__pattern': '\M^    static const float viewMatrices[numCameras][16];$', 'action__path': 'modules/core/include/camera_calibration.h', 'kind': 'jump_list', 'abbr': 'viewMatrices               @modules..ibration.h      static const float viewMatrices[numCameras][16];', 'action__tagname': 'viewMatrices'}, {'word': 'viewMatrices', 'action__pattern': '\M^const float CameraCalibration::viewMatrices[numCameras][16] = {$', 'action__path': 'modules/core/src/camera_calibration.cc', 'kind': 'jump_list', 'abbr': 'viewMatrices               @modules..bration.cc  const float CameraCalibration::viewMatrices[numCameras][16] = {', 'action__tagname': 'viewMatrices'}, {'word': 'weight', 'action__pattern': '\M^  float weight; /*the sum of all weights in this coin*/$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'weight                     @ext/lod..odepng.cpp    float weight; \/*the sum of all weights in this coin*\/', 'action__tagname': 'weight'}, {'word': 'weight_', 'action__pattern': '\M^    std::vector<double> weight_;$', 'action__path': 'ext/objective_functions/xing/aig/camera_image_evaluator.hpp', 'kind': 'jump_list', 'abbr': 'weight_                    @ext/obj..luator.hpp      std::vector<double> weight_;', 'action__tagname': 'weight_'}, {'word': 'weights', 'action__pattern': '\M^    std::vector<std::map<std::string, double>> weights;$', 'action__path': 'modules/core/include/sphere_model.h', 'kind': 'jump_list', 'abbr': 'weights                    @modules..re_model.h      std::vector<std::map<std::string, double>> weights;', 'action__tagname': 'weights'}, {'word': 'weights', 'action__pattern': '\M^      float weights[NUM_BONES_PER_VERTEX];$', 'action__path': 'modules/gl/include/mesh.h', 'kind': 'jump_list', 'abbr': 'weights                    @modules..ude/mesh.h        float weights[NUM_BONES_PER_VERTEX];', 'action__tagname': 'weights'}, {'word': 'width', 'action__pattern': '\M^const unsigned int width = 320;$', 'action__path': 'apps/bmvc_project/src/main.cc', 'kind': 'jump_list', 'abbr': 'width                      @apps/bm..rc/main.cc  const unsigned int width = 320;', 'action__tagname': 'width'}, {'word': 'width', 'action__pattern': '\M^static unsigned int width = 640;$', 'action__path': 'apps/depth_shader_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'width                      @apps/de..rc/main.cc  static unsigned int width = 640;', 'action__tagname': 'width'}, {'word': 'width', 'action__pattern': '\M^static unsigned int width = 640;$', 'action__path': 'apps/edge_shader_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'width                      @apps/ed..rc/main.cc  static unsigned int width = 640;', 'action__tagname': 'width'}, {'word': 'width', 'action__pattern': '\M^static unsigned int width = 640;$', 'action__path': 'apps/gbuffer_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'width                      @apps/gb..rc/main.cc  static unsigned int width = 640;', 'action__tagname': 'width'}, {'word': 'width', 'action__pattern': '\M^const static unsigned int width = 640;$', 'action__path': 'apps/multicam_mesh_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'width                      @apps/mu..rc/main.cc  const static unsigned int width = 640;', 'action__tagname': 'width'}, {'word': 'width', 'action__pattern': '\M^int width, height;$', 'action__path': 'apps/particle_swarm_demo/src/main.cc', 'kind': 'jump_list', 'abbr': 'width                      @apps/pa..rc/main.cc  int width, height;', 'action__tagname': 'width'}, {'word': 'width', 'action__pattern': '\M^    int width, height;$', 'action__path': 'apps/pose_renderer/include/pose_renderer.h', 'kind': 'jump_list', 'abbr': 'width                      @apps/po..renderer.h      int width, height;', 'action__tagname': 'width'}, {'word': 'width', 'action__pattern': '\M^    int height, width;$', 'action__path': 'apps/pose_renderer/include/pose_renderer_options.h', 'kind': 'jump_list', 'abbr': 'width                      @apps/po.._options.h      int height, width;', 'action__tagname': 'width'}, {'word': 'width', 'action__pattern': '\M^  unsigned int width, height;$', 'action__path': 'modules/core/include/image.h', 'kind': 'jump_list', 'abbr': 'width                      @modules..de/image.h    unsigned int width, height;', 'action__tagname': 'width'}, {'word': 'width', 'action__pattern': '\M^    unsigned int width, height;$', 'action__path': 'modules/gl/include/offscreen_buffer.h', 'kind': 'jump_list', 'abbr': 'width                      @modules..n_buffer.h      unsigned int width, height;', 'action__tagname': 'width'}, {'word': 'window', 'action__pattern': '\M^    GLFWwindow* window;$', 'action__path': 'apps/bmvc_project/src/main.cc', 'kind': 'jump_list', 'abbr': 'window                     @apps/bm..rc/main.cc      GLFWwindow* window;', 'action__tagname': 'window'}, {'word': 'window', 'action__pattern': '\M^    GLFWwindow* window;$', 'action__path': 'apps/depth_shader_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'window                     @apps/de..rc/main.cc      GLFWwindow* window;', 'action__tagname': 'window'}, {'word': 'window', 'action__pattern': '\M^    GLFWwindow* window;$', 'action__path': 'apps/edge_shader_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'window                     @apps/ed..rc/main.cc      GLFWwindow* window;', 'action__tagname': 'window'}, {'word': 'window', 'action__pattern': '\M^    GLFWwindow* window;$', 'action__path': 'apps/gbuffer_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'window                     @apps/gb..rc/main.cc      GLFWwindow* window;', 'action__tagname': 'window'}, {'word': 'window', 'action__pattern': '\M^    GLFWwindow* window;$', 'action__path': 'apps/multicam_mesh_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'window                     @apps/mu..rc/main.cc      GLFWwindow* window;', 'action__tagname': 'window'}, {'word': 'window', 'action__pattern': '\M^      GLFWwindow* window;$', 'action__path': 'apps/particle_swarm_demo/src/main.cc', 'kind': 'jump_list', 'abbr': 'window                     @apps/pa..rc/main.cc        GLFWwindow* window;', 'action__tagname': 'window'}, {'word': 'window', 'action__pattern': '\M^    GLFWwindow* window;$', 'action__path': 'apps/pose_creator/src/main.cc', 'kind': 'jump_list', 'abbr': 'window                     @apps/po..rc/main.cc      GLFWwindow* window;', 'action__tagname': 'window'}, {'word': 'window', 'action__pattern': '\M^    GLFWwindow* window;$', 'action__path': 'apps/pose_renderer/include/pose_renderer.h', 'kind': 'jump_list', 'abbr': 'window                     @apps/po..renderer.h      GLFWwindow* window;', 'action__tagname': 'window'}, {'word': 'window', 'action__pattern': '\M^    GLFWwindow* window;$', 'action__path': 'apps/pose_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'window                     @apps/po..rc/main.cc      GLFWwindow* window;', 'action__tagname': 'window'}, {'word': 'window', 'action__pattern': '\M^      GLFWwindow* window;$', 'action__path': 'apps/skel_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': 'window                     @apps/sk..rc/main.cc        GLFWwindow* window;', 'action__tagname': 'window'}, {'word': 'windowName', 'action__pattern': '\M^std::string windowName;$', 'action__path': 'ext/objective_functions/prog/showedge/main.cc', 'kind': 'jump_list', 'abbr': 'windowName                 @ext/obj..ge/main.cc  std::string windowName;', 'action__tagname': 'windowName'}, {'word': 'windowsize', 'action__pattern': '\M^  unsigned windowsize; /*must be a power of two <= 32768. higher compresses more but is slower. Typical value: 2048.*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'windowsize                 @ext/lod../lodepng.h    unsigned windowsize; \/*must be a power of two <= 32768. higher compresses more but is slower. Typical value: 2048.*\/', 'action__tagname': 'windowsize'}, {'word': 'write', 'action__pattern': '\M^void JsonPoseWriter::write(const core::Pose<T>& p)$', 'action__path': 'modules/io/include/json_pose_writer.h', 'kind': 'jump_list', 'abbr': 'write                      @modules..e_writer.h  void JsonPoseWriter::write(const core::Pose<T>& p)', 'action__tagname': 'write'}, {'word': 'write', 'action__pattern': '\M^void SphereModelWriter::write(const core::SphereModel& model) {$', 'action__path': 'modules/io/src/sphere_model_writer.cc', 'kind': 'jump_list', 'abbr': 'write                      @modules.._writer.cc  void SphereModelWriter::write(const core::SphereModel& model) {', 'action__tagname': 'write'}, {'word': 'write', 'action__pattern': '\M^void DepthSplitFunction::write(std::ostream& os) {$', 'action__path': 'modules/ml/include/depth_split_function.h', 'kind': 'jump_list', 'abbr': 'write                      @modules..function.h  void DepthSplitFunction::write(std::ostream& os) {', 'action__tagname': 'write'}, {'word': 'write', 'action__pattern': '\M^void ScalarSplitFunction<Data>::write(std::ostream& os) {$', 'action__path': 'modules/ml/include/scalar_split_function.h', 'kind': 'jump_list', 'abbr': 'write                      @modules..function.h  void ScalarSplitFunction<Data>::write(std::ostream& os) {', 'action__tagname': 'write'}, {'word': 'writeLZ77data', 'action__pattern': '\M^static void writeLZ77data(size_t* bp, ucvector* out, const uivector* lz77_encoded,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'writeLZ77data              @ext/lod..odepng.cpp  static void writeLZ77data(size_t* bp, ucvector* out, const uivector* lz77_encoded,', 'action__tagname': 'writeLZ77data'}, {'word': 'writeSignature', 'action__pattern': '\M^static void writeSignature(ucvector* out)$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'writeSignature             @ext/lod..odepng.cpp  static void writeSignature(ucvector* out)', 'action__tagname': 'writeSignature'}, {'word': 'writeSpheres', 'action__pattern': '\M^Json::Value SphereModelWriter::writeSpheres(const core::SphereModel& model) {$', 'action__path': 'modules/io/src/sphere_model_writer.cc', 'kind': 'jump_list', 'abbr': 'writeSpheres               @modules.._writer.cc  Json::Value SphereModelWriter::writeSpheres(const core::SphereModel& model) {', 'action__tagname': 'writeSpheres'}, {'word': 'writeToSaveDir', 'action__pattern': '\M^void writeToSaveDir(const std::string& filename, const cv::Mat& img)$', 'action__path': 'ext/objective_functions/prog/depthseg/main.cc', 'kind': 'jump_list', 'abbr': 'writeToSaveDir             @ext/obj..eg/main.cc  void writeToSaveDir(const std::string& filename, const cv::Mat& img)', 'action__tagname': 'writeToSaveDir'}, {'word': 'writeToSaveDir', 'action__pattern': '\M^void writeToSaveDir(const cv::Mat& img, const std::string& oldName)$', 'action__path': 'ext/objective_functions/prog/erolation/main.cc', 'kind': 'jump_list', 'abbr': 'writeToSaveDir             @ext/obj..on/main.cc  void writeToSaveDir(const cv::Mat& img, const std::string& oldName)', 'action__tagname': 'writeToSaveDir'}, {'word': 'writeToSavePath', 'action__pattern': '\M^void writeToSavePath(const std::string& path,$', 'action__path': 'ext/objective_functions/prog/segimage/main.cc', 'kind': 'jump_list', 'abbr': 'writeToSavePath            @ext/obj..ge/main.cc  void writeToSavePath(const std::string& path,', 'action__tagname': 'writeToSavePath'}, {'word': 'writeWeights', 'action__pattern': '\M^Json::Value SphereModelWriter::writeWeights(const core::SphereModel& model) {$', 'action__path': 'modules/io/src/sphere_model_writer.cc', 'kind': 'jump_list', 'abbr': 'writeWeights               @modules.._writer.cc  Json::Value SphereModelWriter::writeWeights(const core::SphereModel& model) {', 'action__tagname': 'writeWeights'}, {'word': 'wvBuffer', 'action__pattern': '\M^    const unsigned int wvBuffer = 5;$', 'action__path': 'modules/gl/include/instanced_mesh_renderer.h', 'kind': 'jump_list', 'abbr': 'wvBuffer                   @modules..renderer.h      const unsigned int wvBuffer = 5;', 'action__tagname': 'wvBuffer'}, {'word': 'wvBuffer', 'action__pattern': '\M^    const unsigned int wvBuffer = 4;$', 'action__path': 'modules/gl/include/instanced_shape_renderer.h', 'kind': 'jump_list', 'abbr': 'wvBuffer                   @modules..renderer.h      const unsigned int wvBuffer = 4;', 'action__tagname': 'wvBuffer'}, {'word': 'wvLocation', 'action__pattern': '\M^    const unsigned int wvLocation = 11;$', 'action__path': 'modules/gl/include/instanced_mesh_renderer.h', 'kind': 'jump_list', 'abbr': 'wvLocation                 @modules..renderer.h      const unsigned int wvLocation = 11;', 'action__tagname': 'wvLocation'}, {'word': 'wvLocation', 'action__pattern': '\M^    const unsigned int wvLocation = 3;$', 'action__path': 'modules/gl/include/instanced_shape_renderer.h', 'kind': 'jump_list', 'abbr': 'wvLocation                 @modules..renderer.h      const unsigned int wvLocation = 3;', 'action__tagname': 'wvLocation'}, {'word': 'wvpBuffer', 'action__pattern': '\M^    const unsigned int wvpBuffer = 6;$', 'action__path': 'modules/gl/include/instanced_mesh_renderer.h', 'kind': 'jump_list', 'abbr': 'wvpBuffer                  @modules..renderer.h      const unsigned int wvpBuffer = 6;', 'action__tagname': 'wvpBuffer'}, {'word': 'wvpBuffer', 'action__pattern': '\M^    const unsigned int wvpBuffer = 5;$', 'action__path': 'modules/gl/include/instanced_shape_renderer.h', 'kind': 'jump_list', 'abbr': 'wvpBuffer                  @modules..renderer.h      const unsigned int wvpBuffer = 5;', 'action__tagname': 'wvpBuffer'}, {'word': 'wvpLocation', 'action__pattern': '\M^    const unsigned int wvpLocation = 15;$', 'action__path': 'modules/gl/include/instanced_mesh_renderer.h', 'kind': 'jump_list', 'abbr': 'wvpLocation                @modules..renderer.h      const unsigned int wvpLocation = 15;', 'action__tagname': 'wvpLocation'}, {'word': 'wvpLocation', 'action__pattern': '\M^    const unsigned int wvpLocation = 7;$', 'action__path': 'modules/gl/include/instanced_shape_renderer.h', 'kind': 'jump_list', 'abbr': 'wvpLocation                @modules..renderer.h      const unsigned int wvpLocation = 7;', 'action__tagname': 'wvpLocation'}, {'word': 'x', 'action__pattern': '\M^    int x, y;$', 'action__path': 'modules/ml/include/scalar_split_function.h', 'kind': 'jump_list', 'abbr': 'x                          @modules..function.h      int x, y;', 'action__tagname': 'x'}, {'word': 'xDis', 'action__pattern': '\M^    std::uniform_int_distribution<> xDis, yDis, thresDis;$', 'action__path': 'modules/ml/include/depth_split_function_factory.h', 'kind': 'jump_list', 'abbr': 'xDis                       @modules.._factory.h      std::uniform_int_distribution<> xDis, yDis, thresDis;', 'action__tagname': 'xDis'}, {'word': 'xing', 'action__pattern': '\M^namespace xing$', 'action__path': 'ext/objective_functions/prog/showedge/main.cc', 'kind': 'jump_list', 'abbr': 'xing                       @ext/obj..ge/main.cc  namespace xing', 'action__tagname': 'xing'}, {'word': 'xing', 'action__pattern': '\M^namespace xing$', 'action__path': 'ext/objective_functions/prog/showedge/showedge.hpp', 'kind': 'jump_list', 'abbr': 'xing                       @ext/obj..owedge.hpp  namespace xing', 'action__tagname': 'xing'}, {'word': 'xing', 'action__pattern': '\M^namespace xing$', 'action__path': 'ext/objective_functions/xing/aig/camera_image.cc', 'kind': 'jump_list', 'abbr': 'xing                       @ext/obj..a_image.cc  namespace xing', 'action__tagname': 'xing'}, {'word': 'xing', 'action__pattern': '\M^namespace xing$', 'action__path': 'ext/objective_functions/xing/aig/camera_image.hpp', 'kind': 'jump_list', 'abbr': 'xing                       @ext/obj.._image.hpp  namespace xing', 'action__tagname': 'xing'}, {'word': 'xing', 'action__pattern': '\M^namespace xing$', 'action__path': 'ext/objective_functions/xing/aig/camera_image_evaluator.cc', 'kind': 'jump_list', 'abbr': 'xing                       @ext/obj..aluator.cc  namespace xing', 'action__tagname': 'xing'}, {'word': 'xing', 'action__pattern': '\M^namespace xing$', 'action__path': 'ext/objective_functions/xing/aig/camera_image_evaluator.hpp', 'kind': 'jump_list', 'abbr': 'xing                       @ext/obj..luator.hpp  namespace xing', 'action__tagname': 'xing'}, {'word': 'xing', 'action__pattern': '\M^namespace xing$', 'action__path': 'ext/objective_functions/xing/aig/colour_detector.cc', 'kind': 'jump_list', 'abbr': 'xing                       @ext/obj..etector.cc  namespace xing', 'action__tagname': 'xing'}, {'word': 'xing', 'action__pattern': '\M^namespace xing$', 'action__path': 'ext/objective_functions/xing/aig/colour_detector.hpp', 'kind': 'jump_list', 'abbr': 'xing                       @ext/obj..tector.hpp  namespace xing', 'action__tagname': 'xing'}, {'word': 'xing', 'action__pattern': '\M^namespace xing$', 'action__path': 'ext/objective_functions/xing/aig/depth_evaluator.cc', 'kind': 'jump_list', 'abbr': 'xing                       @ext/obj..aluator.cc  namespace xing', 'action__tagname': 'xing'}, {'word': 'xing', 'action__pattern': '\M^namespace xing$', 'action__path': 'ext/objective_functions/xing/aig/depth_evaluator.hpp', 'kind': 'jump_list', 'abbr': 'xing                       @ext/obj..luator.hpp  namespace xing', 'action__tagname': 'xing'}, {'word': 'xing', 'action__pattern': '\M^namespace xing$', 'action__path': 'ext/objective_functions/xing/aig/depth_overlap_evaluator.cc', 'kind': 'jump_list', 'abbr': 'xing                       @ext/obj..aluator.cc  namespace xing', 'action__tagname': 'xing'}, {'word': 'xing', 'action__pattern': '\M^namespace xing$', 'action__path': 'ext/objective_functions/xing/aig/depth_overlap_evaluator.hpp', 'kind': 'jump_list', 'abbr': 'xing                       @ext/obj..luator.hpp  namespace xing', 'action__tagname': 'xing'}, {'word': 'xing', 'action__pattern': '\M^namespace xing$', 'action__path': 'ext/objective_functions/xing/aig/edge_distance_map.cc', 'kind': 'jump_list', 'abbr': 'xing                       @ext/obj..nce_map.cc  namespace xing', 'action__tagname': 'xing'}, {'word': 'xing', 'action__pattern': '\M^namespace xing$', 'action__path': 'ext/objective_functions/xing/aig/edge_distance_map.hpp', 'kind': 'jump_list', 'abbr': 'xing                       @ext/obj..ce_map.hpp  namespace xing', 'action__tagname': 'xing'}, {'word': 'xing', 'action__pattern': '\M^namespace xing$', 'action__path': 'ext/objective_functions/xing/aig/edge_evaluator.cc', 'kind': 'jump_list', 'abbr': 'xing                       @ext/obj..aluator.cc  namespace xing', 'action__tagname': 'xing'}, {'word': 'xing', 'action__pattern': '\M^namespace xing$', 'action__path': 'ext/objective_functions/xing/aig/edge_evaluator.hpp', 'kind': 'jump_list', 'abbr': 'xing                       @ext/obj..luator.hpp  namespace xing', 'action__tagname': 'xing'}, {'word': 'xing', 'action__pattern': '\M^namespace xing$', 'action__path': 'ext/objective_functions/xing/aig/silhouette_evaluator.cc', 'kind': 'jump_list', 'abbr': 'xing                       @ext/obj..aluator.cc  namespace xing', 'action__tagname': 'xing'}, {'word': 'xing', 'action__pattern': '\M^namespace xing$', 'action__path': 'ext/objective_functions/xing/aig/silhouette_evaluator.hpp', 'kind': 'jump_list', 'abbr': 'xing                       @ext/obj..luator.hpp  namespace xing', 'action__tagname': 'xing'}, {'word': 'y', 'action__pattern': '\M^    int x, y;$', 'action__path': 'modules/ml/include/scalar_split_function.h', 'kind': 'jump_list', 'abbr': 'y                          @modules..function.h      int x, y;', 'action__tagname': 'y'}, {'word': 'yDis', 'action__pattern': '\M^    std::uniform_int_distribution<> xDis, yDis, thresDis;$', 'action__path': 'modules/ml/include/depth_split_function_factory.h', 'kind': 'jump_list', 'abbr': 'yDis                       @modules.._factory.h      std::uniform_int_distribution<> xDis, yDis, thresDis;', 'action__tagname': 'yDis'}, {'word': 'year', 'action__pattern': '\M^  unsigned year;    /*2 bytes used (0-65535)*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'year                       @ext/lod../lodepng.h    unsigned year;    \/*2 bytes used (0-65535)*\/', 'action__tagname': 'year'}, {'word': 'zFar', 'action__pattern': '\M^      float zFar;$', 'action__path': 'modules/gl/include/pipeline.h', 'kind': 'jump_list', 'abbr': 'zFar                       @modules..pipeline.h        float zFar;', 'action__tagname': 'zFar'}, {'word': 'zNear', 'action__pattern': '\M^      float zNear;$', 'action__path': 'modules/gl/include/pipeline.h', 'kind': 'jump_list', 'abbr': 'zNear                      @modules..pipeline.h        float zNear;', 'action__tagname': 'zNear'}, {'word': 'zeros', 'action__pattern': '\M^  unsigned short* zeros;$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'zeros                      @ext/lod..odepng.cpp    unsigned short* zeros;', 'action__tagname': 'zeros'}, {'word': 'zlib_compress', 'action__pattern': '\M^static unsigned zlib_compress(unsigned char** out, size_t* outsize, const unsigned char* in,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'zlib_compress              @ext/lod..odepng.cpp  static unsigned zlib_compress(unsigned char** out, size_t* outsize, const unsigned char* in,', 'action__tagname': 'zlib_compress'}, {'word': 'zlib_decompress', 'action__pattern': '\M^static unsigned zlib_decompress(unsigned char** out, size_t* outsize, const unsigned char* in,$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': 'zlib_decompress            @ext/lod..odepng.cpp  static unsigned zlib_decompress(unsigned char** out, size_t* outsize, const unsigned char* in,', 'action__tagname': 'zlib_decompress'}, {'word': 'zlibsettings', 'action__pattern': '\M^  LodePNGCompressSettings zlibsettings; /*settings for the zlib encoder, such as window size, ...*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'zlibsettings               @ext/lod../lodepng.h    LodePNGCompressSettings zlibsettings; \/*settings for the zlib encoder, such as window size, ...*\/', 'action__tagname': 'zlibsettings'}, {'word': 'zlibsettings', 'action__pattern': '\M^  LodePNGDecompressSettings zlibsettings; /*in here is the setting to ignore Adler32 checksums*/$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': 'zlibsettings               @ext/lod../lodepng.h    LodePNGDecompressSettings zlibsettings; \/*in here is the setting to ignore Adler32 checksums*\/', 'action__tagname': 'zlibsettings'}, {'word': '~BackgroundDrawer', 'action__pattern': '\M^BackgroundDrawer::~BackgroundDrawer() {$', 'action__path': 'modules/gl/src/background_drawer.cc', 'kind': 'jump_list', 'abbr': '~BackgroundDrawer          @modules.._drawer.cc  BackgroundDrawer::~BackgroundDrawer() {', 'action__tagname': '~BackgroundDrawer'}, {'word': '~GBuffer', 'action__pattern': '\M^GBuffer::~GBuffer() {$', 'action__path': 'modules/gl/src/gbuffer.cc', 'kind': 'jump_list', 'abbr': '~GBuffer                   @modules..gbuffer.cc  GBuffer::~GBuffer() {', 'action__tagname': '~GBuffer'}, {'word': '~HumanEvaPoseReader', 'action__pattern': '\M^HumanEvaPoseReader::~HumanEvaPoseReader() {$', 'action__path': 'modules/io/src/humaneva_pose_reader.cc', 'kind': 'jump_list', 'abbr': '~HumanEvaPoseReader        @modules.._reader.cc  HumanEvaPoseReader::~HumanEvaPoseReader() {', 'action__tagname': '~HumanEvaPoseReader'}, {'word': '~InstancedMeshRenderer', 'action__pattern': '\M^InstancedMeshRenderer::~InstancedMeshRenderer() {$', 'action__path': 'modules/gl/src/instanced_mesh_renderer.cc', 'kind': 'jump_list', 'abbr': '~InstancedMeshRenderer     @modules..enderer.cc  InstancedMeshRenderer::~InstancedMeshRenderer() {', 'action__tagname': '~InstancedMeshRenderer'}, {'word': '~InstancedShapeRenderer', 'action__pattern': '\M^InstancedShapeRenderer<Shape>::~InstancedShapeRenderer() {$', 'action__path': 'modules/gl/include/instanced_shape_renderer.h', 'kind': 'jump_list', 'abbr': '~InstancedShapeRenderer    @modules..renderer.h  InstancedShapeRenderer<Shape>::~InstancedShapeRenderer() {', 'action__tagname': '~InstancedShapeRenderer'}, {'word': '~JsonPoseReader', 'action__pattern': '\M^JsonPoseReader<T>::~JsonPoseReader() {$', 'action__path': 'modules/io/include/json_pose_reader.h', 'kind': 'jump_list', 'abbr': '~JsonPoseReader            @modules..e_reader.h  JsonPoseReader<T>::~JsonPoseReader() {', 'action__tagname': '~JsonPoseReader'}, {'word': '~JsonPoseWriter', 'action__pattern': '\M^JsonPoseWriter::~JsonPoseWriter() {$', 'action__path': 'modules/io/src/json_pose_writer.cc', 'kind': 'jump_list', 'abbr': '~JsonPoseWriter            @modules.._writer.cc  JsonPoseWriter::~JsonPoseWriter() {', 'action__tagname': '~JsonPoseWriter'}, {'word': '~LodePNGState', 'action__pattern': '\M^  virtual ~LodePNGState(){}$', 'action__path': 'ext/lodepng/lodepng.h', 'kind': 'jump_list', 'abbr': '~LodePNGState              @ext/lod../lodepng.h    virtual ~LodePNGState(){}', 'action__tagname': '~LodePNGState'}, {'word': '~MeshRenderer', 'action__pattern': '\M^MeshRenderer::~MeshRenderer() {$', 'action__path': 'modules/gl/src/mesh_renderer.cc', 'kind': 'jump_list', 'abbr': '~MeshRenderer              @modules..enderer.cc  MeshRenderer::~MeshRenderer() {', 'action__tagname': '~MeshRenderer'}, {'word': '~OffscreenBuffer', 'action__pattern': '\M^OffscreenBuffer::~OffscreenBuffer() {$', 'action__path': 'modules/gl/src/offscreen_buffer.cc', 'kind': 'jump_list', 'abbr': '~OffscreenBuffer           @modules.._buffer.cc  OffscreenBuffer::~OffscreenBuffer() {', 'action__tagname': '~OffscreenBuffer'}, {'word': '~ParticleSwarmDemo', 'action__pattern': '\M^      ~ParticleSwarmDemo() {$', 'action__path': 'apps/particle_swarm_demo/src/main.cc', 'kind': 'jump_list', 'abbr': '~ParticleSwarmDemo         @apps/pa..rc/main.cc        ~ParticleSwarmDemo() {', 'action__tagname': '~ParticleSwarmDemo'}, {'word': '~PoseReader', 'action__pattern': '\M^inline PoseReader<T>::~PoseReader() { }$', 'action__path': 'modules/io/include/pose_reader.h', 'kind': 'jump_list', 'abbr': '~PoseReader                @modules..e_reader.h  inline PoseReader<T>::~PoseReader() { }', 'action__tagname': '~PoseReader'}, {'word': '~Shader', 'action__pattern': '\M^Shader::~Shader() {$', 'action__path': 'modules/gl/src/shader.cc', 'kind': 'jump_list', 'abbr': '~Shader                    @modules../shader.cc  Shader::~Shader() {', 'action__tagname': '~Shader'}, {'word': '~ShaderProgram', 'action__pattern': '\M^ShaderProgram::~ShaderProgram() {$', 'action__path': 'modules/gl/src/shader_program.cc', 'kind': 'jump_list', 'abbr': '~ShaderProgram             @modules..program.cc  ShaderProgram::~ShaderProgram() {', 'action__tagname': '~ShaderProgram'}, {'word': '~ShapeRenderer', 'action__pattern': '\M^ShapeRenderer<Shape>::~ShapeRenderer() {$', 'action__path': 'modules/gl/src/shape_renderer.cc', 'kind': 'jump_list', 'abbr': '~ShapeRenderer             @modules..enderer.cc  ShapeRenderer<Shape>::~ShapeRenderer() {', 'action__tagname': '~ShapeRenderer'}, {'word': '~SkelViewer', 'action__pattern': '\M^      ~SkelViewer() {$', 'action__path': 'apps/skel_viewer/src/main.cc', 'kind': 'jump_list', 'abbr': '~SkelViewer                @apps/sk..rc/main.cc        ~SkelViewer() {', 'action__tagname': '~SkelViewer'}, {'word': '~SphReader', 'action__pattern': '\M^SphReader::~SphReader() {$', 'action__path': 'modules/io/src/sph_reader.cc', 'kind': 'jump_list', 'abbr': '~SphReader                 @modules.._reader.cc  SphReader::~SphReader() {', 'action__tagname': '~SphReader'}, {'word': '~SphereModelReader', 'action__pattern': '\M^SphereModelReader::~SphereModelReader() {$', 'action__path': 'modules/io/src/sphere_model_reader.cc', 'kind': 'jump_list', 'abbr': '~SphereModelReader         @modules.._reader.cc  SphereModelReader::~SphereModelReader() {', 'action__tagname': '~SphereModelReader'}, {'word': '~SphereModelWriter', 'action__pattern': '\M^SphereModelWriter::~SphereModelWriter() {$', 'action__path': 'modules/io/src/sphere_model_writer.cc', 'kind': 'jump_list', 'abbr': '~SphereModelWriter         @modules.._writer.cc  SphereModelWriter::~SphereModelWriter() {', 'action__tagname': '~SphereModelWriter'}, {'word': '~State', 'action__pattern': '\M^State::~State()$', 'action__path': 'ext/lodepng/lodepng.cpp', 'kind': 'jump_list', 'abbr': '~State                     @ext/lod..odepng.cpp  State::~State()', 'action__tagname': '~State'}, {'word': '~TangPoseReader', 'action__pattern': '\M^TangPoseReader::~TangPoseReader() {$', 'action__path': 'modules/io/src/tang_pose_reader.cc', 'kind': 'jump_list', 'abbr': '~TangPoseReader            @modules.._reader.cc  TangPoseReader::~TangPoseReader() {', 'action__tagname': '~TangPoseReader'}, {'word': '~Texture', 'action__pattern': '\M^    ~Texture() {$', 'action__path': 'modules/gl/include/texture.h', 'kind': 'jump_list', 'abbr': '~Texture                   @modules../texture.h      ~Texture() {', 'action__tagname': '~Texture'}, {'word': '~WenpingPoseReader', 'action__pattern': '\M^WenpingPoseReader::~WenpingPoseReader() {$', 'action__path': 'modules/io/src/wenping_pose_reader.cc', 'kind': 'jump_list', 'abbr': '~WenpingPoseReader         @modules.._reader.cc  WenpingPoseReader::~WenpingPoseReader() {', 'action__tagname': '~WenpingPoseReader'}], 'time': 1425336735}
